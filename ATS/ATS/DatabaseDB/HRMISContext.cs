using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace ATS.DatabaseDB
{
    public partial class HRMISContext : DbContext
    {
        public HRMISContext()
        {
        }

        public HRMISContext(DbContextOptions<HRMISContext> options)
            : base(options)
        {
        }
     
        public virtual DbSet<InterviewrsDept> InterviewrsDepts { get; set; } = null!;
        public virtual DbSet<Department> Departments { get; set; } = null!;
        public virtual DbSet<AccessLevel> AccessLevels { get; set; } = null!;
        public virtual DbSet<ActiveempDatum> ActiveempData { get; set; } = null!;
        public virtual DbSet<AllHead> AllHeads { get; set; } = null!;
        public virtual DbSet<AmTrainerMaster> AmTrainerMasters { get; set; } = null!;
        public virtual DbSet<AppraisalList> AppraisalLists { get; set; } = null!;
        public virtual DbSet<AssesmentResult> AssesmentResults { get; set; } = null!;
        public virtual DbSet<Att> Atts { get; set; } = null!;
        public virtual DbSet<AttBackup> AttBackups { get; set; } = null!;
        public virtual DbSet<AttendanceStatusType> AttendanceStatusTypes { get; set; } = null!;
        public virtual DbSet<AttendanceType> AttendanceTypes { get; set; } = null!;
        public virtual DbSet<BangaloreBiometric> BangaloreBiometrics { get; set; } = null!;
        public virtual DbSet<BioLog> BioLogs { get; set; } = null!;
        public virtual DbSet<BioLogBackup> BioLogBackups { get; set; } = null!;
        public virtual DbSet<BioLogOpo107317> BioLogOpo107317s { get; set; } = null!;
        public virtual DbSet<BioStatus> BioStatuses { get; set; } = null!;
        public virtual DbSet<CandiTest> CandiTests { get; set; } = null!;
        public virtual DbSet<CandidateImage> CandidateImages { get; set; } = null!;
        public virtual DbSet<ChequeDetail> ChequeDetails { get; set; } = null!;
        public virtual DbSet<ChequeDetailedLogTrg> ChequeDetailedLogTrgs { get; set; } = null!;
        public virtual DbSet<ChequeDetailedLogTrgBackup> ChequeDetailedLogTrgBackups { get; set; } = null!;
        public virtual DbSet<ChequeDetailsDemo> ChequeDetailsDemos { get; set; } = null!;
        public virtual DbSet<ChequeDetailsLog> ChequeDetailsLogs { get; set; } = null!;
        public virtual DbSet<CompOffMaster> CompOffMasters { get; set; } = null!;
        public virtual DbSet<ConfirmationList> ConfirmationLists { get; set; } = null!;
        public virtual DbSet<ConsultancyMaster> ConsultancyMasters { get; set; } = null!;
        public virtual DbSet<DeclareHoliday> DeclareHolidays { get; set; } = null!;
        public virtual DbSet<DepartmentalInterviewQa> DepartmentalInterviewQas { get; set; } = null!;
        public virtual DbSet<DepartmentalViewResult> DepartmentalViewResults { get; set; } = null!;
        public virtual DbSet<DeptMaster> DeptMasters { get; set; } = null!;
        public virtual DbSet<DeptTable> DeptTables { get; set; } = null!;
        public virtual DbSet<DeptTable20230614> DeptTable20230614s { get; set; } = null!;
        public virtual DbSet<DeptTable20230701> DeptTable20230701s { get; set; } = null!;
        public virtual DbSet<DeptTable20230705> DeptTable20230705s { get; set; } = null!;
        public virtual DbSet<DeptTableHindware> DeptTableHindwares { get; set; } = null!;
        public virtual DbSet<DeptTableOndc20231215> DeptTableOndc20231215s { get; set; } = null!;
        public virtual DbSet<DesignationWiseLevel> DesignationWiseLevels { get; set; } = null!;
        public virtual DbSet<DesignationWiseWocount> DesignationWiseWocounts { get; set; } = null!;
        public virtual DbSet<DesignationWiseWocount20230526> DesignationWiseWocount20230526s { get; set; } = null!;
        public virtual DbSet<DesignationWiseWocountHd> DesignationWiseWocountHds { get; set; } = null!;
        public virtual DbSet<DocAbbrv> DocAbbrvs { get; set; } = null!;
        public virtual DbSet<DocUploadLog> DocUploadLogs { get; set; } = null!;
        public virtual DbSet<DocUploadLogBackup> DocUploadLogBackups { get; set; } = null!;
        public virtual DbSet<DocumentDetail> DocumentDetails { get; set; } = null!;
        public virtual DbSet<DocumentsHistory> DocumentsHistories { get; set; } = null!;
        public virtual DbSet<DojHandoverUpdate> DojHandoverUpdates { get; set; } = null!;
        public virtual DbSet<Email> Emails { get; set; } = null!;
        public virtual DbSet<EmailVerifyDetail> EmailVerifyDetails { get; set; } = null!;
        public virtual DbSet<EmpBeneficiaryDetail> EmpBeneficiaryDetails { get; set; } = null!;
        public virtual DbSet<EmpComplaint> EmpComplaints { get; set; } = null!;
        public virtual DbSet<EmpComplaintsLog> EmpComplaintsLogs { get; set; } = null!;
        public virtual DbSet<EmpComplaintsTran> EmpComplaintsTrans { get; set; } = null!;
        public virtual DbSet<EmpComplaintsTransLog> EmpComplaintsTransLogs { get; set; } = null!;
        public virtual DbSet<EmpDeactivationDetail> EmpDeactivationDetails { get; set; } = null!;
        public virtual DbSet<EmpDocument> EmpDocuments { get; set; } = null!;
        public virtual DbSet<EmpDoh20230621> EmpDoh20230621s { get; set; } = null!;
        public virtual DbSet<EmpDoj> EmpDojs { get; set; } = null!;
        public virtual DbSet<EmpMaster> EmpMasters { get; set; } = null!;
        public virtual DbSet<EmpMaster20230621> EmpMaster20230621s { get; set; } = null!;
        public virtual DbSet<EmpMasterBkp20231012> EmpMasterBkp20231012s { get; set; } = null!;
        public virtual DbSet<EmpMasterDateTill30June2023> EmpMasterDateTill30June2023s { get; set; } = null!;
        public virtual DbSet<EmpMasterLog> EmpMasterLogs { get; set; } = null!;
        public virtual DbSet<EmpMasterTpo> EmpMasterTpos { get; set; } = null!;
        public virtual DbSet<EmpMasterTpoLog> EmpMasterTpoLogs { get; set; } = null!;
        public virtual DbSet<EmpStatusDetail> EmpStatusDetails { get; set; } = null!;
        public virtual DbSet<EmpcodeMissing> EmpcodeMissings { get; set; } = null!;
        public virtual DbSet<Employee> Employees { get; set; } = null!;
        public virtual DbSet<EmployeeMailId> EmployeeMailIds { get; set; } = null!;
        public virtual DbSet<Empmaster20> Empmaster20s { get; set; } = null!;
        public virtual DbSet<EmpmasterLogsBackup> EmpmasterLogsBackups { get; set; } = null!;
        public virtual DbSet<EmpmasterOldFormat> EmpmasterOldFormats { get; set; } = null!;
        public virtual DbSet<EmpmasterResignationUpdateLog> EmpmasterResignationUpdateLogs { get; set; } = null!;
        public virtual DbSet<Empuploadetail> Empuploadetails { get; set; } = null!;
        public virtual DbSet<EssAdminDesk> EssAdminDesks { get; set; } = null!;
        public virtual DbSet<EssAttendanceRequest> EssAttendanceRequests { get; set; } = null!;
        public virtual DbSet<EssEmpFeedback> EssEmpFeedbacks { get; set; } = null!;
        public virtual DbSet<EssEmpFlagMaster> EssEmpFlagMasters { get; set; } = null!;
        public virtual DbSet<EssEmpOpening> EssEmpOpenings { get; set; } = null!;
        public virtual DbSet<EssEmpOpeningCategory> EssEmpOpeningCategories { get; set; } = null!;
        public virtual DbSet<EssHraccess> EssHraccesses { get; set; } = null!;
        public virtual DbSet<EssLmFlagMaster> EssLmFlagMasters { get; set; } = null!;
        public virtual DbSet<EssNewJoinee> EssNewJoinees { get; set; } = null!;
        public virtual DbSet<EssReasonMaster> EssReasonMasters { get; set; } = null!;
        public virtual DbSet<EssReferFrnd> EssReferFrnds { get; set; } = null!;
        public virtual DbSet<EssResignationTran> EssResignationTrans { get; set; } = null!;
        public virtual DbSet<EssShiftTime> EssShiftTimes { get; set; } = null!;
        public virtual DbSet<EssShiftstatus> EssShiftstatuses { get; set; } = null!;
        public virtual DbSet<EssSuggestion> EssSuggestions { get; set; } = null!;
        public virtual DbSet<EssToDoList> EssToDoLists { get; set; } = null!;
        public virtual DbSet<EssTransferEmpLog> EssTransferEmpLogs { get; set; } = null!;
        public virtual DbSet<ExperienceDetail> ExperienceDetails { get; set; } = null!;
        public virtual DbSet<FeMaster> FeMasters { get; set; } = null!;
        public virtual DbSet<FingerPrintDataFace> FingerPrintDataFaces { get; set; } = null!;
        public virtual DbSet<FingerPrintDataLog> FingerPrintDataLogs { get; set; } = null!;
        public virtual DbSet<FingerPrintDataMissingempcode> FingerPrintDataMissingempcodes { get; set; } = null!;
        public virtual DbSet<FingerPrintDatum> FingerPrintData { get; set; } = null!;
        public virtual DbSet<FlagDetail> FlagDetails { get; set; } = null!;
        public virtual DbSet<FormMaster> FormMasters { get; set; } = null!;
        public virtual DbSet<Fyear> Fyears { get; set; } = null!;
        public virtual DbSet<Hdl> Hdls { get; set; } = null!;
        public virtual DbSet<HolidayList> HolidayLists { get; set; } = null!;
        public virtual DbSet<HolidayList20231215> HolidayList20231215s { get; set; } = null!;
        public virtual DbSet<HolidayTblNew> HolidayTblNews { get; set; } = null!;
        public virtual DbSet<HoroscopeMaster> HoroscopeMasters { get; set; } = null!;
        public virtual DbSet<HrAppraisal> HrAppraisals { get; set; } = null!;
        public virtual DbSet<HrApproval> HrApprovals { get; set; } = null!;
        public virtual DbSet<HrDepartmentLogInAccess> HrDepartmentLogInAccesses { get; set; } = null!;
        public virtual DbSet<HrProcessQa> HrProcessQas { get; set; } = null!;
        public virtual DbSet<HrProcessResult> HrProcessResults { get; set; } = null!;
        public virtual DbSet<HrProcessResultDeleted> HrProcessResultDeleteds { get; set; } = null!;
        public virtual DbSet<HrRecruitmentDetail> HrRecruitmentDetails { get; set; } = null!;
        public virtual DbSet<HrRecruitmentDetailsLog> HrRecruitmentDetailsLogs { get; set; } = null!;
        public virtual DbSet<HrRecruitmentDetailsLogsChange> HrRecruitmentDetailsLogsChanges { get; set; } = null!;
        public virtual DbSet<HrRequisition> HrRequisitions { get; set; } = null!;
        public virtual DbSet<HrRequisitionLanguage> HrRequisitionLanguages { get; set; } = null!;
        public virtual DbSet<HrmisFormAccess> HrmisFormAccesses { get; set; } = null!;
        public virtual DbSet<HrmisFormAccess2230526> HrmisFormAccess2230526s { get; set; } = null!;
        public virtual DbSet<HrmisFormAccessActInactFormBkp> HrmisFormAccessActInactFormBkps { get; set; } = null!;
        public virtual DbSet<HrmisLocationAccess> HrmisLocationAccesses { get; set; } = null!;
        public virtual DbSet<HrmisLocationAccessBk> HrmisLocationAccessBks { get; set; } = null!;
        public virtual DbSet<HrmisLocationAccessGgn3NamesReomve> HrmisLocationAccessGgn3NamesReomves { get; set; } = null!;
        public virtual DbSet<HrmisStateMaster> HrmisStateMasters { get; set; } = null!;
        public virtual DbSet<HrmisStatus> HrmisStatuses { get; set; } = null!;
        public virtual DbSet<HrmisTrainingStatus> HrmisTrainingStatuses { get; set; } = null!;
        public virtual DbSet<HrmisTrainingSubStatus> HrmisTrainingSubStatuses { get; set; } = null!;
        public virtual DbSet<HrreportUser> HrreportUsers { get; set; } = null!;
        public virtual DbSet<InternalComplaintsCommitteeMaster> InternalComplaintsCommitteeMasters { get; set; } = null!;
        public virtual DbSet<InterviewAssignedTo> InterviewAssignedTos { get; set; } = null!;
        public virtual DbSet<InterviewAssignedToDeleted> InterviewAssignedToDeleteds { get; set; } = null!;
        public virtual DbSet<InterviewerDetail> InterviewerDetails { get; set; } = null!;
        public virtual DbSet<InterviewerEmailDetail> InterviewerEmailDetails { get; set; } = null!;
        public virtual DbSet<InvCrmDetailsRemove> InvCrmDetailsRemoves { get; set; } = null!;
        public virtual DbSet<InvIssueTrackerRemove> InvIssueTrackerRemoves { get; set; } = null!;
        public virtual DbSet<InvProcessRemove> InvProcessRemoves { get; set; } = null!;
        public virtual DbSet<InvSubprocessReomve> InvSubprocessReomves { get; set; } = null!;
        public virtual DbSet<IpAddress> IpAddresses { get; set; } = null!;
        public virtual DbSet<IpBlr> IpBlrs { get; set; } = null!;
        public virtual DbSet<JobMela> JobMelas { get; set; } = null!;
        public virtual DbSet<JobPosting> JobPostings { get; set; } = null!;
        public virtual DbSet<JobTitleMaster> JobTitleMasters { get; set; } = null!;
        public virtual DbSet<Language> Languages { get; set; } = null!;
        public virtual DbSet<LanguageStatus> LanguageStatuses { get; set; } = null!;
        public virtual DbSet<LanguagesMaster> LanguagesMasters { get; set; } = null!;
        public virtual DbSet<LeaveMaster> LeaveMasters { get; set; } = null!;
       
        public virtual DbSet<LeaveTracker> LeaveTrackers { get; set; } = null!;
        public virtual DbSet<LeaveTrackerLog> LeaveTrackerLogs { get; set; } = null!;
        public virtual DbSet<LeavedetailsRemove> LeavedetailsRemoves { get; set; } = null!;
        public virtual DbSet<Location> Locations { get; set; } = null!;
        public virtual DbSet<LocationMaster> LocationMasters { get; set; } = null!;
        public virtual DbSet<LoginLog> LoginLogs { get; set; } = null!;
        public virtual DbSet<MomAnswerMaster> MomAnswerMasters { get; set; } = null!;
        public virtual DbSet<MomEmpDataLog> MomEmpDataLogs { get; set; } = null!;
        public virtual DbSet<MomEmpDatum> MomEmpData { get; set; } = null!;
        public virtual DbSet<MomQuestionMaster> MomQuestionMasters { get; set; } = null!;
        public virtual DbSet<MomQuestionMasterLog> MomQuestionMasterLogs { get; set; } = null!;
        public virtual DbSet<NewJoineeLmdetail> NewJoineeLmdetails { get; set; } = null!;
        public virtual DbSet<Notification> Notifications { get; set; } = null!;
        public virtual DbSet<OpenCloseDeviation> OpenCloseDeviations { get; set; } = null!;
        public virtual DbSet<OpoactiveEmailList> OpoactiveEmailLists { get; set; } = null!;
        public virtual DbSet<Otpdetail> Otpdetails { get; set; } = null!;
        public virtual DbSet<OutdoorCompaignDetail> OutdoorCompaignDetails { get; set; } = null!;
        public virtual DbSet<Pfuandatum> Pfuandata { get; set; } = null!;
        public virtual DbSet<PipHistory> PipHistories { get; set; } = null!;
        public virtual DbSet<PmssystemMaster> PmssystemMasters { get; set; } = null!;
        public virtual DbSet<PoshEmpAnswerDetail> PoshEmpAnswerDetails { get; set; } = null!;
        public virtual DbSet<PoshQa> PoshQas { get; set; } = null!;
        public virtual DbSet<PoshQuestionMaster> PoshQuestionMasters { get; set; } = null!;
        public virtual DbSet<PoshTest> PoshTests { get; set; } = null!;
        public virtual DbSet<PoshTestDone> PoshTestDones { get; set; } = null!;
        public virtual DbSet<Poshresult> Poshresults { get; set; } = null!;
        public virtual DbSet<Position> Positions { get; set; } = null!;
        public virtual DbSet<Preapproved> Preapproveds { get; set; } = null!;
        public virtual DbSet<ProbationCheck> ProbationChecks { get; set; } = null!;
        public virtual DbSet<ProbationCheckMailtobesend> ProbationCheckMailtobesends { get; set; } = null!;
        public virtual DbSet<ProbationCheckMailtobesendDuplicate> ProbationCheckMailtobesendDuplicates { get; set; } = null!;
        public virtual DbSet<ProcessMaster> ProcessMasters { get; set; } = null!;
        public virtual DbSet<ProcessMaster1> ProcessMasters1 { get; set; } = null!;
        public virtual DbSet<ProcessTbl> ProcessTbls { get; set; } = null!;
        public virtual DbSet<ProcessTblBkup> ProcessTblBkups { get; set; } = null!;
        public virtual DbSet<PurposeMaster> PurposeMasters { get; set; } = null!;
        public virtual DbSet<QualificationMaster> QualificationMasters { get; set; } = null!;
        public virtual DbSet<RAttAcceptRosterRemove> RAttAcceptRosterRemoves { get; set; } = null!;
        public virtual DbSet<RAttRemove> RAttRemoves { get; set; } = null!;
        public virtual DbSet<RaAccessMasterRemove> RaAccessMasterRemoves { get; set; } = null!;
        public virtual DbSet<RaDeptMasterRemove> RaDeptMasterRemoves { get; set; } = null!;
        public virtual DbSet<RaLocationMasterRemove> RaLocationMasterRemoves { get; set; } = null!;
        public virtual DbSet<RaProcessMasterRemove> RaProcessMasterRemoves { get; set; } = null!;
        public virtual DbSet<RaReportmasterRemove> RaReportmasterRemoves { get; set; } = null!;
        public virtual DbSet<RaSqlserverIpaddRemove> RaSqlserverIpaddRemoves { get; set; } = null!;
        public virtual DbSet<RaSubDeptMasterRemove> RaSubDeptMasterRemoves { get; set; } = null!;
        public virtual DbSet<RecrDocumentsHistory> RecrDocumentsHistories { get; set; } = null!;
        public virtual DbSet<RefAsk> RefAsks { get; set; } = null!;
        public virtual DbSet<RefCandidateByEmployee> RefCandidateByEmployees { get; set; } = null!;
        public virtual DbSet<RefCandidateByEmployeeActive> RefCandidateByEmployeeActives { get; set; } = null!;
        public virtual DbSet<RefCategory> RefCategories { get; set; } = null!;
        public virtual DbSet<RefIjpactive> RefIjpactives { get; set; } = null!;
        public virtual DbSet<RefIjpapply> RefIjpapplies { get; set; } = null!;
        public virtual DbSet<RefPositionApplied> RefPositionApplieds { get; set; } = null!;
        public virtual DbSet<RefSubcategory> RefSubcategories { get; set; } = null!;
        public virtual DbSet<Reference> References { get; set; } = null!;
        public virtual DbSet<RelievingLetter> RelievingLetters { get; set; } = null!;
        public virtual DbSet<RelievingLetterLog> RelievingLetterLogs { get; set; } = null!;
        public virtual DbSet<RequisitionHrdata20230601> RequisitionHrdata20230601s { get; set; } = null!;
        public virtual DbSet<RequisitionHrdatum> RequisitionHrdata { get; set; } = null!;
        public virtual DbSet<ResignationDemoMaster> ResignationDemoMasters { get; set; } = null!;
        public virtual DbSet<ResignationMaster> ResignationMasters { get; set; } = null!;
        public virtual DbSet<ResignationMaster1> ResignationMasters1 { get; set; } = null!;
        public virtual DbSet<Reward> Rewards { get; set; } = null!;
        public virtual DbSet<Reward202223> Reward202223s { get; set; } = null!;
        public virtual DbSet<RewardLog> RewardLogs { get; set; } = null!;
        public virtual DbSet<RewardNandini202223> RewardNandini202223s { get; set; } = null!;
        public virtual DbSet<RewardVarsha> RewardVarshas { get; set; } = null!;
        public virtual DbSet<RollMaster> RollMasters { get; set; } = null!;
        public virtual DbSet<RollUserMaster> RollUserMasters { get; set; } = null!;
        public virtual DbSet<RosterDetail> RosterDetails { get; set; } = null!;
        public virtual DbSet<RosterDetails20230607> RosterDetails20230607s { get; set; } = null!;
        public virtual DbSet<RosterDetailsDeleted20230908> RosterDetailsDeleted20230908s { get; set; } = null!;
        public virtual DbSet<RosterDetailsLog> RosterDetailsLogs { get; set; } = null!;
        public virtual DbSet<RosterDetailsNewRemove> RosterDetailsNewRemoves { get; set; } = null!;
        public virtual DbSet<RosterDetailsOpo099845> RosterDetailsOpo099845s { get; set; } = null!;
        public virtual DbSet<Salary20230513> Salary20230513s { get; set; } = null!;
        public virtual DbSet<SalaryAnneBkup> SalaryAnneBkups { get; set; } = null!;
        public virtual DbSet<SalaryAnnexure> SalaryAnnexures { get; set; } = null!;
        public virtual DbSet<SalaryAnnexure202223> SalaryAnnexure202223s { get; set; } = null!;
        public virtual DbSet<SalaryAnnexure2022231> SalaryAnnexure202223s1 { get; set; } = null!;
        public virtual DbSet<SalaryAnnexureBk202122> SalaryAnnexureBk202122s { get; set; } = null!;
        public virtual DbSet<SalaryAnnexureLog> SalaryAnnexureLogs { get; set; } = null!;
        public virtual DbSet<SalaryAnnexureLogBk> SalaryAnnexureLogBks { get; set; } = null!;
        public virtual DbSet<SalaryAnnexureOpo091299> SalaryAnnexureOpo091299s { get; set; } = null!;
        public virtual DbSet<SalaryAnnexureVarsha> SalaryAnnexureVarshas { get; set; } = null!;
        public virtual DbSet<SalaryStructure> SalaryStructures { get; set; } = null!;
        public virtual DbSet<SalaryStructureLog> SalaryStructureLogs { get; set; } = null!;
        public virtual DbSet<SalaryStructureOpo> SalaryStructureOpos { get; set; } = null!;
        public virtual DbSet<SalaryStructureOpoLog> SalaryStructureOpoLogs { get; set; } = null!;
        public virtual DbSet<SalaryTrans20230315> SalaryTrans20230315s { get; set; } = null!;
        public virtual DbSet<SalaryTransa20230315> SalaryTransa20230315s { get; set; } = null!;
        public virtual DbSet<SalaryTransaction> SalaryTransactions { get; set; } = null!;
        public virtual DbSet<SalaryTransaction20221202> SalaryTransaction20221202s { get; set; } = null!;
        public virtual DbSet<SalaryTransaction202300822> SalaryTransaction202300822s { get; set; } = null!;
        public virtual DbSet<SalaryTransaction2023008221> SalaryTransaction202300822s1 { get; set; } = null!;
        public virtual DbSet<SalaryTransaction20230214> SalaryTransaction20230214s { get; set; } = null!;
        public virtual DbSet<SalaryTransaction20230215ggn> SalaryTransaction20230215ggns { get; set; } = null!;
        public virtual DbSet<SalaryTransaction20230310> SalaryTransaction20230310s { get; set; } = null!;
        public virtual DbSet<SalaryTransaction20230313> SalaryTransaction20230313s { get; set; } = null!;
        public virtual DbSet<SalaryTransaction202303131> SalaryTransaction20230313s1 { get; set; } = null!;
        public virtual DbSet<SalaryTransaction20230315> SalaryTransaction20230315s { get; set; } = null!;
        public virtual DbSet<SalaryTransaction20230315ggn> SalaryTransaction20230315ggns { get; set; } = null!;
        public virtual DbSet<SalaryTransaction20230403> SalaryTransaction20230403s { get; set; } = null!;
        public virtual DbSet<SalaryTransaction20230407> SalaryTransaction20230407s { get; set; } = null!;
        public virtual DbSet<SalaryTransaction20230408> SalaryTransaction20230408s { get; set; } = null!;
        public virtual DbSet<SalaryTransaction20230415> SalaryTransaction20230415s { get; set; } = null!;
        public virtual DbSet<SalaryTransaction20230417> SalaryTransaction20230417s { get; set; } = null!;
        public virtual DbSet<SalaryTransaction20230418> SalaryTransaction20230418s { get; set; } = null!;
        public virtual DbSet<SalaryTransaction20230505> SalaryTransaction20230505s { get; set; } = null!;
        public virtual DbSet<SalaryTransaction20230509> SalaryTransaction20230509s { get; set; } = null!;
        public virtual DbSet<SalaryTransaction20230512> SalaryTransaction20230512s { get; set; } = null!;
        public virtual DbSet<SalaryTransaction20230513> SalaryTransaction20230513s { get; set; } = null!;
        public virtual DbSet<SalaryTransaction20230513Raj> SalaryTransaction20230513Rajs { get; set; } = null!;
        public virtual DbSet<SalaryTransaction20230608> SalaryTransaction20230608s { get; set; } = null!;
        public virtual DbSet<SalaryTransaction20230620> SalaryTransaction20230620s { get; set; } = null!;
        public virtual DbSet<SalaryTransaction20230704> SalaryTransaction20230704s { get; set; } = null!;
        public virtual DbSet<SalaryTransaction202307041> SalaryTransaction20230704s1 { get; set; } = null!;
        public virtual DbSet<SalaryTransaction20230802> SalaryTransaction20230802s { get; set; } = null!;
        public virtual DbSet<SalaryTransaction20230908> SalaryTransaction20230908s { get; set; } = null!;
        public virtual DbSet<SalaryTransaction20230913> SalaryTransaction20230913s { get; set; } = null!;
        public virtual DbSet<SalaryTransaction20230914> SalaryTransaction20230914s { get; set; } = null!;
        public virtual DbSet<SalaryTransaction20231011> SalaryTransaction20231011s { get; set; } = null!;
        public virtual DbSet<SalaryTransaction202310111> SalaryTransaction20231011s1 { get; set; } = null!;
        public virtual DbSet<SalaryTransaction20231013> SalaryTransaction20231013s { get; set; } = null!;
        public virtual DbSet<SalaryTransaction202310131> SalaryTransaction20231013s1 { get; set; } = null!;
        public virtual DbSet<SalaryTransaction20231211> SalaryTransaction20231211s { get; set; } = null!;
        public virtual DbSet<SalaryTransaction20231227> SalaryTransaction20231227s { get; set; } = null!;
        public virtual DbSet<SalaryTransactionBkp20230715> SalaryTransactionBkp20230715s { get; set; } = null!;
        public virtual DbSet<SalaryTransactionBkp20231005> SalaryTransactionBkp20231005s { get; set; } = null!;
        public virtual DbSet<SalaryTransactionBkp20231110> SalaryTransactionBkp20231110s { get; set; } = null!;
        public virtual DbSet<SalaryTransactionBkp20231114> SalaryTransactionBkp20231114s { get; set; } = null!;
        public virtual DbSet<SalaryTransactionMarApr23Bkp> SalaryTransactionMarApr23Bkps { get; set; } = null!;
        public virtual DbSet<SalaryTransactionbkp20230403> SalaryTransactionbkp20230403s { get; set; } = null!;
        public virtual DbSet<SalaryTransactionnew20231013> SalaryTransactionnew20231013s { get; set; } = null!;
        public virtual DbSet<Salarytransaction20230728> Salarytransaction20230728s { get; set; } = null!;
        public virtual DbSet<ShiftDetail> ShiftDetails { get; set; } = null!;
        public virtual DbSet<ShiftDetails20231128> ShiftDetails20231128s { get; set; } = null!;
        public virtual DbSet<ShiftTiming> ShiftTimings { get; set; } = null!;
        public virtual DbSet<SizeCheck> SizeChecks { get; set; } = null!;
        public virtual DbSet<SkillDetail> SkillDetails { get; set; } = null!;
        public virtual DbSet<SmsItList> SmsItLists { get; set; } = null!;
        public virtual DbSet<SmsItLocation> SmsItLocations { get; set; } = null!;
        public virtual DbSet<SmsItLog> SmsItLogs { get; set; } = null!;
        public virtual DbSet<SmsItLogin> SmsItLogins { get; set; } = null!;
        public virtual DbSet<Source> Sources { get; set; } = null!;
        public virtual DbSet<SrTeamDetail> SrTeamDetails { get; set; } = null!;
        public virtual DbSet<SrvAccessMasterD> SrvAccessMasterDs { get; set; } = null!;
        public virtual DbSet<SrvAccessTypeD> SrvAccessTypeDs { get; set; } = null!;
        public virtual DbSet<SrvAssignSurvey> SrvAssignSurveys { get; set; } = null!;
        public virtual DbSet<SrvAssignSurveyLog> SrvAssignSurveyLogs { get; set; } = null!;
        public virtual DbSet<SrvAvgCalc> SrvAvgCalcs { get; set; } = null!;
        public virtual DbSet<SrvAvgRating> SrvAvgRatings { get; set; } = null!;
        public virtual DbSet<SrvEmployeeFeedback> SrvEmployeeFeedbacks { get; set; } = null!;
        public virtual DbSet<SrvEmployeeFeedbackLog> SrvEmployeeFeedbackLogs { get; set; } = null!;
        public virtual DbSet<SrvFilterMaster> SrvFilterMasters { get; set; } = null!;
        public virtual DbSet<SrvParamList> SrvParamLists { get; set; } = null!;
        public virtual DbSet<SrvQuestionMaster> SrvQuestionMasters { get; set; } = null!;
        public virtual DbSet<SrvQuestionType> SrvQuestionTypes { get; set; } = null!;
        public virtual DbSet<SrvReportTable> SrvReportTables { get; set; } = null!;
        public virtual DbSet<SrvReportTable2> SrvReportTable2s { get; set; } = null!;
        public virtual DbSet<SrvReportTabletextType> SrvReportTabletextTypes { get; set; } = null!;
        public virtual DbSet<SrvStatusSummarry> SrvStatusSummarries { get; set; } = null!;
        public virtual DbSet<SrvSurveyMaster> SrvSurveyMasters { get; set; } = null!;
        public virtual DbSet<SrvThemeTypeD> SrvThemeTypeDs { get; set; } = null!;
        public virtual DbSet<SrvUserActivity> SrvUserActivities { get; set; } = null!;
        public virtual DbSet<Srvassi> Srvassis { get; set; } = null!;
        public virtual DbSet<StarCjReasonRemove> StarCjReasonRemoves { get; set; } = null!;
        public virtual DbSet<StarCjsystemLoginRemove> StarCjsystemLoginRemoves { get; set; } = null!;
        public virtual DbSet<StateCityMaster> StateCityMasters { get; set; } = null!;
        public virtual DbSet<SubDept1> SubDept1s { get; set; } = null!;
        public virtual DbSet<SubProcessTbl> SubProcessTbls { get; set; } = null!;
        public virtual DbSet<SubProcessTblBkup> SubProcessTblBkups { get; set; } = null!;
        public virtual DbSet<SubSource> SubSources { get; set; } = null!;
        public virtual DbSet<Sudipto> Sudiptos { get; set; } = null!;
        public virtual DbSet<SupportStaffEmpFace> SupportStaffEmpFaces { get; set; } = null!;
        public virtual DbSet<SystemAdminActivity> SystemAdminActivities { get; set; } = null!;
        public virtual DbSet<SystemAdminActivityNew> SystemAdminActivityNews { get; set; } = null!;
        public virtual DbSet<TblBioEntryAccess> TblBioEntryAccesses { get; set; } = null!;
        public virtual DbSet<TblBusinessType> TblBusinessTypes { get; set; } = null!;
        public virtual DbSet<TblBuySell> TblBuySells { get; set; } = null!;
        public virtual DbSet<TblCandidateDetail> TblCandidateDetails { get; set; } = null!;
        public virtual DbSet<TblCandidateDocument> TblCandidateDocuments { get; set; } = null!;
        public virtual DbSet<TblCtcbreakup> TblCtcbreakups { get; set; } = null!;
        public virtual DbSet<TblDate> TblDates { get; set; } = null!;
        public virtual DbSet<TblDesignation> TblDesignations { get; set; } = null!;
        public virtual DbSet<TblDesignationBkNewLevel> TblDesignationBkNewLevels { get; set; } = null!;
        public virtual DbSet<TblEmpMaster> TblEmpMasters { get; set; } = null!;
        public virtual DbSet<TblEmploymentStatus> TblEmploymentStatuses { get; set; } = null!;
        public virtual DbSet<TblExcelDatum> TblExcelData { get; set; } = null!;
        public virtual DbSet<TblFirstFloorHr> TblFirstFloorHrs { get; set; } = null!;
        public virtual DbSet<TblHrfloorType> TblHrfloorTypes { get; set; } = null!;
        public virtual DbSet<TblHrmode> TblHrmodes { get; set; } = null!;
        public virtual DbSet<TblLangdetail> TblLangdetails { get; set; } = null!;
        public virtual DbSet<TblLangdetailsBackup> TblLangdetailsBackups { get; set; } = null!;
        public virtual DbSet<TblLevel> TblLevels { get; set; } = null!;
        public virtual DbSet<TblMstNoticePeriod> TblMstNoticePeriods { get; set; } = null!;
        public virtual DbSet<TblOutcome> TblOutcomes { get; set; } = null!;
        public virtual DbSet<TblPreviousEmpDetail1> TblPreviousEmpDetail1s { get; set; } = null!;
        public virtual DbSet<TblProcesswiseSalaryProposed> TblProcesswiseSalaryProposeds { get; set; } = null!;
        public virtual DbSet<TblQualification1> TblQualification1s { get; set; } = null!;
        public virtual DbSet<TblQualification1Backup> TblQualification1Backups { get; set; } = null!;
        public virtual DbSet<TblReasonForSeperation> TblReasonForSeperations { get; set; } = null!;
        public virtual DbSet<TblReference> TblReferences { get; set; } = null!;
        public virtual DbSet<TblRoasterDetailsDemo> TblRoasterDetailsDemos { get; set; } = null!;
        public virtual DbSet<TblRole> TblRoles { get; set; } = null!;
        public virtual DbSet<TblSalaryHead> TblSalaryHeads { get; set; } = null!;
        public virtual DbSet<TblSecondFloorHr> TblSecondFloorHrs { get; set; } = null!;
        public virtual DbSet<TblTelephonicInterview> TblTelephonicInterviews { get; set; } = null!;
        public virtual DbSet<TblTempReference> TblTempReferences { get; set; } = null!;
        public virtual DbSet<TblVerticalMaster> TblVerticalMasters { get; set; } = null!;
        public virtual DbSet<TblYear> TblYears { get; set; } = null!;
        public virtual DbSet<Tblcal2024> Tblcal2024s { get; set; } = null!;
        public virtual DbSet<TblupdatedDesignation> TblupdatedDesignations { get; set; } = null!;
        public virtual DbSet<TblupdatedWocount> TblupdatedWocounts { get; set; } = null!;
        public virtual DbSet<Temp20230710ContractCode> Temp20230710ContractCodes { get; set; } = null!;
        public virtual DbSet<TempCheckTable> TempCheckTables { get; set; } = null!;
        public virtual DbSet<TempFingerPrintDatum> TempFingerPrintData { get; set; } = null!;
        public virtual DbSet<TempLangdetail> TempLangdetails { get; set; } = null!;
        public virtual DbSet<TempMasterPune> TempMasterPunes { get; set; } = null!;
        public virtual DbSet<TempPreviousEmpDetail1> TempPreviousEmpDetail1s { get; set; } = null!;
        public virtual DbSet<TempTblQualification> TempTblQualifications { get; set; } = null!;
        public virtual DbSet<TempTrainerdatum> TempTrainerdata { get; set; } = null!;
        public virtual DbSet<TerminationHistory> TerminationHistories { get; set; } = null!;
        public virtual DbSet<TerminationHistoryLog> TerminationHistoryLogs { get; set; } = null!;
        public virtual DbSet<Time> Times { get; set; } = null!;
        public virtual DbSet<Time1> Time1s { get; set; } = null!;
        public virtual DbSet<Tmpmain2> Tmpmain2s { get; set; } = null!;
        public virtual DbSet<TrainerDatum> TrainerData { get; set; } = null!;
        public virtual DbSet<TrainingAccess> TrainingAccesses { get; set; } = null!;
        public virtual DbSet<TrainingBatch> TrainingBatches { get; set; } = null!;
        public virtual DbSet<TrainingFAnswerSubmitted> TrainingFAnswerSubmitteds { get; set; } = null!;
        public virtual DbSet<TrainingFLogin> TrainingFLogins { get; set; } = null!;
        public virtual DbSet<TrainingFQuestion> TrainingFQuestions { get; set; } = null!;
        public virtual DbSet<TrainingHistory> TrainingHistories { get; set; } = null!;
        public virtual DbSet<TraningAtt> TraningAtts { get; set; } = null!;
        public virtual DbSet<TypeCandidateAttendanceDatum> TypeCandidateAttendanceData { get; set; } = null!;
        public virtual DbSet<UnusedTab> UnusedTabs { get; set; } = null!;
        public virtual DbSet<UpdateAppointment> UpdateAppointments { get; set; } = null!;
        public virtual DbSet<UpdateDoj> UpdateDojs { get; set; } = null!;
        public virtual DbSet<UpdateDotjh20230610> UpdateDotjh20230610s { get; set; } = null!;
        public virtual DbSet<UpdatedTrainingDay> UpdatedTrainingDays { get; set; } = null!;
        public virtual DbSet<UploadAdharCard> UploadAdharCards { get; set; } = null!;
        public virtual DbSet<UploadCircular> UploadCirculars { get; set; } = null!;
        public virtual DbSet<UploadImg> UploadImgs { get; set; } = null!;
        public virtual DbSet<UploadWarning> UploadWarnings { get; set; } = null!;
        public virtual DbSet<UserAccess> UserAccesses { get; set; } = null!;
        public virtual DbSet<UserHrRequisition> UserHrRequisitions { get; set; } = null!;
        public virtual DbSet<UserLogin> UserLogins { get; set; } = null!;
        public virtual DbSet<UserMaster> UserMasters { get; set; } = null!;
        public virtual DbSet<ViewNremployee> ViewNremployees { get; set; } = null!;
        public virtual DbSet<Vika> Vikas { get; set; } = null!;
        public virtual DbSet<WarningDispatch> WarningDispatches { get; set; } = null!;
        public virtual DbSet<WarningDispatchDeleteTrg> WarningDispatchDeleteTrgs { get; set; } = null!;
        public virtual DbSet<WarningDispatchLog> WarningDispatchLogs { get; set; } = null!;
        public virtual DbSet<WarningHistory> WarningHistories { get; set; } = null!;
        public virtual DbSet<WarningHistoryLog> WarningHistoryLogs { get; set; } = null!;
        public virtual DbSet<WarningLetter> WarningLetters { get; set; } = null!;
        public virtual DbSet<WarningLevel> WarningLevels { get; set; } = null!;

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            optionsBuilder.EnableSensitiveDataLogging();
            if (!optionsBuilder.IsConfigured)
            {

                optionsBuilder.UseSqlServer("Data Source=172.18.16.244;Initial Catalog=HRMIS;User ID=opodba;Password=opo@123;Integrated Security=False;TrustServerCertificate=True;");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AccessLevel>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Access_Level");

                entity.Property(e => e.AccessType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("access_type");

                entity.Property(e => e.GroupName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

          

            modelBuilder.Entity<ActiveempDatum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ActiveempDAta");

                entity.Property(e => e.AadharCard)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date");

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.CurrentCity)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Current Designation");

                entity.Property(e => e.CurrentLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentState)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentStreet)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.DateOfJoining)
                    .HasColumnType("datetime")
                    .HasColumnName("Date of Joining");

                entity.Property(e => e.DateOfTraining)
                    .HasColumnType("datetime")
                    .HasColumnName("Date of Training");

                entity.Property(e => e.Department)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Dob)
                    .HasColumnType("datetime")
                    .HasColumnName("DOB");

                entity.Property(e => e.EMailId)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("E-mail id");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EMPCode");

                entity.Property(e => e.Esicno)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ESICNo");

                entity.Property(e => e.FathersName)
                    .HasMaxLength(2500)
                    .IsUnicode(false)
                    .HasColumnName("Fathers Name");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Gboard)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GBoard");

                entity.Property(e => e.Gender)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("GENDER");

                entity.Property(e => e.Gper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("GPer");

                entity.Property(e => e.Grade)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Gstream)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GStream");

                entity.Property(e => e.Gyear)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("GYear");

                entity.Property(e => e.Hsboard)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("HSBoard");

                entity.Property(e => e.Hsper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HSPer");

                entity.Property(e => e.HssStream)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Hssboard)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("HSSBoard");

                entity.Property(e => e.Hssper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HSSPer");

                entity.Property(e => e.Hsstream)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("HSStream");

                entity.Property(e => e.Hssyear)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HSSYear");

                entity.Property(e => e.Hsyear)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HSYear");

                entity.Property(e => e.InactiveDate)
                    .HasColumnType("datetime")
                    .HasColumnName("INACTIVE DATE");

                entity.Property(e => e.JoiningDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Joining Designation");

                entity.Property(e => e.Languages)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("languages");

                entity.Property(e => e.LastName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.LineManager)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Line Manager");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MaritalStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("Marital Status");

                entity.Property(e => e.MiddleName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.MobileNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Mobile No");

                entity.Property(e => e.MothersMaidenName)
                    .HasMaxLength(2500)
                    .IsUnicode(false)
                    .HasColumnName("Mothers Maiden Name");

                entity.Property(e => e.OphandOverBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("OPHandOverBy");

                entity.Property(e => e.OphandOverDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OPHandOverDate");

                entity.Property(e => e.OtherQua)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PanCard)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentCity)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentState)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentStreet)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Pfno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PFNo");

                entity.Property(e => e.Pgboard)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PGBoard");

                entity.Property(e => e.Pgper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PGPer");

                entity.Property(e => e.Pgyear)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PGYear");

                entity.Property(e => e.Prefix)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Pstream)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PStream");

                entity.Property(e => e.ResiNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Resi No");

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.StatusActiveInactive).HasColumnName("Status (Active/Inactive)");

                entity.Property(e => e.SubDepartment)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Sub Department");

                entity.Property(e => e.Uanno).HasColumnName("UANNO");
            });

            modelBuilder.Entity<AllHead>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Department)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Designation)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EmailId)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Empcode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Processname)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AmTrainerMaster>(entity =>
            {
                entity.ToTable("AM_TrainerMaster");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Designation)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Empcode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.EmpcodeLm)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("EmpcodeLM");

                entity.Property(e => e.Location)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.TrainingDesignation)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AppraisalList>(entity =>
            {
                entity.ToTable("Appraisal_List");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AppraisalType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Appraisal_Type");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<AssesmentResult>(entity =>
            {
                entity.ToTable("AssesmentResult");

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.CandidateName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Interview1)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Interview2)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Interview3)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.MasterId).HasColumnName("MasterID");
            });

            modelBuilder.Entity<Att>(entity =>
            {
                entity.HasKey(e => new { e.Empcode, e.AttDate });

                entity.ToTable("ATT");

                entity.HasIndex(e => new { e.Empcode, e.AttDate }, "idx_attdate_Empid");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EMPCODE");

                entity.Property(e => e.AttDate)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ATT_DATE");

                entity.Property(e => e.AttCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ATT_CODE")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.AttComments)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ATT_COMMENTS");

                entity.Property(e => e.AttStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ATT_STATUS")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.InTime)
                    .HasColumnType("datetime")
                    .HasColumnName("IN_TIME");

                entity.Property(e => e.InTimeLocation).HasColumnName("InTimeLOCATION");

                entity.Property(e => e.OutTime)
                    .HasColumnType("datetime")
                    .HasColumnName("OUT_TIME");

                entity.Property(e => e.OutTimeLocation).HasColumnName("OutTimeLOCATION");

                entity.Property(e => e.UpdateEmpcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UPDATE_EMPCODE");

                entity.Property(e => e.UpdateTime)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATE_TIME")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<AttBackup>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ATT_BACKUP");

                entity.Property(e => e.AttCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ATT_CODE");

                entity.Property(e => e.AttComments)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ATT_COMMENTS");

                entity.Property(e => e.AttDate)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ATT_DATE");

                entity.Property(e => e.AttStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ATT_STATUS");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EMPCODE");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.InTime)
                    .HasColumnType("datetime")
                    .HasColumnName("IN_TIME");

                entity.Property(e => e.OutTime)
                    .HasColumnType("datetime")
                    .HasColumnName("OUT_TIME");

                entity.Property(e => e.UpdateEmpcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UPDATE_EMPCODE");

                entity.Property(e => e.UpdateTime)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATE_TIME");
            });

            modelBuilder.Entity<AttendanceStatusType>(entity =>
            {
                entity.ToTable("attendanceStatusTypes");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AttendanceStatus)
                    .HasMaxLength(255)
                    .HasColumnName("attendanceStatus");

                entity.Property(e => e.AvailableLeaves)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LeavesEntitled)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MonthlyLeaves)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.StatusCode)
                    .HasMaxLength(50)
                    .HasColumnName("statusCode");
            });

            modelBuilder.Entity<AttendanceType>(entity =>
            {
                entity.HasKey(e => e.AttenadanceTypeId);

                entity.ToTable("AttendanceType");

                entity.Property(e => e.AttenadanceTypeId).HasColumnName("AttenadanceTypeID");

                entity.Property(e => e.AttendanceType1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AttendanceType");

                entity.Property(e => e.Color)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ColorCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<BangaloreBiometric>(entity =>
            {
                entity.ToTable("BANGALORE_BIOMETRIC");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Comments)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("COMMENTS");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EMPCODE");

                entity.Property(e => e.Hrempcode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("HREMPCODE");

                entity.Property(e => e.Hrsystem)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HRSYSTEM");

                entity.Property(e => e.Location).HasColumnName("LOCATION");

                entity.Property(e => e.Sdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SDATE");

                entity.Property(e => e.Smode).HasColumnName("SMODE");

                entity.Property(e => e.Sstatus).HasColumnName("SSTATUS");

                entity.Property(e => e.Stype).HasColumnName("STYPE");

                entity.Property(e => e.Sysname)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SYSNAME");
            });

            modelBuilder.Entity<BioLog>(entity =>
            {
                entity.ToTable("BIO_LOG");

                entity.HasIndex(e => e.Empcode, "idx_Empcode");

                entity.HasIndex(e => e.Sdate, "idx_Sdate");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Comments)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("COMMENTS");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EMPCODE");

                entity.Property(e => e.Hrempcode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("HREMPCODE")
                    .HasComment("Approving HR Employee");

                entity.Property(e => e.Hrsystem)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HRSYSTEM")
                    .HasComment("Approving HR system");

                entity.Property(e => e.Location)
                    .HasColumnName("LOCATION")
                    .HasComment("1 for Mumbai, 2 for Delhi, 3 for Indore,4 for LG, 5 for Gurgaon, 6 for Banglore, 20 for Other");

                entity.Property(e => e.Sdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SDATE")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Smode)
                    .HasColumnName("SMODE")
                    .HasComment("0 for biometric 1 for password");

                entity.Property(e => e.Sstatus)
                    .HasColumnName("SSTATUS")
                    .HasComment("0 for failed 1 for success");

                entity.Property(e => e.Stype)
                    .HasColumnName("STYPE")
                    .HasComment("0 for in 1 for out");

                entity.Property(e => e.Sysname)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SYSNAME")
                    .HasComment("system name or IP");
            });

            modelBuilder.Entity<BioLogBackup>(entity =>
            {
                entity.ToTable("BIO_LOG_Backup");

                entity.HasIndex(e => new { e.Empcode, e.Sdate }, "IX_BL");

                entity.HasIndex(e => e.Sdate, "Sdate");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Comments)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("COMMENTS");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EMPCODE");

                entity.Property(e => e.Hrempcode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("HREMPCODE")
                    .HasComment("Approving HR Employee");

                entity.Property(e => e.Hrsystem)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HRSYSTEM")
                    .HasComment("Approving HR system");

                entity.Property(e => e.Location)
                    .HasColumnName("LOCATION")
                    .HasComment("1 for Mumbai, 2 for Delhi, 3 for Indore,4 for LG, 5 for Gurgaon, 6 for Banglore, 20 for Other");

                entity.Property(e => e.Sdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SDATE")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Smode)
                    .HasColumnName("SMODE")
                    .HasComment("0 for biometric 1 for password");

                entity.Property(e => e.Sstatus)
                    .HasColumnName("SSTATUS")
                    .HasComment("0 for failed 1 for success");

                entity.Property(e => e.Stype)
                    .HasColumnName("STYPE")
                    .HasComment("0 for in 1 for out");

                entity.Property(e => e.Sysname)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SYSNAME")
                    .HasComment("system name or IP");
            });

            modelBuilder.Entity<BioLogOpo107317>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("BIO_LOG_OPO107317");

                entity.Property(e => e.Comments)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("COMMENTS");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EMPCODE");

                entity.Property(e => e.Hrempcode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("HREMPCODE");

                entity.Property(e => e.Hrsystem)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HRSYSTEM");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Location).HasColumnName("LOCATION");

                entity.Property(e => e.Sdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SDATE");

                entity.Property(e => e.Smode).HasColumnName("SMODE");

                entity.Property(e => e.Sstatus).HasColumnName("SSTATUS");

                entity.Property(e => e.Stype).HasColumnName("STYPE");

                entity.Property(e => e.Sysname)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SYSNAME");
            });

            modelBuilder.Entity<BioStatus>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("bio_status");

                entity.Property(e => e.EncryptName).HasColumnName("Encrypt_Name");
            });

            modelBuilder.Entity<CandiTest>(entity =>
            {
                entity.ToTable("CandiTest");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AadharCardNumber).HasMaxLength(20);

                entity.Property(e => e.AdharNamePd)
                    .HasMaxLength(255)
                    .HasColumnName("AdharNamePD");

                entity.Property(e => e.AreaCa)
                    .HasMaxLength(255)
                    .HasColumnName("AreaCA");

                entity.Property(e => e.AreaPa)
                    .HasMaxLength(255)
                    .HasColumnName("AreaPA");

                entity.Property(e => e.BloodGroupPd)
                    .HasMaxLength(10)
                    .HasColumnName("BloodGroupPD");

                entity.Property(e => e.CityCa)
                    .HasMaxLength(255)
                    .HasColumnName("CityCA");

                entity.Property(e => e.CityPa)
                    .HasMaxLength(255)
                    .HasColumnName("CityPA");

                entity.Property(e => e.Ctc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("CTC");

                entity.Property(e => e.Designation).HasMaxLength(255);

                entity.Property(e => e.Dob)
                    .HasColumnType("date")
                    .HasColumnName("DOB");

                entity.Property(e => e.EmailId)
                    .HasMaxLength(255)
                    .HasColumnName("EmailID");

                entity.Property(e => e.EmergencyContactDetailsPd)
                    .HasMaxLength(20)
                    .HasColumnName("EmergencyContactDetailsPD");

                entity.Property(e => e.Exprience).HasMaxLength(50);

                entity.Property(e => e.FatherName).HasMaxLength(255);

                entity.Property(e => e.FirstName).HasMaxLength(255);

                entity.Property(e => e.GenderPd)
                    .HasMaxLength(10)
                    .HasColumnName("GenderPD");

                entity.Property(e => e.HouseNumberCa)
                    .HasMaxLength(50)
                    .HasColumnName("HouseNumberCA");

                entity.Property(e => e.HouseNumberPa)
                    .HasMaxLength(50)
                    .HasColumnName("HouseNumberPA");

                entity.Property(e => e.IsDifferentlyAbledCo).HasColumnName("IsDifferentlyAbledCO");

                entity.Property(e => e.LandMarkCa)
                    .HasMaxLength(255)
                    .HasColumnName("LandMarkCA");

                entity.Property(e => e.LandMarkPa)
                    .HasMaxLength(255)
                    .HasColumnName("LandMarkPA");

                entity.Property(e => e.LastName).HasMaxLength(255);

                entity.Property(e => e.LastOrgJoinDate).HasColumnType("date");

                entity.Property(e => e.LastOrgLwd)
                    .HasColumnType("date")
                    .HasColumnName("LastOrgLWD");

                entity.Property(e => e.Location).HasMaxLength(255);

                entity.Property(e => e.MaritalStatusCo)
                    .HasMaxLength(20)
                    .HasColumnName("MaritalStatusCO");

                entity.Property(e => e.MobileNumber).HasMaxLength(20);

                entity.Property(e => e.MotherName).HasMaxLength(255);

                entity.Property(e => e.OrgCategory).HasMaxLength(50);

                entity.Property(e => e.Orgname)
                    .HasMaxLength(255)
                    .HasColumnName("ORGName");

                entity.Property(e => e.PanCardCo)
                    .HasMaxLength(20)
                    .HasColumnName("PanCardCO");

                entity.Property(e => e.PassportCo)
                    .HasMaxLength(20)
                    .HasColumnName("PassportCO");

                entity.Property(e => e.PinCodeCa)
                    .HasMaxLength(20)
                    .HasColumnName("PinCodeCA");

                entity.Property(e => e.PinCodePa)
                    .HasMaxLength(20)
                    .HasColumnName("PinCodePA");

                entity.Property(e => e.Position).HasMaxLength(255);

                entity.Property(e => e.Ref1Pd)
                    .HasMaxLength(255)
                    .HasColumnName("Ref1PD");

                entity.Property(e => e.Ref2Pd)
                    .HasMaxLength(255)
                    .HasColumnName("Ref2PD");

                entity.Property(e => e.Source).HasMaxLength(255);

                entity.Property(e => e.StateCa)
                    .HasMaxLength(255)
                    .HasColumnName("StateCA");

                entity.Property(e => e.StatePa)
                    .HasMaxLength(255)
                    .HasColumnName("StatePA");

                entity.Property(e => e.StreetNameCa)
                    .HasMaxLength(255)
                    .HasColumnName("StreetNameCA");

                entity.Property(e => e.StreetNamePa)
                    .HasMaxLength(255)
                    .HasColumnName("StreetNamePA");

                entity.Property(e => e.Subsource).HasMaxLength(255);

                entity.Property(e => e.Uanco)
                    .HasMaxLength(20)
                    .HasColumnName("UANCO");
            });

            modelBuilder.Entity<CandidateImage>(entity =>
            {
                entity.ToTable("CandidateImage");
            });

            modelBuilder.Entity<ChequeDetail>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AdjIncPliNotice).HasColumnName("ADJ/INC/PLI/NOTICE");

                entity.Property(e => e.Attendenceallowance).HasColumnName("ATTENDENCEALLOWANCE");

                entity.Property(e => e.BankAccNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Bankname)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Basic).HasColumnName("BASIC");

                entity.Property(e => e.Branch)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.ChequeGivenBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ChequeNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ChequeReceivedDate).HasColumnType("datetime");

                entity.Property(e => e.ChequeRemark)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.ChequeStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ChequeUploadMonth)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChequeUploadStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CoEsic).HasColumnName("CO_ESIC");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.Department)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Designation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Devision)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EarningCtc).HasColumnName("EarningCTC");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.EmpName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EmpStatus).HasMaxLength(50);

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardFee).HasColumnName("ICardFee");

                entity.Property(e => e.Location)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.LwfEe).HasColumnName("LWF_EE");

                entity.Property(e => e.Netsalary).HasColumnName("NETSalary");

                entity.Property(e => e.Rbonus).HasColumnName("RBonus");

                entity.Property(e => e.RefNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remark)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.SodexoDeduction).HasColumnName("SODEXO_Deduction");

                entity.Property(e => e.StGrossSalary).HasColumnName("St_GrossSalary");

                entity.Property(e => e.SystemIp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SystemIP");

                entity.Property(e => e.Tds).HasColumnName("TDS");
            });

            modelBuilder.Entity<ChequeDetailedLogTrg>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ChequeDetailedLog_Trg");

                entity.Property(e => e.AdjIncPliNotice).HasColumnName("ADJ/INC/PLI/NOTICE");

                entity.Property(e => e.Attendenceallowance).HasColumnName("ATTENDENCEALLOWANCE");

                entity.Property(e => e.BankAccNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Bankname)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Basic).HasColumnName("BASIC");

                entity.Property(e => e.Branch)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.ChequeGivenBy).HasMaxLength(50);

                entity.Property(e => e.ChequeNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ChequeReceivedDate).HasColumnType("datetime");

                entity.Property(e => e.ChequeRemark)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.ChequeStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ChequeUploadMonth)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChequeUploadStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CoEsic).HasColumnName("CO_ESIC");

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.Department)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Designation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Devision)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EarningCtc).HasColumnName("EarningCTC");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.EmpName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EmpStatus).HasMaxLength(50);

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardFee).HasColumnName("ICardFee");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Location)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.LwfEe).HasColumnName("LWF_EE");

                entity.Property(e => e.Netsalary).HasColumnName("NETSalary");

                entity.Property(e => e.Rbonus).HasColumnName("RBonus");

                entity.Property(e => e.RefNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remark)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.SodexoDeduction).HasColumnName("SODEXO_Deduction");

                entity.Property(e => e.StGrossSalary).HasColumnName("St_GrossSalary");

                entity.Property(e => e.SystemIp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SystemIP");

                entity.Property(e => e.Tds).HasColumnName("TDS");
            });

            modelBuilder.Entity<ChequeDetailedLogTrgBackup>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ChequeDetailedLog_Trg_backup");

                entity.Property(e => e.AdjIncPliNotice).HasColumnName("ADJ/INC/PLI/NOTICE");

                entity.Property(e => e.Attendenceallowance).HasColumnName("ATTENDENCEALLOWANCE");

                entity.Property(e => e.BankAccNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Bankname)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Basic).HasColumnName("BASIC");

                entity.Property(e => e.Branch)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.ChequeGivenBy).HasMaxLength(50);

                entity.Property(e => e.ChequeNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ChequeReceivedDate).HasColumnType("datetime");

                entity.Property(e => e.ChequeRemark)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.ChequeStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ChequeUploadMonth)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChequeUploadStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CoEsic).HasColumnName("CO_ESIC");

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.Department)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Designation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Devision)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EarningCtc).HasColumnName("EarningCTC");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.EmpName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EmpStatus).HasMaxLength(50);

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardFee).HasColumnName("ICardFee");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Location)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.LwfEe).HasColumnName("LWF_EE");

                entity.Property(e => e.Netsalary).HasColumnName("NETSalary");

                entity.Property(e => e.Rbonus).HasColumnName("RBonus");

                entity.Property(e => e.RefNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remark)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.SodexoDeduction).HasColumnName("SODEXO_Deduction");

                entity.Property(e => e.StGrossSalary).HasColumnName("St_GrossSalary");

                entity.Property(e => e.SystemIp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SystemIP");

                entity.Property(e => e.Tds).HasColumnName("TDS");
            });

            modelBuilder.Entity<ChequeDetailsDemo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ChequeDetailsDemo");

                entity.Property(e => e.AdjIncPliNotice).HasColumnName("ADJ/INC/PLI/NOTICE");

                entity.Property(e => e.Attendenceallowance).HasColumnName("ATTENDENCEALLOWANCE");

                entity.Property(e => e.BankAccNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Bankname)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Basic).HasColumnName("BASIC");

                entity.Property(e => e.Branch)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.ChequeGivenBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ChequeNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ChequeReceivedDate).HasColumnType("datetime");

                entity.Property(e => e.ChequeRemark)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.ChequeStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ChequeUploadMonth)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChequeUploadStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CoEsic).HasColumnName("CO_ESIC");

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.Department)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Designation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Devision)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EarningCtc).HasColumnName("EarningCTC");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.EmpName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EmpStatus).HasMaxLength(50);

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardFee).HasColumnName("ICardFee");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Location)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.LwfEe).HasColumnName("LWF_EE");

                entity.Property(e => e.Netsalary).HasColumnName("NETSalary");

                entity.Property(e => e.Rbonus).HasColumnName("RBonus");

                entity.Property(e => e.RefNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remark)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.SodexoDeduction).HasColumnName("SODEXO_Deduction");

                entity.Property(e => e.StGrossSalary).HasColumnName("St_GrossSalary");

                entity.Property(e => e.SystemIp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SystemIP");

                entity.Property(e => e.Tds).HasColumnName("TDS");
            });

            modelBuilder.Entity<ChequeDetailsLog>(entity =>
            {
                entity.ToTable("ChequeDetailsLog");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChequeGivenBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ChequeGivenStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ChequeRemark)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.ChequeUploadMonth)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.ChequeUploadStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.EmpStatus).HasMaxLength(50);

                entity.Property(e => e.SystemIp)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SystemIP");
            });

            modelBuilder.Entity<CompOffMaster>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CompOffMaster");

                entity.Property(e => e.AdjDate)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ApplyDate)
                    .HasColumnType("datetime")
                    .HasColumnName("apply_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CompOffDate)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SancDate).HasColumnType("datetime");

                entity.Property(e => e.SancStatus).HasDefaultValueSql("((0))");

                entity.Property(e => e.SupComment)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Sup_Comment");

                entity.Property(e => e.SupId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Sup_ID");
            });

            modelBuilder.Entity<ConfirmationList>(entity =>
            {
                entity.ToTable("ConfirmationList");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Doc)
                    .HasColumnType("datetime")
                    .HasColumnName("DOC");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LocationId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LocationID");

                entity.Property(e => e.ModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Modified_by");

                entity.Property(e => e.Status)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Systemname)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ConsultancyMaster>(entity =>
            {
                entity.ToTable("ConsultancyMaster");

                entity.Property(e => e.Consultant).HasMaxLength(250);
            });

            modelBuilder.Entity<DeclareHoliday>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("DeclareHoliday");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.LeaveDate).HasColumnType("datetime");

                entity.Property(e => e.LeaveTitle).HasMaxLength(100);

                entity.Property(e => e.LeaveType).HasMaxLength(20);

                entity.Property(e => e.Location).HasMaxLength(50);
            });

            modelBuilder.Entity<DepartmentalInterviewQa>(entity =>
            {
                entity.ToTable("Departmental_Interview_QA");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Designation).HasMaxLength(250);

                entity.Property(e => e.SubDeptName)
                    .HasMaxLength(150)
                    .HasColumnName("Sub_Dept_Name");
            });

            modelBuilder.Entity<DepartmentalViewResult>(entity =>
            {
                entity.ToTable("Departmental_View_Result");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.MobileNo).HasMaxLength(50);

                entity.Property(e => e.RecDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Round2).HasMaxLength(50);

                entity.Property(e => e.Round3).HasMaxLength(50);

                entity.Property(e => e.Round4).HasMaxLength(50);
            });

            modelBuilder.Entity<DeptMaster>(entity =>
            {
                entity.ToTable("DeptMaster");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.DeptName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Dept_Name");
            });

            modelBuilder.Entity<DeptTable>(entity =>
            {
                entity.ToTable("Dept_table");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Abbrevation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CallcenterType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Callcenter_Type")
                    .HasDefaultValueSql("('D')");

                entity.Property(e => e.CertificationDays).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.ContractCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Contract_Code");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DbName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DB_Name");

                entity.Property(e => e.DbPassword)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DB_Password");

                entity.Property(e => e.DbUserName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DB_UserName");

                entity.Property(e => e.DeptId).HasColumnName("Dept_ID");

                entity.Property(e => e.DeptName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Dept_Name");

                entity.Property(e => e.LocationId).HasColumnName("Location_ID");

                entity.Property(e => e.OnlyBio)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("only_bio")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ServerIp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Server_IP");

                entity.Property(e => e.SubContractL1)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.SubContractL2)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.SubDeptName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Sub_Dept_Name");

                entity.Property(e => e.TableName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Table_Name");

                entity.Property(e => e.TrainingDays).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.TrainingPaid)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Training_Paid");

                entity.Property(e => e.VerticalName)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("Vertical_Name");
            });

            modelBuilder.Entity<DeptTable20230614>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Dept_table_20230614");

                entity.Property(e => e.Abbrevation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CallcenterType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Callcenter_Type");

                entity.Property(e => e.CertificationDays).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.ContractCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Contract_Code");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.DbName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DB_Name");

                entity.Property(e => e.DbPassword)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DB_Password");

                entity.Property(e => e.DbUserName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DB_UserName");

                entity.Property(e => e.DeptId).HasColumnName("Dept_ID");

                entity.Property(e => e.DeptName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Dept_Name");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.LocationId).HasColumnName("Location_ID");

                entity.Property(e => e.ServerIp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Server_IP");

                entity.Property(e => e.SubContractL1)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.SubContractL2)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.SubDeptName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Sub_Dept_Name");

                entity.Property(e => e.TableName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Table_Name");

                entity.Property(e => e.TrainingDays).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.TrainingPaid)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Training_Paid");

                entity.Property(e => e.VerticalName)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("Vertical_Name");
            });

            modelBuilder.Entity<DeptTable20230701>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Dept_table_20230701");

                entity.Property(e => e.Abbrevation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CallcenterType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Callcenter_Type");

                entity.Property(e => e.CertificationDays).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.ContractCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Contract_Code");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.DbName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DB_Name");

                entity.Property(e => e.DbPassword)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DB_Password");

                entity.Property(e => e.DbUserName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DB_UserName");

                entity.Property(e => e.DeptId).HasColumnName("Dept_ID");

                entity.Property(e => e.DeptName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Dept_Name");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.LocationId).HasColumnName("Location_ID");

                entity.Property(e => e.ServerIp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Server_IP");

                entity.Property(e => e.SubContractL1)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.SubContractL2)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.SubDeptName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Sub_Dept_Name");

                entity.Property(e => e.TableName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Table_Name");

                entity.Property(e => e.TrainingDays).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.TrainingPaid)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Training_Paid");

                entity.Property(e => e.VerticalName)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("Vertical_Name");
            });

            modelBuilder.Entity<DeptTable20230705>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Dept_table_20230705");

                entity.Property(e => e.Abbrevation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CallcenterType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Callcenter_Type");

                entity.Property(e => e.CertificationDays).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.ContractCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Contract_Code");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.DbName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DB_Name");

                entity.Property(e => e.DbPassword)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DB_Password");

                entity.Property(e => e.DbUserName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DB_UserName");

                entity.Property(e => e.DeptId).HasColumnName("Dept_ID");

                entity.Property(e => e.DeptName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Dept_Name");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.LocationId).HasColumnName("Location_ID");

                entity.Property(e => e.OnlyBio)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("only_bio");

                entity.Property(e => e.ServerIp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Server_IP");

                entity.Property(e => e.SubContractL1)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.SubContractL2)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.SubDeptName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Sub_Dept_Name");

                entity.Property(e => e.TableName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Table_Name");

                entity.Property(e => e.TrainingDays).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.TrainingPaid)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Training_Paid");

                entity.Property(e => e.VerticalName)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("Vertical_Name");
            });

            modelBuilder.Entity<DeptTableHindware>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Dept_table_Hindware");

                entity.Property(e => e.Abbrevation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CallcenterType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Callcenter_Type");

                entity.Property(e => e.CertificationDays).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.ContractCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Contract_Code");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.DbName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DB_Name");

                entity.Property(e => e.DbPassword)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DB_Password");

                entity.Property(e => e.DbUserName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DB_UserName");

                entity.Property(e => e.DeptId).HasColumnName("Dept_ID");

                entity.Property(e => e.DeptName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Dept_Name");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.LocationId).HasColumnName("Location_ID");

                entity.Property(e => e.OnlyBio)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("only_bio");

                entity.Property(e => e.ServerIp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Server_IP");

                entity.Property(e => e.SubContractL1)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.SubContractL2)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.SubDeptName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Sub_Dept_Name");

                entity.Property(e => e.TableName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Table_Name");

                entity.Property(e => e.TrainingDays).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.TrainingPaid)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Training_Paid");

                entity.Property(e => e.VerticalName)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("Vertical_Name");
            });

            modelBuilder.Entity<DeptTableOndc20231215>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Dept_table_ONDC20231215");

                entity.Property(e => e.Abbrevation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CallcenterType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Callcenter_Type");

                entity.Property(e => e.CertificationDays).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.ContractCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Contract_Code");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.DbName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DB_Name");

                entity.Property(e => e.DbPassword)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DB_Password");

                entity.Property(e => e.DbUserName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DB_UserName");

                entity.Property(e => e.DeptId).HasColumnName("Dept_ID");

                entity.Property(e => e.DeptName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Dept_Name");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.LocationId).HasColumnName("Location_ID");

                entity.Property(e => e.OnlyBio)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("only_bio");

                entity.Property(e => e.ServerIp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Server_IP");

                entity.Property(e => e.SubContractL1)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.SubContractL2)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.SubDeptName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Sub_Dept_Name");

                entity.Property(e => e.TableName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Table_Name");

                entity.Property(e => e.TrainingDays).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.TrainingPaid)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Training_Paid");

                entity.Property(e => e.VerticalName)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("Vertical_Name");
            });

            modelBuilder.Entity<DesignationWiseLevel>(entity =>
            {
                entity.HasKey(e => e.LevelId);

                entity.ToTable("DesignationWise_Level");

                entity.Property(e => e.LevelId).HasColumnName("Level_ID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Designation)
                    .HasMaxLength(500)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<DesignationWiseWocount>(entity =>
            {
                entity.ToTable("DesignationWiseWOCount");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Designation)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Wocount).HasColumnName("WOCount");
            });

            modelBuilder.Entity<DesignationWiseWocount20230526>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("DesignationWiseWOCount_20230526");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.Designation)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Wocount).HasColumnName("WOCount");
            });

            modelBuilder.Entity<DesignationWiseWocountHd>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("DesignationWiseWOCount_HD");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.Designation)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Wocount).HasColumnName("WOCount");
            });

            modelBuilder.Entity<DocAbbrv>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Doc_Abbrv");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.DocAbbriviation)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("Doc_Abbriviation");

                entity.Property(e => e.DocCategory)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DocCategoryId).HasColumnName("DocCategoryID");

                entity.Property(e => e.DocCode1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Doc_code1");

                entity.Property(e => e.DocCode2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Doc_code2");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");
            });

            modelBuilder.Entity<DocUploadLog>(entity =>
            {
                entity.ToTable("Doc_upload_log");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.DocCategory)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Doc_Category");

                entity.Property(e => e.DocCategoryId).HasColumnName("DocCategoryID");

                entity.Property(e => e.DocName)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("Doc_Name");

                entity.Property(e => e.EmpId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EmpID");

                entity.Property(e => e.EmpName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.FileName).IsUnicode(false);

                entity.Property(e => e.LocationId).HasColumnName("Location_ID");

                entity.Property(e => e.LocationName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Location_Name");

                entity.Property(e => e.MachineIp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("machineIP");

                entity.Property(e => e.UploadedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("uploadedBy");

                entity.Property(e => e.UploadedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("uploadedDate")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Uploadedpath)
                    .IsUnicode(false)
                    .HasColumnName("uploadedpath");
            });

            modelBuilder.Entity<DocUploadLogBackup>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Doc_upload_log_Backup");

                entity.Property(e => e.DocCategory)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Doc_Category");

                entity.Property(e => e.DocCategoryId).HasColumnName("DocCategoryID");

                entity.Property(e => e.DocName)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("Doc_Name");

                entity.Property(e => e.EmpId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EmpID");

                entity.Property(e => e.EmpName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.FileName).IsUnicode(false);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.LocationId).HasColumnName("Location_ID");

                entity.Property(e => e.LocationName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Location_Name");

                entity.Property(e => e.MachineIp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("machineIP");

                entity.Property(e => e.UploadedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("uploadedBy");

                entity.Property(e => e.UploadedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("uploadedDate");

                entity.Property(e => e.Uploadedpath)
                    .IsUnicode(false)
                    .HasColumnName("uploadedpath");
            });

            modelBuilder.Entity<DocumentDetail>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.DocType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ParentId).HasColumnName("ParentID");

                entity.Property(e => e.WhenEntered)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<DocumentsHistory>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Documents_History");

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Account_No");

                entity.Property(e => e.AccountOpening)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Account_Opening");

                entity.Property(e => e.AppLetter)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("App_Letter");

                entity.Property(e => e.ApptLetter)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("APPT_Letter");

                entity.Property(e => e.BankName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Bank_Name");

                entity.Property(e => e.BankStatements)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Bank_Statements");

                entity.Property(e => e.BioMetric)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BranchName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Branch_Name");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.Documents)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DocumentsStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Documents_Status");

                entity.Property(e => e.DrivingLicenceAdd)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Driving_licence_add");

                entity.Property(e => e.DrivingLicenceId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Driving_Licence_ID");

                entity.Property(e => e.ElecticityBill)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Electicity_Bill");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EMPCODE");

                entity.Property(e => e.Esic)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ESIC");

                entity.Property(e => e.Form16)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Graduation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Hsc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HSC");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.IncrementLetter)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Increment_Letter");

                entity.Property(e => e.OfferLetter)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Offer_Letter");

                entity.Property(e => e.OtherAddProof)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("Other_Add_Proof");

                entity.Property(e => e.OtherEdu)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("Other_Edu");

                entity.Property(e => e.OtherIdProof)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Other_ID_Proof");

                entity.Property(e => e.OtherIncomeProof)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("Other_Income_Proof");

                entity.Property(e => e.PanCard)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PAN_card");

                entity.Property(e => e.PassportId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Passport_ID");

                entity.Property(e => e.PasswordAdd)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Password_Add");

                entity.Property(e => e.Pf)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PF");

                entity.Property(e => e.Pg)
                    .HasMaxLength(10)
                    .HasColumnName("PG")
                    .IsFixedLength();

                entity.Property(e => e.RationCard)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ration_Card");

                entity.Property(e => e.Resume)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalarySlip)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Slip");

                entity.Property(e => e.Ssc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SSC");

                entity.Property(e => e.VoterId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Voter_ID");
            });

            modelBuilder.Entity<DojHandoverUpdate>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("DOJ_Handover_Update");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(255)
                    .HasColumnName("Emp Code");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .HasColumnName("First Name");

                entity.Property(e => e.Location).HasMaxLength(255);

                entity.Property(e => e.OpsHandoverDateAsPerTrainingNhtTracker)
                    .HasColumnType("datetime")
                    .HasColumnName("OPS Handover Date as per Training NHT tracker");

                entity.Property(e => e.PayrollDoj)
                    .HasColumnType("datetime")
                    .HasColumnName("Payroll DOJ");

                entity.Property(e => e.PayrollDot)
                    .HasColumnType("datetime")
                    .HasColumnName("Payroll DOT");

                entity.Property(e => e.Remarks).HasMaxLength(255);
            });

            modelBuilder.Entity<Email>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Email");

                entity.Property(e => e.Body)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.Subject)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<EmailVerifyDetail>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IsVerified).HasDefaultValueSql("((0))");

                entity.Property(e => e.WhenEntered)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<EmpBeneficiaryDetail>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AccountNumber)
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.BankAddress).IsUnicode(false);

                entity.Property(e => e.BankName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.BeneficiaryName)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.BranchName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ChequePath).IsUnicode(false);

                entity.Property(e => e.ConfirmAccountNumber)
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Empcode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EncodedValue)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCode");

                entity.Property(e => e.MobileNumber)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.RecDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<EmpComplaint>(entity =>
            {
                entity.ToTable("Emp_Complaints");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Hrfeedback)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("HRFeedback");

                entity.Property(e => e.IssueDescription)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.SalaryHeads)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.SalaryMonth)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalaryYear)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TicketNo).HasColumnName("Ticket_No");
            });

            modelBuilder.Entity<EmpComplaintsLog>(entity =>
            {
                entity.ToTable("Emp_ComplaintsLog");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Hrfeedback)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("HRFeedback");

                entity.Property(e => e.IssueDescription)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.SalaryHeads)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.SalaryMonth)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalaryYear)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TicketNo).HasColumnName("Ticket_No");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Updated_Date")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<EmpComplaintsTran>(entity =>
            {
                entity.ToTable("Emp_Complaints_Trans");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.HrFeedback)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("HR_Feedback");

                entity.Property(e => e.Issue)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.SalaryHead)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TicketNo).HasColumnName("Ticket_No");
            });

            modelBuilder.Entity<EmpComplaintsTransLog>(entity =>
            {
                entity.ToTable("Emp_Complaints_Trans_Log");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.HrFeedback)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("HR_Feedback");

                entity.Property(e => e.Issue)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.SalaryHead)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Head");

                entity.Property(e => e.TicketNo).HasColumnName("Ticket_No");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Updated_Date")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<EmpDeactivationDetail>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.DeactivationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IrVrNrDate)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IR_VR_NR_DATE");

                entity.Property(e => e.IsDomainUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<EmpDocument>(entity =>
            {
                entity.ToTable("Emp_Documents");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.DocTypeId).HasColumnName("DocTypeID");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IsApproved).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsDeleted).HasDefaultValueSql("((0))");

                entity.Property(e => e.SubDocTypeId).HasColumnName("SubDocTypeID");

                entity.Property(e => e.UploadedPath)
                    .IsUnicode(false)
                    .HasColumnName("Uploaded_Path");

                entity.Property(e => e.WhenEntered)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.WhenModified)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<EmpDoh20230621>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Emp_DOH_20230621");

                entity.Property(e => e.Doh)
                    .HasColumnType("datetime")
                    .HasColumnName("DOH");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<EmpDoj>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("EMP_DOJ");

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<EmpMaster>(entity =>
            {
                entity.HasKey(e => e.EmpCode)
                    .HasName("PK_EmpMaster_1");

                entity.ToTable("EmpMaster");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AccessRole)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccessType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Access_Type");

                entity.Property(e => e.ActivatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Activated_By");

                entity.Property(e => e.ActiveEmp).HasDefaultValueSql("((1))");

                entity.Property(e => e.AdharCardNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Adhar_Card_No");

                entity.Property(e => e.AdharName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AnnivDate).HasColumnType("datetime");

                entity.Property(e => e.Bank)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BankLocation)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("Bank_Location");

                entity.Property(e => e.BankType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Bank_Type");

                entity.Property(e => e.BasicDaRate)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("Basic_DA_Rate");

                entity.Property(e => e.BlackListed)
                    .HasColumnName("Black_Listed")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BloodGroup)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Branch)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CardNo)
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CertificationComments)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("Certification_Comments");

                entity.Property(e => e.CompOff).HasDefaultValueSql("((0))");

                entity.Property(e => e.Company1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Company2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Company3)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Company4)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ConfirmationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("confirmation_date");

                entity.Property(e => e.ContractCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Contract_code");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("created_by");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.CurrentArea)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentCity)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentHouseNo)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("CurrentHouse_No");

                entity.Property(e => e.CurrentLandmark)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentMobile)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentPhone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentState)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentStreet)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Department)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DesigEffectedDate).HasColumnType("datetime");

                entity.Property(e => e.Designation1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Designation2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Designation3)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Designation4)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DialerId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DialerID");

                entity.Property(e => e.Dob)
                    .HasColumnType("datetime")
                    .HasColumnName("DOB");

                entity.Property(e => e.Doc)
                    .HasColumnType("datetime")
                    .HasColumnName("DOC");

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.DolPrev)
                    .HasColumnType("datetime")
                    .HasColumnName("DOL_Prev");

                entity.Property(e => e.Dot)
                    .HasColumnType("datetime")
                    .HasColumnName("DOT");

                entity.Property(e => e.EffectiveDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Effective_Date");

                entity.Property(e => e.EffortLastDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Effort_Last_Date");

                entity.Property(e => e.EmailId0nr1r)
                    .HasColumnName("EmailID_0NR_1R")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.EmailId1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Email_ID");

                entity.Property(e => e.Emailid)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.EmergencyContact)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.EmergencyContactName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.EmpCodeLm)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EmpCodeLM");

                entity.Property(e => e.EmpLevel)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasComment("0 = CRE, 1 = TL, 2 = AM, 3 = OM");

                entity.Property(e => e.EmployeeType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Employee_Type");

                entity.Property(e => e.EmploymentStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Employment_Status");

                entity.Property(e => e.EsicApplicability)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ESIC_applicability");

                entity.Property(e => e.Esicno)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ESICNo");

                entity.Property(e => e.Esicstatus)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ESICStatus");

                entity.Property(e => e.ExitStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Exit_Status");

                entity.Property(e => e.FacebookId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FacebookID");

                entity.Property(e => e.FathersName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.FirstName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Fnfdone)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FNFDONE");

                entity.Property(e => e.FtPt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FT_PT");

                entity.Property(e => e.Gboard)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GBoard");

                entity.Property(e => e.Gender)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Gper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("GPer");

                entity.Property(e => e.Grade)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.GrossSalPli)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("Gross_Sal_PLI");

                entity.Property(e => e.GroupName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Gstream)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GStream");

                entity.Property(e => e.Gyear)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("GYear");

                entity.Property(e => e.Handicap)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("handicap");

                entity.Property(e => e.Handicapnature)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("handicapnature");

                entity.Property(e => e.Handicapper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("handicapper");

                entity.Property(e => e.HrBucket)
                    .HasColumnName("HR_Bucket")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.HrLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HR_Location");

                entity.Property(e => e.Hsboard)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("HSBoard");

                entity.Property(e => e.Hsper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HSPer");

                entity.Property(e => e.HssStream)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Hssboard)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("HSSBoard");

                entity.Property(e => e.Hssper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HSSPer");

                entity.Property(e => e.Hsstream)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("HSStream");

                entity.Property(e => e.Hssyear)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HSSYear");

                entity.Property(e => e.Hsyear)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HSYear");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Identificationmark)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("identificationmark");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCode");

                entity.Property(e => e.InactiveAdnFnf).HasColumnName("Inactive_Adn_FNF");

                entity.Property(e => e.InstagramId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("InstagramID");

                entity.Property(e => e.Interviewed)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.IntrvFlag).HasColumnName("Intrv_Flag");

                entity.Property(e => e.IsPoshtestDone).HasColumnName("IsPOSHTestDone");

                entity.Property(e => e.Ismailconfirmed)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ismailconfirmed")
                    .HasDefaultValueSql("('N')");

                entity.Property(e => e.JoiningDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Languages)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("languages");

                entity.Property(e => e.LastCtcDrawn).HasColumnName("Last_CTC_Drawn");

                entity.Property(e => e.LastCtcpa)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LastCTCPA");

                entity.Property(e => e.LastName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.LastWorkingDate).HasColumnType("datetime");

                entity.Property(e => e.Levels)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LinkedInId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LinkedInID");

                entity.Property(e => e.LogFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MaritalStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.MedicalHistory)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.MiddleName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.MothersMaidenName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.NameoOfAadhar)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Nameofchildren)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.Nationality)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("nationality");

                entity.Property(e => e.NoticePeriod)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NoticePeriodStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NoticePeriod_status")
                    .HasDefaultValueSql("('NO')");

                entity.Property(e => e.OfferLetterDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OfferLetter_Date");

                entity.Property(e => e.OphandOverBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("OPHandOverBy");

                entity.Property(e => e.OphandOverDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OPHandOverDate");

                entity.Property(e => e.OpoEmailId)
                    .HasMaxLength(550)
                    .IsUnicode(false)
                    .HasColumnName("OPO_EmailID");

                entity.Property(e => e.OpoJoiningDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OPO_Joining_Date");

                entity.Property(e => e.OtherQua)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PaidLeave).HasColumnName("Paid_Leave");

                entity.Property(e => e.PanCardNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PAN_Card_No");

                entity.Property(e => e.Passportno)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("passportno");

                entity.Property(e => e.Password)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PensionMember)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("Pension_Member")
                    .IsFixedLength();

                entity.Property(e => e.PermanentArea)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentCity)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentHouseNo)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("PermanentHouse_No");

                entity.Property(e => e.PermanentLandmark)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentMobile)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentPhone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentState)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentStreet)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.PfApplicability)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PF_applicability");

                entity.Property(e => e.PfMember)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PF_Member")
                    .IsFixedLength();

                entity.Property(e => e.PfNo1)
                    .HasMaxLength(50)
                    .HasColumnName("PF_No");

                entity.Property(e => e.PfWithdrawStatus)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PF_Withdraw_Status")
                    .IsFixedLength();

                entity.Property(e => e.Pfno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PFNo");

                entity.Property(e => e.Pfstatus)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("PFStatus");

                entity.Property(e => e.Pgboard)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PGBoard");

                entity.Property(e => e.Pgper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PGPer");

                entity.Property(e => e.Pgyear)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PGYear");

                entity.Property(e => e.Photo)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Placeofbirth)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("placeofbirth");

                entity.Property(e => e.PmapsScore).HasColumnName("PMaps_Score");

                entity.Property(e => e.Prefix)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PreviousEmpcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Previous_EMPCODE");

                entity.Property(e => e.PreviousSubDept)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Previous_SubDept");

                entity.Property(e => e.Pstream)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PStream");

                entity.Property(e => e.RefCheckedName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Checked_Name");

                entity.Property(e => e.RefCheckedNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Checked_No");

                entity.Property(e => e.RefDepartment)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Department");

                entity.Property(e => e.RefDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Designation");

                entity.Property(e => e.RefEmpcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_EMPCode");

                entity.Property(e => e.RefFamilyRelationInEbl)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Family_Relation_In_EBL");

                entity.Property(e => e.RefSubDepartment)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Sub_Department");

                entity.Property(e => e.RejoiningDate)
                    .HasColumnType("datetime")
                    .HasColumnName("rejoining_date");

                entity.Property(e => e.Religion)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("religion");

                entity.Property(e => e.Remark).IsUnicode(false);

                entity.Property(e => e.ResignationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Resignation_Date");

                entity.Property(e => e.RevisedCtc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Revised_CTC");

                entity.Property(e => e.RevisedDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SparkId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Spark_ID");

                entity.Property(e => e.SparkId0nr1r)
                    .HasColumnName("SparkID_0NR_1R")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SpouseName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.StatusId).HasColumnName("Status_ID");

                entity.Property(e => e.SubDept)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Subdepartment1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("subdepartment1");

                entity.Property(e => e.TemporaryEmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Temporary_EmpCode");

                entity.Property(e => e.Tenure)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TransferDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Transfer_Date");

                entity.Property(e => e.TrnfTpoToOpo).HasColumnName("Trnf_TPO_to_OPO");

                entity.Property(e => e.TrngBatchId)
                    .HasMaxLength(50)
                    .HasColumnName("Trng_BatchID");

                entity.Property(e => e.TrngStatus)
                    .HasMaxLength(50)
                    .HasColumnName("trng_status");

                entity.Property(e => e.TrngSubStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Trng_Sub_Status");

                entity.Property(e => e.Uanno).HasColumnName("UANNO");

                entity.Property(e => e.UserId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UserID");

                entity.Property(e => e.VaccinationStatus)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Vaccination_Status");

                entity.Property(e => e.VerifiedId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Verified_ID");

                entity.Property(e => e.VersantScore).HasColumnName("Versant_Score");

                entity.Property(e => e.WfoWfh)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WFO_WFH");

                entity.Property(e => e.WindowId)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WindowsId0nr1r)
                    .HasColumnName("WindowsID_0NR_1R")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.WorkingExperience)
                    .HasMaxLength(500)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<EmpMaster20230621>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("EmpMaster_20230621");

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.Dot)
                    .HasColumnType("datetime")
                    .HasColumnName("DOT");

                entity.Property(e => e.EmpCodeLm)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EmpCodeLM");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OphandOverDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OPHandOverDate");
            });

            modelBuilder.Entity<EmpMasterBkp20231012>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("EmpMasterBKP20231012");

                entity.Property(e => e.AccNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AccessRole)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccessType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Access_Type");

                entity.Property(e => e.ActivatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Activated_By");

                entity.Property(e => e.AdharCardNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Adhar_Card_No");

                entity.Property(e => e.AdharName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AnnivDate).HasColumnType("datetime");

                entity.Property(e => e.Bank)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BankLocation)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("Bank_Location");

                entity.Property(e => e.BankType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Bank_Type");

                entity.Property(e => e.BasicDaRate)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("Basic_DA_Rate");

                entity.Property(e => e.BlackListed).HasColumnName("Black_Listed");

                entity.Property(e => e.BloodGroup)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Branch)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CardNo).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CertificationComments)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("Certification_Comments");

                entity.Property(e => e.Company1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Company2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Company3)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Company4)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ConfirmationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("confirmation_date");

                entity.Property(e => e.ContractCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Contract_code");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("created_by");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.CurrentArea)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentCity)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentHouseNo)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("CurrentHouse_No");

                entity.Property(e => e.CurrentLandmark)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentMobile)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentPhone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentState)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentStreet)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Department)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DesigEffectedDate).HasColumnType("datetime");

                entity.Property(e => e.Designation1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Designation2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Designation3)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Designation4)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DialerId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DialerID");

                entity.Property(e => e.Dob)
                    .HasColumnType("datetime")
                    .HasColumnName("DOB");

                entity.Property(e => e.Doc)
                    .HasColumnType("datetime")
                    .HasColumnName("DOC");

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.DolPrev)
                    .HasColumnType("datetime")
                    .HasColumnName("DOL_Prev");

                entity.Property(e => e.Dot)
                    .HasColumnType("datetime")
                    .HasColumnName("DOT");

                entity.Property(e => e.EffectiveDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Effective_Date");

                entity.Property(e => e.EffortLastDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Effort_Last_Date");

                entity.Property(e => e.EmailId0nr1r).HasColumnName("EmailID_0NR_1R");

                entity.Property(e => e.EmailId1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Email_ID");

                entity.Property(e => e.Emailid)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.EmergencyContact)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.EmergencyContactName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpCodeLm)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EmpCodeLM");

                entity.Property(e => e.EmpLevel)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.EmployeeType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Employee_Type");

                entity.Property(e => e.EmploymentStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Employment_Status");

                entity.Property(e => e.EsicApplicability)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ESIC_applicability");

                entity.Property(e => e.Esicno)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ESICNo");

                entity.Property(e => e.Esicstatus)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ESICStatus");

                entity.Property(e => e.ExitStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Exit_Status");

                entity.Property(e => e.FacebookId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FacebookID");

                entity.Property(e => e.FathersName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.FirstName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Fnfdone)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FNFDONE");

                entity.Property(e => e.FtPt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FT_PT");

                entity.Property(e => e.Gboard)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GBoard");

                entity.Property(e => e.Gender)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Gper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("GPer");

                entity.Property(e => e.Grade)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.GrossSalPli)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("Gross_Sal_PLI");

                entity.Property(e => e.GroupName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Gstream)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GStream");

                entity.Property(e => e.Gyear)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("GYear");

                entity.Property(e => e.Handicap)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("handicap");

                entity.Property(e => e.Handicapnature)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("handicapnature");

                entity.Property(e => e.Handicapper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("handicapper");

                entity.Property(e => e.HrBucket).HasColumnName("HR_Bucket");

                entity.Property(e => e.HrLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HR_Location");

                entity.Property(e => e.Hsboard)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("HSBoard");

                entity.Property(e => e.Hsper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HSPer");

                entity.Property(e => e.HssStream)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Hssboard)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("HSSBoard");

                entity.Property(e => e.Hssper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HSSPer");

                entity.Property(e => e.Hsstream)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("HSStream");

                entity.Property(e => e.Hssyear)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HSSYear");

                entity.Property(e => e.Hsyear)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HSYear");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Identificationmark)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("identificationmark");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCode");

                entity.Property(e => e.InactiveAdnFnf).HasColumnName("Inactive_Adn_FNF");

                entity.Property(e => e.InstagramId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("InstagramID");

                entity.Property(e => e.Interviewed)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.IntrvFlag).HasColumnName("Intrv_Flag");

                entity.Property(e => e.IsPoshtestDone).HasColumnName("IsPOSHTestDone");

                entity.Property(e => e.Ismailconfirmed)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ismailconfirmed");

                entity.Property(e => e.JoiningDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Languages)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("languages");

                entity.Property(e => e.LastCtcDrawn).HasColumnName("Last_CTC_Drawn");

                entity.Property(e => e.LastCtcpa)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LastCTCPA");

                entity.Property(e => e.LastName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.LastWorkingDate).HasColumnType("datetime");

                entity.Property(e => e.Levels)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LinkedInId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LinkedInID");

                entity.Property(e => e.LogFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MaritalStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.MedicalHistory)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.MiddleName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.MothersMaidenName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.NameoOfAadhar)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Nameofchildren)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.Nationality)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("nationality");

                entity.Property(e => e.NoticePeriod)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NoticePeriodStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NoticePeriod_status");

                entity.Property(e => e.OfferLetterDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OfferLetter_Date");

                entity.Property(e => e.OphandOverBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("OPHandOverBy");

                entity.Property(e => e.OphandOverDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OPHandOverDate");

                entity.Property(e => e.OpoEmailId)
                    .HasMaxLength(550)
                    .IsUnicode(false)
                    .HasColumnName("OPO_EmailID");

                entity.Property(e => e.OpoJoiningDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OPO_Joining_Date");

                entity.Property(e => e.OtherQua)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PaidLeave).HasColumnName("Paid_Leave");

                entity.Property(e => e.PanCardNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PAN_Card_No");

                entity.Property(e => e.Passportno)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("passportno");

                entity.Property(e => e.Password)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PensionMember)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("Pension_Member")
                    .IsFixedLength();

                entity.Property(e => e.PermanentArea)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentCity)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentHouseNo)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("PermanentHouse_No");

                entity.Property(e => e.PermanentLandmark)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentMobile)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentPhone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentState)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentStreet)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.PfApplicability)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PF_applicability");

                entity.Property(e => e.PfMember)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PF_Member")
                    .IsFixedLength();

                entity.Property(e => e.PfNo1)
                    .HasMaxLength(50)
                    .HasColumnName("PF_No");

                entity.Property(e => e.PfWithdrawStatus)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PF_Withdraw_Status")
                    .IsFixedLength();

                entity.Property(e => e.Pfno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PFNo");

                entity.Property(e => e.Pfstatus)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("PFStatus");

                entity.Property(e => e.Pgboard)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PGBoard");

                entity.Property(e => e.Pgper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PGPer");

                entity.Property(e => e.Pgyear)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PGYear");

                entity.Property(e => e.Photo)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Placeofbirth)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("placeofbirth");

                entity.Property(e => e.PmapsScore).HasColumnName("PMaps_Score");

                entity.Property(e => e.Prefix)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PreviousEmpcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Previous_EMPCODE");

                entity.Property(e => e.PreviousSubDept)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Previous_SubDept");

                entity.Property(e => e.Pstream)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PStream");

                entity.Property(e => e.RefCheckedName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Checked_Name");

                entity.Property(e => e.RefCheckedNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Checked_No");

                entity.Property(e => e.RefDepartment)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Department");

                entity.Property(e => e.RefDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Designation");

                entity.Property(e => e.RefEmpcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_EMPCode");

                entity.Property(e => e.RefFamilyRelationInEbl)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Family_Relation_In_EBL");

                entity.Property(e => e.RefSubDepartment)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Sub_Department");

                entity.Property(e => e.RejoiningDate)
                    .HasColumnType("datetime")
                    .HasColumnName("rejoining_date");

                entity.Property(e => e.Religion)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("religion");

                entity.Property(e => e.Remark).IsUnicode(false);

                entity.Property(e => e.ResignationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Resignation_Date");

                entity.Property(e => e.RevisedCtc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Revised_CTC");

                entity.Property(e => e.RevisedDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SparkId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Spark_ID");

                entity.Property(e => e.SparkId0nr1r).HasColumnName("SparkID_0NR_1R");

                entity.Property(e => e.SpouseName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.StatusId).HasColumnName("Status_ID");

                entity.Property(e => e.SubDept)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Subdepartment1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("subdepartment1");

                entity.Property(e => e.TemporaryEmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Temporary_EmpCode");

                entity.Property(e => e.Tenure)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TransferDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Transfer_Date");

                entity.Property(e => e.TrnfTpoToOpo).HasColumnName("Trnf_TPO_to_OPO");

                entity.Property(e => e.TrngBatchId)
                    .HasMaxLength(50)
                    .HasColumnName("Trng_BatchID");

                entity.Property(e => e.TrngStatus)
                    .HasMaxLength(50)
                    .HasColumnName("trng_status");

                entity.Property(e => e.TrngSubStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Trng_Sub_Status");

                entity.Property(e => e.Uanno).HasColumnName("UANNO");

                entity.Property(e => e.UserId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UserID");

                entity.Property(e => e.VaccinationStatus)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Vaccination_Status");

                entity.Property(e => e.VerifiedId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Verified_ID");

                entity.Property(e => e.VersantScore).HasColumnName("Versant_Score");

                entity.Property(e => e.WfoWfh)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WFO_WFH");

                entity.Property(e => e.WindowId)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WindowsId0nr1r).HasColumnName("WindowsID_0NR_1R");

                entity.Property(e => e.WorkingExperience)
                    .HasMaxLength(500)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<EmpMasterDateTill30June2023>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("EmpMaster_Date_Till30June2023");

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.Dot)
                    .HasColumnType("datetime")
                    .HasColumnName("DOT");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OphandOverDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OPHandOverDate");
            });

            modelBuilder.Entity<EmpMasterLog>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("EmpMaster_Logs");

                entity.Property(e => e.AccNo)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.AccessRole)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccessType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Access_Type");

                entity.Property(e => e.ActivatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Activated_By");

                entity.Property(e => e.AdharCardNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Adhar_Card_No");

                entity.Property(e => e.Am)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("AM");

                entity.Property(e => e.AnnivDate).HasColumnType("datetime");

                entity.Property(e => e.Bank)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.BlackListed).HasColumnName("Black_Listed");

                entity.Property(e => e.BloodGroup)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Branch)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.CardNo).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Company1)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Company2)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Company3)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Company4)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.ConfirmationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("confirmation_date");

                entity.Property(e => e.ContractCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Contract_code");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.CurrentArea)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentCity)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentDesignation)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentHouseNo)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("CurrentHouse_No");

                entity.Property(e => e.CurrentLandmark)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentLocation)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentMobile)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentPhone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentState)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentStreet)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Department)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.DesigEffectedDate).HasColumnType("datetime");

                entity.Property(e => e.Designation1)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Designation2)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Designation3)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Designation4)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.DialerId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DialerID");

                entity.Property(e => e.Dob)
                    .HasColumnType("datetime")
                    .HasColumnName("DOB");

                entity.Property(e => e.Doc)
                    .HasColumnType("datetime")
                    .HasColumnName("DOC");

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.Dot)
                    .HasColumnType("datetime")
                    .HasColumnName("DOT");

                entity.Property(e => e.EffortLastDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Effort_Last_Date");

                entity.Property(e => e.EmailId0nr1r).HasColumnName("EmailID_0NR_1R");

                entity.Property(e => e.EmailId1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Email_ID");

                entity.Property(e => e.Emailid)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.EmergencyContact)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.EmergencyContactName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpCodeLm)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("EmpCodeLM");

                entity.Property(e => e.EmployeeType).HasColumnName("Employee_Type");

                entity.Property(e => e.EmploymentStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Employment_Status");

                entity.Property(e => e.EsicApplicability)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ESIC_applicability");

                entity.Property(e => e.ExitStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Exit_Status");

                entity.Property(e => e.FathersName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.FinalStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Final_Status");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.Fnfdone)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FNFDONE");

                entity.Property(e => e.FtPt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FT_PT");

                entity.Property(e => e.Gboard)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("GBoard");

                entity.Property(e => e.Gender)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Gper)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("GPer");

                entity.Property(e => e.Grade)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.GroupName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Gstream)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("GStream");

                entity.Property(e => e.Gyear)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("GYear");

                entity.Property(e => e.Handicap)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("handicap");

                entity.Property(e => e.Handicapnature)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("handicapnature");

                entity.Property(e => e.Handicapper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("handicapper");

                entity.Property(e => e.HrLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HR_Location");

                entity.Property(e => e.Hrupdate)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("HRupdate");

                entity.Property(e => e.Hsboard)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("HSBoard");

                entity.Property(e => e.Hsper)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("HSPer");

                entity.Property(e => e.HssStream)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Hssboard)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("HSSBoard");

                entity.Property(e => e.Hssper)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("HSSPer");

                entity.Property(e => e.Hsstream)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("HSStream");

                entity.Property(e => e.Hssyear)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("HSSYear");

                entity.Property(e => e.Hsyear)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("HSYear");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Identificationmark)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("identificationmark");

                entity.Property(e => e.IntrvFlag).HasColumnName("Intrv_Flag");

                entity.Property(e => e.Itupdate)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ITupdate");

                entity.Property(e => e.JoiningDesignation)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Languages)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("languages");

                entity.Property(e => e.LastCtcDrawn).HasColumnName("Last_CTC_Drawn");

                entity.Property(e => e.LastCtcpa)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("LastCTCPA");

                entity.Property(e => e.LastName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.LastWorkingMonth)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Last_Working_Month");

                entity.Property(e => e.LogFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MaritalStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.MedicalHistory)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.MiddleName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.MothersMaidenName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.Nameofchildren)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.Nationality)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("nationality");

                entity.Property(e => e.NoticePeriod)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.NoticePeriodStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NoticePeriod_status");

                entity.Property(e => e.OfferLetterDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OfferLetter_Date");

                entity.Property(e => e.Om)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("OM");

                entity.Property(e => e.OphandOverDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OPHandOverDate");

                entity.Property(e => e.OpoEmailId)
                    .HasMaxLength(550)
                    .IsUnicode(false)
                    .HasColumnName("OPO_EmailID");

                entity.Property(e => e.OpoJoiningDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OPO_Joining_Date");

                entity.Property(e => e.OtherQua)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.PaidLeave).HasColumnName("Paid_Leave");

                entity.Property(e => e.PanCardNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PAN_Card_No");

                entity.Property(e => e.Passportno)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("passportno");

                entity.Property(e => e.Password)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentArea)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentCity)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentHouseNo)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("PermanentHouse_No");

                entity.Property(e => e.PermanentLandmark)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentMobile)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentPhone)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentState)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentStreet)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.PfApplicability)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PF_applicability");

                entity.Property(e => e.Pgboard)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("PGBoard");

                entity.Property(e => e.Pgper)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("PGPer");

                entity.Property(e => e.Pgyear)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("PGYear");

                entity.Property(e => e.Photo)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Placeofbirth)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("placeofbirth");

                entity.Property(e => e.Prefix)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PreviousEmpcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Previous_EMPCODE");

                entity.Property(e => e.Pstream)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("PStream");

                entity.Property(e => e.ReasonForLeaving)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("Reason_For_Leaving");

                entity.Property(e => e.RefCheckedName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Checked_Name");

                entity.Property(e => e.RefCheckedNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Checked_No");

                entity.Property(e => e.RefDepartment)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Department");

                entity.Property(e => e.RefDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Designation");

                entity.Property(e => e.RefEmpcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_EMPCode");

                entity.Property(e => e.RefFamilyRelationInEbl)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Family_Relation_In_EBL");

                entity.Property(e => e.RefSubDepartment)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Sub_Department");

                entity.Property(e => e.RejoiningDate)
                    .HasColumnType("datetime")
                    .HasColumnName("rejoining_date");

                entity.Property(e => e.Religion)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("religion");

                entity.Property(e => e.ResignationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Resignation_Date");

                entity.Property(e => e.SparkId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Spark_ID");

                entity.Property(e => e.SparkId0nr1r).HasColumnName("SparkID_0NR_1R");

                entity.Property(e => e.SpouseName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.Status)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.StatusId).HasColumnName("Status_ID");

                entity.Property(e => e.SubDept)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Tenure)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Tm)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("TM");

                entity.Property(e => e.TotalWorkingExperience)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Total_working_Experience");

                entity.Property(e => e.UserId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UserID");

                entity.Property(e => e.VerifiedId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Verified_ID");

                entity.Property(e => e.WfoWfh)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WFO_WFH");

                entity.Property(e => e.WindowId)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WindowsId0nr1r).HasColumnName("WindowsID_0NR_1R");

                entity.Property(e => e.WorkingExperience)
                    .HasMaxLength(5000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<EmpMasterTpo>(entity =>
            {
                entity.HasKey(e => e.EmpCode)
                    .HasName("PK_EmpMaster_TPO_1");

                entity.ToTable("EmpMaster_TPO");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AccessRole)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccessType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Access_Type");

                entity.Property(e => e.ActivatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Activated_By");

                entity.Property(e => e.ActiveEmp).HasDefaultValueSql("((1))");

                entity.Property(e => e.AdharCardNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Adhar_Card_No");

                entity.Property(e => e.AdharName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AnnivDate).HasColumnType("datetime");

                entity.Property(e => e.Bank)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BankLocation)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("Bank_Location");

                entity.Property(e => e.BankType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Bank_Type");

                entity.Property(e => e.BasicDaRate)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("Basic_DA_Rate");

                entity.Property(e => e.BlackListed)
                    .HasColumnName("Black_Listed")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BloodGroup)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Branch)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CardNo)
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CertificationComments)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("Certification_Comments");

                entity.Property(e => e.CompOff).HasDefaultValueSql("((0))");

                entity.Property(e => e.Company1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Company2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Company3)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Company4)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ConfirmationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("confirmation_date");

                entity.Property(e => e.ContractCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Contract_code");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("created_by");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.CurrentArea)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentCity)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentHouseNo)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("CurrentHouse_No");

                entity.Property(e => e.CurrentLandmark)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentMobile)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentPhone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentState)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentStreet)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Department)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DesigEffectedDate).HasColumnType("datetime");

                entity.Property(e => e.Designation1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Designation2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Designation3)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Designation4)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DialerId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DialerID");

                entity.Property(e => e.Dob)
                    .HasColumnType("datetime")
                    .HasColumnName("DOB");

                entity.Property(e => e.Doc)
                    .HasColumnType("datetime")
                    .HasColumnName("DOC");

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.DolPrev)
                    .HasColumnType("datetime")
                    .HasColumnName("DOL_Prev");

                entity.Property(e => e.Dot)
                    .HasColumnType("datetime")
                    .HasColumnName("DOT");

                entity.Property(e => e.EffectiveDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Effective_Date");

                entity.Property(e => e.EffortLastDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Effort_Last_Date");

                entity.Property(e => e.EmailId0nr1r)
                    .HasColumnName("EmailID_0NR_1R")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.EmailId1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Email_ID");

                entity.Property(e => e.Emailid)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.EmergencyContact)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.EmergencyContactName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.EmpCodeLm)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EmpCodeLM");

                entity.Property(e => e.EmpLevel)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasComment("0 = CRE, 1 = TL, 2 = AM, 3 = OM");

                entity.Property(e => e.EmployeeType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Employee_Type");

                entity.Property(e => e.EmploymentStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Employment_Status");

                entity.Property(e => e.EsicApplicability)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ESIC_applicability");

                entity.Property(e => e.Esicno)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ESICNo");

                entity.Property(e => e.Esicstatus)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ESICStatus");

                entity.Property(e => e.ExitStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Exit_Status");

                entity.Property(e => e.FacebookId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FacebookID");

                entity.Property(e => e.FathersName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.FirstName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Fnfdone)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FNFDONE");

                entity.Property(e => e.FtPt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FT_PT");

                entity.Property(e => e.Gboard)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GBoard");

                entity.Property(e => e.Gender)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Gper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("GPer");

                entity.Property(e => e.Grade)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.GrossSalPli)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("Gross_Sal_PLI");

                entity.Property(e => e.GroupName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Gstream)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GStream");

                entity.Property(e => e.Gyear)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("GYear");

                entity.Property(e => e.Handicap)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("handicap");

                entity.Property(e => e.Handicapnature)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("handicapnature");

                entity.Property(e => e.Handicapper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("handicapper");

                entity.Property(e => e.HrBucket)
                    .HasColumnName("HR_Bucket")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.HrLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HR_Location");

                entity.Property(e => e.Hsboard)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("HSBoard");

                entity.Property(e => e.Hsper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HSPer");

                entity.Property(e => e.HssStream)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Hssboard)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("HSSBoard");

                entity.Property(e => e.Hssper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HSSPer");

                entity.Property(e => e.Hsstream)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("HSStream");

                entity.Property(e => e.Hssyear)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HSSYear");

                entity.Property(e => e.Hsyear)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HSYear");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Identificationmark)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("identificationmark");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCode");

                entity.Property(e => e.InactiveAdnFnf).HasColumnName("Inactive_Adn_FNF");

                entity.Property(e => e.InstagramId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("InstagramID");

                entity.Property(e => e.Interviewed)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.IntrvFlag).HasColumnName("Intrv_Flag");

                entity.Property(e => e.IsPoshtestDone).HasColumnName("IsPOSHTestDone");

                entity.Property(e => e.Ismailconfirmed)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ismailconfirmed")
                    .HasDefaultValueSql("('N')");

                entity.Property(e => e.JoiningDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Languages)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("languages");

                entity.Property(e => e.LastCtcDrawn).HasColumnName("Last_CTC_Drawn");

                entity.Property(e => e.LastCtcpa)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LastCTCPA");

                entity.Property(e => e.LastName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.LastWorkingDate).HasColumnType("datetime");

                entity.Property(e => e.Levels)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LinkedInId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LinkedInID");

                entity.Property(e => e.LogFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MaritalStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.MedicalHistory)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.MiddleName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.MothersMaidenName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.NameoOfAadhar)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Nameofchildren)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.Nationality)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("nationality");

                entity.Property(e => e.NoticePeriod)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NoticePeriodStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NoticePeriod_status")
                    .HasDefaultValueSql("('NO')");

                entity.Property(e => e.OfferLetterDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OfferLetter_Date");

                entity.Property(e => e.OphandOverBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("OPHandOverBy");

                entity.Property(e => e.OphandOverDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OPHandOverDate");

                entity.Property(e => e.OpoEmailId)
                    .HasMaxLength(550)
                    .IsUnicode(false)
                    .HasColumnName("OPO_EmailID");

                entity.Property(e => e.OpoJoiningDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OPO_Joining_Date");

                entity.Property(e => e.OtherQua)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PaidLeave).HasColumnName("Paid_Leave");

                entity.Property(e => e.PanCardNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PAN_Card_No");

                entity.Property(e => e.Passportno)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("passportno");

                entity.Property(e => e.Password)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PensionMember)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("Pension_Member")
                    .IsFixedLength();

                entity.Property(e => e.PermanentArea)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentCity)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentHouseNo)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("PermanentHouse_No");

                entity.Property(e => e.PermanentLandmark)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentMobile)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentPhone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentState)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentStreet)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.PfApplicability)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PF_applicability");

                entity.Property(e => e.PfMember)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PF_Member")
                    .IsFixedLength();

                entity.Property(e => e.PfNo1)
                    .HasMaxLength(50)
                    .HasColumnName("PF_No");

                entity.Property(e => e.PfWithdrawStatus)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PF_Withdraw_Status")
                    .IsFixedLength();

                entity.Property(e => e.Pfno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PFNo");

                entity.Property(e => e.Pfstatus)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("PFStatus");

                entity.Property(e => e.Pgboard)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PGBoard");

                entity.Property(e => e.Pgper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PGPer");

                entity.Property(e => e.Pgyear)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PGYear");

                entity.Property(e => e.Photo)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Placeofbirth)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("placeofbirth");

                entity.Property(e => e.PmapsScore).HasColumnName("PMaps_Score");

                entity.Property(e => e.Prefix)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PreviousEmpcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Previous_EMPCODE");

                entity.Property(e => e.PreviousSubDept)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Previous_SubDept");

                entity.Property(e => e.Pstream)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PStream");

                entity.Property(e => e.RefCheckedName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Checked_Name");

                entity.Property(e => e.RefCheckedNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Checked_No");

                entity.Property(e => e.RefDepartment)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Department");

                entity.Property(e => e.RefDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Designation");

                entity.Property(e => e.RefEmpcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_EMPCode");

                entity.Property(e => e.RefFamilyRelationInEbl)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Family_Relation_In_EBL");

                entity.Property(e => e.RefSubDepartment)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Sub_Department");

                entity.Property(e => e.RejoiningDate)
                    .HasColumnType("datetime")
                    .HasColumnName("rejoining_date");

                entity.Property(e => e.Religion)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("religion");

                entity.Property(e => e.Remark).IsUnicode(false);

                entity.Property(e => e.ResignationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Resignation_Date");

                entity.Property(e => e.RevisedCtc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Revised_CTC");

                entity.Property(e => e.RevisedDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SparkId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Spark_ID");

                entity.Property(e => e.SparkId0nr1r)
                    .HasColumnName("SparkID_0NR_1R")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SpouseName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.StatusId).HasColumnName("Status_ID");

                entity.Property(e => e.SubDept)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Subdepartment1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("subdepartment1");

                entity.Property(e => e.TemporaryEmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Temporary_EmpCode");

                entity.Property(e => e.Tenure)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TransferDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Transfer_Date");

                entity.Property(e => e.TrnfTpoToOpo)
                    .HasColumnName("Trnf_TPO_to_OPO")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TrngBatchId)
                    .HasMaxLength(50)
                    .HasColumnName("Trng_BatchID");

                entity.Property(e => e.TrngStatus)
                    .HasMaxLength(50)
                    .HasColumnName("trng_status");

                entity.Property(e => e.TrngSubStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Trng_Sub_Status");

                entity.Property(e => e.Uanno).HasColumnName("UANNO");

                entity.Property(e => e.UserId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UserID");

                entity.Property(e => e.VaccinationStatus)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Vaccination_Status");

                entity.Property(e => e.VerifiedId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Verified_ID");

                entity.Property(e => e.VersantScore).HasColumnName("Versant_Score");

                entity.Property(e => e.WfoWfh)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WFO_WFH");

                entity.Property(e => e.WindowId)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WindowsId0nr1r)
                    .HasColumnName("WindowsID_0NR_1R")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.WorkingExperience)
                    .HasMaxLength(500)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<EmpMasterTpoLog>(entity =>
            {
                entity.ToTable("EmpMaster_TPO_Log");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.AccNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AccessRole)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccessType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Access_Type");

                entity.Property(e => e.ActivatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Activated_By");

                entity.Property(e => e.AdharCardNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Adhar_Card_No");

                entity.Property(e => e.AdharName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AnnivDate).HasColumnType("datetime");

                entity.Property(e => e.Bank)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BankLocation)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("Bank_Location");

                entity.Property(e => e.BankType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Bank_Type");

                entity.Property(e => e.BasicDaRate)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("Basic_DA_Rate");

                entity.Property(e => e.BlackListed).HasColumnName("Black_Listed");

                entity.Property(e => e.BloodGroup)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Branch)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CardNo).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CertificationComments)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("Certification_Comments");

                entity.Property(e => e.Company1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Company2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Company3)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Company4)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ConfirmationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("confirmation_date");

                entity.Property(e => e.ContractCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Contract_code");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("created_by");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.CurrentArea)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentCity)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentHouseNo)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("CurrentHouse_No");

                entity.Property(e => e.CurrentLandmark)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentMobile)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentPhone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentState)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentStreet)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Department)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DesigEffectedDate).HasColumnType("datetime");

                entity.Property(e => e.Designation1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Designation2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Designation3)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Designation4)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DialerId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DialerID");

                entity.Property(e => e.Dob)
                    .HasColumnType("datetime")
                    .HasColumnName("DOB");

                entity.Property(e => e.Doc)
                    .HasColumnType("datetime")
                    .HasColumnName("DOC");

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.DolPrev)
                    .HasColumnType("datetime")
                    .HasColumnName("DOL_Prev");

                entity.Property(e => e.Dot)
                    .HasColumnType("datetime")
                    .HasColumnName("DOT");

                entity.Property(e => e.EffectiveDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Effective_Date");

                entity.Property(e => e.EffortLastDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Effort_Last_Date");

                entity.Property(e => e.EmailId0nr1r).HasColumnName("EmailID_0NR_1R");

                entity.Property(e => e.EmailId1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Email_ID");

                entity.Property(e => e.Emailid)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.EmergencyContact)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.EmergencyContactName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpCodeLm)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EmpCodeLM");

                entity.Property(e => e.EmpLevel)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.EmployeeType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Employee_Type");

                entity.Property(e => e.EmploymentStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Employment_Status");

                entity.Property(e => e.EsicApplicability)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ESIC_applicability");

                entity.Property(e => e.Esicno)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ESICNo");

                entity.Property(e => e.Esicstatus)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ESICStatus");

                entity.Property(e => e.ExitStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Exit_Status");

                entity.Property(e => e.FacebookId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FacebookID");

                entity.Property(e => e.FathersName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.FirstName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Fnfdone)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FNFDONE");

                entity.Property(e => e.FtPt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FT_PT");

                entity.Property(e => e.Gboard)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GBoard");

                entity.Property(e => e.Gender)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Gper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("GPer");

                entity.Property(e => e.Grade)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.GrossSalPli)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("Gross_Sal_PLI");

                entity.Property(e => e.GroupName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Gstream)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GStream");

                entity.Property(e => e.Gyear)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("GYear");

                entity.Property(e => e.Handicap)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("handicap");

                entity.Property(e => e.Handicapnature)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("handicapnature");

                entity.Property(e => e.Handicapper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("handicapper");

                entity.Property(e => e.HrBucket).HasColumnName("HR_Bucket");

                entity.Property(e => e.HrLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HR_Location");

                entity.Property(e => e.Hsboard)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("HSBoard");

                entity.Property(e => e.Hsper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HSPer");

                entity.Property(e => e.HssStream)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Hssboard)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("HSSBoard");

                entity.Property(e => e.Hssper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HSSPer");

                entity.Property(e => e.Hsstream)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("HSStream");

                entity.Property(e => e.Hssyear)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HSSYear");

                entity.Property(e => e.Hsyear)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HSYear");

                entity.Property(e => e.Identificationmark)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("identificationmark");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCode");

                entity.Property(e => e.InactiveAdnFnf).HasColumnName("Inactive_Adn_FNF");

                entity.Property(e => e.InstagramId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("InstagramID");

                entity.Property(e => e.Interviewed)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.IntrvFlag).HasColumnName("Intrv_Flag");

                entity.Property(e => e.IsPoshtestDone).HasColumnName("IsPOSHTestDone");

                entity.Property(e => e.Ismailconfirmed)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ismailconfirmed");

                entity.Property(e => e.JoiningDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Languages)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("languages");

                entity.Property(e => e.LastCtcDrawn).HasColumnName("Last_CTC_Drawn");

                entity.Property(e => e.LastCtcpa)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LastCTCPA");

                entity.Property(e => e.LastName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.LastWorkingDate).HasColumnType("datetime");

                entity.Property(e => e.Levels)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LinkedInId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LinkedInID");

                entity.Property(e => e.LogFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MaritalStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.MedicalHistory)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.MiddleName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.MothersMaidenName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.NameoOfAadhar)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Nameofchildren)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.Nationality)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("nationality");

                entity.Property(e => e.NoticePeriod)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NoticePeriodStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NoticePeriod_status");

                entity.Property(e => e.OfferLetterDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OfferLetter_Date");

                entity.Property(e => e.OphandOverBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("OPHandOverBy");

                entity.Property(e => e.OphandOverDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OPHandOverDate");

                entity.Property(e => e.OpoEmailId)
                    .HasMaxLength(550)
                    .IsUnicode(false)
                    .HasColumnName("OPO_EmailID");

                entity.Property(e => e.OpoJoiningDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OPO_Joining_Date");

                entity.Property(e => e.OtherQua)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PaidLeave).HasColumnName("Paid_Leave");

                entity.Property(e => e.PanCardNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PAN_Card_No");

                entity.Property(e => e.Passportno)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("passportno");

                entity.Property(e => e.Password)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PensionMember)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("Pension_Member")
                    .IsFixedLength();

                entity.Property(e => e.PermanentArea)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentCity)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentHouseNo)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("PermanentHouse_No");

                entity.Property(e => e.PermanentLandmark)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentMobile)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentPhone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentState)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentStreet)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.PfApplicability)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PF_applicability");

                entity.Property(e => e.PfMember)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PF_Member")
                    .IsFixedLength();

                entity.Property(e => e.PfNo1)
                    .HasMaxLength(50)
                    .HasColumnName("PF_No");

                entity.Property(e => e.PfWithdrawStatus)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PF_Withdraw_Status")
                    .IsFixedLength();

                entity.Property(e => e.Pfno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PFNo");

                entity.Property(e => e.Pfstatus)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("PFStatus");

                entity.Property(e => e.Pgboard)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PGBoard");

                entity.Property(e => e.Pgper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PGPer");

                entity.Property(e => e.Pgyear)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PGYear");

                entity.Property(e => e.Photo)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Placeofbirth)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("placeofbirth");

                entity.Property(e => e.PmapsScore).HasColumnName("PMaps_Score");

                entity.Property(e => e.Prefix)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PreviousEmpcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Previous_EMPCODE");

                entity.Property(e => e.PreviousSubDept)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Previous_SubDept");

                entity.Property(e => e.Pstream)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PStream");

                entity.Property(e => e.RefCheckedName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Checked_Name");

                entity.Property(e => e.RefCheckedNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Checked_No");

                entity.Property(e => e.RefDepartment)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Department");

                entity.Property(e => e.RefDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Designation");

                entity.Property(e => e.RefEmpcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_EMPCode");

                entity.Property(e => e.RefFamilyRelationInEbl)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Family_Relation_In_EBL");

                entity.Property(e => e.RefSubDepartment)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Sub_Department");

                entity.Property(e => e.RejoiningDate)
                    .HasColumnType("datetime")
                    .HasColumnName("rejoining_date");

                entity.Property(e => e.Religion)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("religion");

                entity.Property(e => e.Remark).IsUnicode(false);

                entity.Property(e => e.ResignationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Resignation_Date");

                entity.Property(e => e.RevisedCtc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Revised_CTC");

                entity.Property(e => e.RevisedDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SparkId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Spark_ID");

                entity.Property(e => e.SparkId0nr1r).HasColumnName("SparkID_0NR_1R");

                entity.Property(e => e.SpouseName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.StatusId).HasColumnName("Status_ID");

                entity.Property(e => e.SubDept)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Subdepartment1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("subdepartment1");

                entity.Property(e => e.TemporaryEmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Temporary_EmpCode");

                entity.Property(e => e.Tenure)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TransferDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Transfer_Date");

                entity.Property(e => e.TrnfTpoToOpo).HasColumnName("Trnf_TPO_to_OPO");

                entity.Property(e => e.TrngBatchId)
                    .HasMaxLength(50)
                    .HasColumnName("Trng_BatchID");

                entity.Property(e => e.TrngStatus)
                    .HasMaxLength(50)
                    .HasColumnName("trng_status");

                entity.Property(e => e.TrngSubStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Trng_Sub_Status");

                entity.Property(e => e.Uanno).HasColumnName("UANNO");

                entity.Property(e => e.UserId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UserID");

                entity.Property(e => e.VaccinationStatus)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Vaccination_Status");

                entity.Property(e => e.VerifiedId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Verified_ID");

                entity.Property(e => e.VersantScore).HasColumnName("Versant_Score");

                entity.Property(e => e.WfoWfh)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WFO_WFH");

                entity.Property(e => e.WindowId)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WindowsId0nr1r).HasColumnName("WindowsID_0NR_1R");

                entity.Property(e => e.WorkingExperience)
                    .HasMaxLength(500)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Department>(entity =>
            {
                entity.ToTable("Department");

                entity.Property(e => e.DepartmentName)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });
            modelBuilder.Entity<EmpStatusDetail>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Date).HasColumnType("datetime");

                entity.Property(e => e.EmpCode).HasMaxLength(9);

                entity.Property(e => e.LmempCode)
                    .HasMaxLength(9)
                    .HasColumnName("LMEmpCode");

                entity.Property(e => e.Reason).HasMaxLength(200);

                entity.Property(e => e.Status).HasMaxLength(10);
            });

            modelBuilder.Entity<EmpcodeMissing>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("empcode_Missing");

                entity.Property(e => e.Activeemp).HasColumnName("activeemp");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpCodeLm)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EmpCodeLM");

                entity.Property(e => e.TemporaryEmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Temporary_EmpCode");
            });

            modelBuilder.Entity<Employee>(entity =>
            {
                entity.HasIndex(e => e.EmployeeCode, "IX_EmployeeCode");

                entity.HasIndex(e => new { e.EmployeeCodeInDevice, e.RecordStatus }, "IX_EmployeeCodeInDevice_RecordStatus");

                entity.HasIndex(e => e.RecordStatus, "IX_EmployeeRecordStatus");

                entity.HasIndex(e => new { e.Status, e.RecordStatus }, "IX_EmployeeRecordStatusCheck");

                entity.HasIndex(e => new { e.RecordStatus, e.CompanyId }, "IX_EmployeeRecordStatusCompanyId");

                entity.HasIndex(e => new { e.LoginName, e.LoginPassword, e.Dor, e.RecordStatus }, "IX_Login_Password_DOR_Record");

                entity.Property(e => e.AadharCardNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccomodationType)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.AccountHolder)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ActualDob)
                    .HasColumnType("datetime")
                    .HasColumnName("ActualDOB");

                entity.Property(e => e.ActualDoj)
                    .HasColumnType("datetime")
                    .HasColumnName("ActualDOJ");

                entity.Property(e => e.AndroidDeviceImeino)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AndroidDeviceIMEINo");

                entity.Property(e => e.BankAccountNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BasicRateDaily).HasColumnType("decimal(10, 0)");

                entity.Property(e => e.Bloodgroup)
                    .HasMaxLength(255)
                    .HasColumnName("BLOODGROUP");

                entity.Property(e => e.ContactNo).HasMaxLength(255);

                entity.Property(e => e.CtakeUnlimitedLe).HasColumnName("CTakeUnlimitedLe");

                entity.Property(e => e.DailyWage1).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.DailyWage2).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.DailyWage3).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.DailyWage4).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.DailyWage5).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.DailyWage6).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.DateOfExitPf)
                    .HasColumnType("datetime")
                    .HasColumnName("DateOfExitPF");

                entity.Property(e => e.DateOfJoiningPf)
                    .HasColumnType("datetime")
                    .HasColumnName("DateOfJoiningPF");

                entity.Property(e => e.Designation).HasMaxLength(255);

                entity.Property(e => e.Dob)
                    .HasColumnType("datetime")
                    .HasColumnName("DOB");

                entity.Property(e => e.Doc)
                    .HasColumnType("datetime")
                    .HasColumnName("DOC");

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.Dor)
                    .HasColumnType("datetime")
                    .HasColumnName("DOR");

                entity.Property(e => e.DrivingLicenseNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DurationOfEmpFromDate).HasColumnType("datetime");

                entity.Property(e => e.DurationOfEmpToDate).HasColumnType("datetime");

                entity.Property(e => e.DutiesAndResponsibilities)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EffectiveFrom).HasColumnType("datetime");

                entity.Property(e => e.Email).HasMaxLength(255);

                entity.Property(e => e.EmergencyContact1Name)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.EmergencyContact1Number)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.EmergencyContact1Relation)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.EmergencyContact2Name)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.EmergencyContact2Number)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.EmergencyContact2Relation)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.EmployeeCode).HasMaxLength(50);

                entity.Property(e => e.EmployeeCodeInDevice).HasMaxLength(50);

                entity.Property(e => e.EmployeeDeviceGroup).HasMaxLength(50);

                entity.Property(e => e.EmployeeDevicePassword).HasMaxLength(50);

                entity.Property(e => e.EmployeeDeviceToken)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.EmployeeName).HasMaxLength(50);

                entity.Property(e => e.EmployeeRfidnumber)
                    .HasMaxLength(255)
                    .HasColumnName("EmployeeRFIDNumber");

                entity.Property(e => e.EmployementType).HasMaxLength(255);

                entity.Property(e => e.EsiapplicabilityEffectiveFrom)
                    .HasColumnType("datetime")
                    .HasColumnName("ESIApplicabilityEffectiveFrom");

                entity.Property(e => e.EsiapplicabilityFirstHalf).HasColumnName("ESIApplicabilityFirstHalf");

                entity.Property(e => e.EsiapplicabilitySecondHalf).HasColumnName("ESIApplicabilitySecondHalf");

                entity.Property(e => e.Esidispensary)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ESIDispensary");

                entity.Property(e => e.Esino)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ESINo");

                entity.Property(e => e.ExitInterviewDate).HasColumnType("datetime");

                entity.Property(e => e.ExitInterviewRemarks)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.ExitRemarks)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ExtensionNo).HasMaxLength(255);

                entity.Property(e => e.FatherName).HasMaxLength(255);

                entity.Property(e => e.FinalSettlementSalaryHoldFrom).HasColumnType("datetime");

                entity.Property(e => e.FrinexpireOn)
                    .HasColumnType("datetime")
                    .HasColumnName("FRINExpireOn");

                entity.Property(e => e.Gender).HasMaxLength(255);

                entity.Property(e => e.Grade).HasMaxLength(255);

                entity.Property(e => e.HusbandName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCode");

                entity.Property(e => e.IsEmployerPfrestrict).HasColumnName("IsEmployerPFRestrict");

                entity.Property(e => e.IsEnableBgGeoLocation).HasColumnName("IsEnableBG_GeoLocation");

                entity.Property(e => e.IsHrmanager).HasColumnName("IsHRManager");

                entity.Property(e => e.IsIgnoreImeivalidation).HasColumnName("IsIgnoreIMEIValidation");

                entity.Property(e => e.IsNavigateGmap).HasColumnName("IsNavigateGMap");

                entity.Property(e => e.IsOverridePfsetting).HasColumnName("IsOverridePFSetting");

                entity.Property(e => e.IsRestrictPfcontri).HasColumnName("IsRestrictPFcontri");

                entity.Property(e => e.IsSendApproveDeclineSms).HasColumnName("IsSendApproveDeclineSMS");

                entity.Property(e => e.IsTdsapplicable).HasColumnName("IsTDSApplicable");

                entity.Property(e => e.IsTdsnotApplicable).HasColumnName("IsTDSNotApplicable");

                entity.Property(e => e.IsZeroHra).HasColumnName("IsZeroHRA");

                entity.Property(e => e.IsZeroItdeduction).HasColumnName("IsZeroITDeduction");

                entity.Property(e => e.IsZeroLwf).HasColumnName("IsZeroLWF");

                entity.Property(e => e.IsZeroPt).HasColumnName("IsZeroPT");

                entity.Property(e => e.IsZeroPtdeduction).HasColumnName("IsZeroPTDeduction");

                entity.Property(e => e.Isesino).HasColumnName("ISESINo");

                entity.Property(e => e.Isgratuity).HasColumnName("ISGratuity");

                entity.Property(e => e.Ispfno).HasColumnName("ISPFNo");

                entity.Property(e => e.LastDeleteCommandTriggerOn).HasColumnType("datetime");

                entity.Property(e => e.LastMobileAppEsslogin)
                    .HasColumnType("datetime")
                    .HasColumnName("LastMobileAppESSLogin");

                entity.Property(e => e.LastModifiedBy).HasMaxLength(50);

                entity.Property(e => e.LastUpdatedOn).HasColumnType("datetime");

                entity.Property(e => e.LastWebEsslogin)
                    .HasColumnType("datetime")
                    .HasColumnName("LastWebESSLogin");

                entity.Property(e => e.LeaveCreditFromDate).HasColumnType("datetime");

                entity.Property(e => e.LoginName).HasMaxLength(255);

                entity.Property(e => e.LoginPassword).HasMaxLength(255);

                entity.Property(e => e.MaritialStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ModeOfPayment)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ModeOfSalaryCalculation).HasMaxLength(50);

                entity.Property(e => e.MotherName).HasMaxLength(255);

                entity.Property(e => e.NameAsPerAadhar)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Nationality)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Nomenee1).HasMaxLength(255);

                entity.Property(e => e.Nomenee1Per).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.Nomenee2).HasMaxLength(255);

                entity.Property(e => e.Nomenee2Per).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.OfficialMobile)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OfficialPhone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PanStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Panno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PANNo");

                entity.Property(e => e.PassportExpireOn).HasColumnType("datetime");

                entity.Property(e => e.PassportNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PassportNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentAddress)
                    .HasMaxLength(2000)
                    .IsUnicode(false);

                entity.Property(e => e.PersonaleMailId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PersonaleMailID");

                entity.Property(e => e.PfapplicabilityEffectiveFrom)
                    .HasColumnType("datetime")
                    .HasColumnName("PFApplicabilityEffectiveFrom");

                entity.Property(e => e.Pfno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PFNo");

                entity.Property(e => e.PfnoDeptFile)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PFNoDeptFile");

                entity.Property(e => e.PlaceOfBirth).HasMaxLength(255);

                entity.Property(e => e.ProbationCompletionDate).HasColumnType("datetime");

                entity.Property(e => e.PushNotificationId)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RationCardNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ReasonForLeaving)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks).HasColumnType("ntext");

                entity.Property(e => e.ReportTo)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.ResidentialAddress)
                    .HasMaxLength(2000)
                    .IsUnicode(false);

                entity.Property(e => e.ResignationCode)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ResignationSubmittedOn).HasColumnType("datetime");

                entity.Property(e => e.RestrictEmployeePfeffectiveFrom)
                    .HasColumnType("datetime")
                    .HasColumnName("RestrictEmployeePFEffectiveFrom");

                entity.Property(e => e.RestrictEmployerPfeffectiveFrom)
                    .HasColumnType("datetime")
                    .HasColumnName("RestrictEmployerPFEffectiveFrom");

                entity.Property(e => e.SalaryCalculateFrom).HasColumnType("datetime");

                entity.Property(e => e.SalaryHoldFrom).HasColumnType("datetime");

                entity.Property(e => e.SettlementDate).HasColumnType("datetime");

                entity.Property(e => e.ShiftPatternAssignedOn).HasColumnType("datetime");

                entity.Property(e => e.ShiftType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SpouseName).HasMaxLength(50);

                entity.Property(e => e.Status).HasMaxLength(255);

                entity.Property(e => e.StayingWith)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.StringCode).HasMaxLength(50);

                entity.Property(e => e.Team).HasMaxLength(255);

                entity.Property(e => e.TentativeLeavingDate).HasColumnType("datetime");

                entity.Property(e => e.Uanno)
                    .HasMaxLength(50)
                    .HasColumnName("UANNo");

                entity.Property(e => e.Uidno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UIDNo");

                entity.Property(e => e.VoterIdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WardCircle)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WebTokenId)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WorkPlace).HasMaxLength(255);

                entity.Property(e => e.ZeroPensionApplicabilityEffectiveFrom).HasColumnType("datetime");

                entity.Property(e => e.ZeroPtapplicabilityFrom)
                    .HasColumnType("datetime")
                    .HasColumnName("ZeroPTApplicabilityFrom");
            });

            modelBuilder.Entity<EmployeeMailId>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Employee_MailId");

                entity.Property(e => e.CreatedOn)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.EmailId)
                    .IsUnicode(false)
                    .HasColumnName("Email_Id");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.OpoId)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Empmaster20>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("empmaster_20");

                entity.Property(e => e.AccNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AccessRole)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccessType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Access_Type");

                entity.Property(e => e.ActivatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Activated_By");

                entity.Property(e => e.AdharCardNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Adhar_Card_No");

                entity.Property(e => e.AdharName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AnnivDate).HasColumnType("datetime");

                entity.Property(e => e.Bank)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BankLocation)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("Bank_Location");

                entity.Property(e => e.BankType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Bank_Type");

                entity.Property(e => e.BasicDaRate)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("Basic_DA_Rate");

                entity.Property(e => e.BlackListed).HasColumnName("Black_Listed");

                entity.Property(e => e.BloodGroup)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Branch)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CardNo).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CertificationComments)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("Certification_Comments");

                entity.Property(e => e.Company1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Company2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Company3)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Company4)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ConfirmationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("confirmation_date");

                entity.Property(e => e.ContractCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Contract_code");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("created_by");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.CurrentArea)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentCity)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentHouseNo)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("CurrentHouse_No");

                entity.Property(e => e.CurrentLandmark)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentMobile)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentPhone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentState)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentStreet)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Department)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DesigEffectedDate).HasColumnType("datetime");

                entity.Property(e => e.Designation1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Designation2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Designation3)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Designation4)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DialerId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DialerID");

                entity.Property(e => e.Dob)
                    .HasColumnType("datetime")
                    .HasColumnName("DOB");

                entity.Property(e => e.Doc)
                    .HasColumnType("datetime")
                    .HasColumnName("DOC");

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.DolPrev)
                    .HasColumnType("datetime")
                    .HasColumnName("DOL_Prev");

                entity.Property(e => e.Dot)
                    .HasColumnType("datetime")
                    .HasColumnName("DOT");

                entity.Property(e => e.EffectiveDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Effective_Date");

                entity.Property(e => e.EffortLastDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Effort_Last_Date");

                entity.Property(e => e.EmailId0nr1r).HasColumnName("EmailID_0NR_1R");

                entity.Property(e => e.EmailId1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Email_ID");

                entity.Property(e => e.Emailid)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.EmergencyContact)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.EmergencyContactName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpCodeLm)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EmpCodeLM");

                entity.Property(e => e.EmpLevel)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.EmployeeType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Employee_Type");

                entity.Property(e => e.EmploymentStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Employment_Status");

                entity.Property(e => e.EsicApplicability)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ESIC_applicability");

                entity.Property(e => e.Esicno)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ESICNo");

                entity.Property(e => e.Esicstatus)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ESICStatus");

                entity.Property(e => e.ExitStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Exit_Status");

                entity.Property(e => e.FacebookId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FacebookID");

                entity.Property(e => e.FathersName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.FirstName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Fnfdone)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FNFDONE");

                entity.Property(e => e.FtPt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FT_PT");

                entity.Property(e => e.Gboard)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GBoard");

                entity.Property(e => e.Gender)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Gper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("GPer");

                entity.Property(e => e.Grade)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.GrossSalPli)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("Gross_Sal_PLI");

                entity.Property(e => e.GroupName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Gstream)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GStream");

                entity.Property(e => e.Gyear)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("GYear");

                entity.Property(e => e.Handicap)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("handicap");

                entity.Property(e => e.Handicapnature)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("handicapnature");

                entity.Property(e => e.Handicapper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("handicapper");

                entity.Property(e => e.HrBucket).HasColumnName("HR_Bucket");

                entity.Property(e => e.HrLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HR_Location");

                entity.Property(e => e.Hsboard)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("HSBoard");

                entity.Property(e => e.Hsper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HSPer");

                entity.Property(e => e.HssStream)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Hssboard)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("HSSBoard");

                entity.Property(e => e.Hssper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HSSPer");

                entity.Property(e => e.Hsstream)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("HSStream");

                entity.Property(e => e.Hssyear)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HSSYear");

                entity.Property(e => e.Hsyear)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HSYear");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Identificationmark)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("identificationmark");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCode");

                entity.Property(e => e.InactiveAdnFnf).HasColumnName("Inactive_Adn_FNF");

                entity.Property(e => e.InstagramId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("InstagramID");

                entity.Property(e => e.Interviewed)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.IntrvFlag).HasColumnName("Intrv_Flag");

                entity.Property(e => e.IsPoshtestDone).HasColumnName("IsPOSHTestDone");

                entity.Property(e => e.Ismailconfirmed)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ismailconfirmed");

                entity.Property(e => e.JoiningDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Languages)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("languages");

                entity.Property(e => e.LastCtcDrawn).HasColumnName("Last_CTC_Drawn");

                entity.Property(e => e.LastCtcpa)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LastCTCPA");

                entity.Property(e => e.LastName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.LastWorkingDate).HasColumnType("datetime");

                entity.Property(e => e.Levels)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LinkedInId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LinkedInID");

                entity.Property(e => e.LogFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MaritalStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.MedicalHistory)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.MiddleName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.MothersMaidenName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.NameoOfAadhar)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Nameofchildren)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.Nationality)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("nationality");

                entity.Property(e => e.NoticePeriod)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NoticePeriodStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NoticePeriod_status");

                entity.Property(e => e.OfferLetterDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OfferLetter_Date");

                entity.Property(e => e.OphandOverBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("OPHandOverBy");

                entity.Property(e => e.OphandOverDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OPHandOverDate");

                entity.Property(e => e.OpoEmailId)
                    .HasMaxLength(550)
                    .IsUnicode(false)
                    .HasColumnName("OPO_EmailID");

                entity.Property(e => e.OpoJoiningDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OPO_Joining_Date");

                entity.Property(e => e.OtherQua)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PaidLeave).HasColumnName("Paid_Leave");

                entity.Property(e => e.PanCardNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PAN_Card_No");

                entity.Property(e => e.Passportno)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("passportno");

                entity.Property(e => e.Password)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PensionMember)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("Pension_Member")
                    .IsFixedLength();

                entity.Property(e => e.PermanentArea)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentCity)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentHouseNo)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("PermanentHouse_No");

                entity.Property(e => e.PermanentLandmark)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentMobile)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentPhone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentState)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentStreet)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.PfApplicability)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PF_applicability");

                entity.Property(e => e.PfMember)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PF_Member")
                    .IsFixedLength();

                entity.Property(e => e.PfNo1)
                    .HasMaxLength(50)
                    .HasColumnName("PF_No");

                entity.Property(e => e.PfWithdrawStatus)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PF_Withdraw_Status")
                    .IsFixedLength();

                entity.Property(e => e.Pfno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PFNo");

                entity.Property(e => e.Pfstatus)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("PFStatus");

                entity.Property(e => e.Pgboard)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PGBoard");

                entity.Property(e => e.Pgper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PGPer");

                entity.Property(e => e.Pgyear)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PGYear");

                entity.Property(e => e.Photo)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Placeofbirth)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("placeofbirth");

                entity.Property(e => e.PmapsScore).HasColumnName("PMaps_Score");

                entity.Property(e => e.Prefix)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PreviousEmpcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Previous_EMPCODE");

                entity.Property(e => e.PreviousSubDept)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Previous_SubDept");

                entity.Property(e => e.Pstream)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PStream");

                entity.Property(e => e.RefCheckedName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Checked_Name");

                entity.Property(e => e.RefCheckedNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Checked_No");

                entity.Property(e => e.RefDepartment)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Department");

                entity.Property(e => e.RefDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Designation");

                entity.Property(e => e.RefEmpcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_EMPCode");

                entity.Property(e => e.RefFamilyRelationInEbl)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Family_Relation_In_EBL");

                entity.Property(e => e.RefSubDepartment)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Sub_Department");

                entity.Property(e => e.RejoiningDate)
                    .HasColumnType("datetime")
                    .HasColumnName("rejoining_date");

                entity.Property(e => e.Religion)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("religion");

                entity.Property(e => e.Remark).IsUnicode(false);

                entity.Property(e => e.ResignationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Resignation_Date");

                entity.Property(e => e.RevisedCtc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Revised_CTC");

                entity.Property(e => e.RevisedDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SparkId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Spark_ID");

                entity.Property(e => e.SparkId0nr1r).HasColumnName("SparkID_0NR_1R");

                entity.Property(e => e.SpouseName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.StatusId).HasColumnName("Status_ID");

                entity.Property(e => e.SubDept)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Subdepartment1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("subdepartment1");

                entity.Property(e => e.TemporaryEmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Temporary_EmpCode");

                entity.Property(e => e.Tenure)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TransferDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Transfer_Date");

                entity.Property(e => e.TrnfTpoToOpo).HasColumnName("Trnf_TPO_to_OPO");

                entity.Property(e => e.TrngBatchId)
                    .HasMaxLength(50)
                    .HasColumnName("Trng_BatchID");

                entity.Property(e => e.TrngStatus)
                    .HasMaxLength(50)
                    .HasColumnName("trng_status");

                entity.Property(e => e.TrngSubStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Trng_Sub_Status");

                entity.Property(e => e.Uanno).HasColumnName("UANNO");

                entity.Property(e => e.UserId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UserID");

                entity.Property(e => e.VaccinationStatus)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Vaccination_Status");

                entity.Property(e => e.VerifiedId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Verified_ID");

                entity.Property(e => e.VersantScore).HasColumnName("Versant_Score");

                entity.Property(e => e.WfoWfh)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WFO_WFH");

                entity.Property(e => e.WindowId)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WindowsId0nr1r).HasColumnName("WindowsID_0NR_1R");

                entity.Property(e => e.WorkingExperience)
                    .HasMaxLength(500)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<EmpmasterLogsBackup>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Empmaster_Logs_backup");

                entity.Property(e => e.AccNo)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.AccessRole)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccessType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Access_Type");

                entity.Property(e => e.ActivatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Activated_By");

                entity.Property(e => e.AdharCardNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Adhar_Card_No");

                entity.Property(e => e.Am)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("AM");

                entity.Property(e => e.AnnivDate).HasColumnType("datetime");

                entity.Property(e => e.Bank)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.BlackListed).HasColumnName("Black_Listed");

                entity.Property(e => e.BloodGroup)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Branch)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.CardNo).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Company1)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Company2)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Company3)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Company4)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.ConfirmationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("confirmation_date");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.CurrentArea)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentCity)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentDesignation)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentHouseNo)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("CurrentHouse_No");

                entity.Property(e => e.CurrentLandmark)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentLocation)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentMobile)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentPhone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentState)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentStreet)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Department)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.DesigEffectedDate).HasColumnType("datetime");

                entity.Property(e => e.Designation1)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Designation2)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Designation3)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Designation4)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.DialerId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DialerID");

                entity.Property(e => e.Dob)
                    .HasColumnType("datetime")
                    .HasColumnName("DOB");

                entity.Property(e => e.Doc)
                    .HasColumnType("datetime")
                    .HasColumnName("DOC");

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.Dot)
                    .HasColumnType("datetime")
                    .HasColumnName("DOT");

                entity.Property(e => e.EffortLastDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Effort_Last_Date");

                entity.Property(e => e.EmailId0nr1r).HasColumnName("EmailID_0NR_1R");

                entity.Property(e => e.EmailId1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Email_ID");

                entity.Property(e => e.Emailid)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.EmergencyContact)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.EmergencyContactName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpCodeLm)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("EmpCodeLM");

                entity.Property(e => e.EmployeeType).HasColumnName("Employee_Type");

                entity.Property(e => e.ExitStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Exit_Status");

                entity.Property(e => e.FathersName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.FinalStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Final_Status");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.Fnfdone)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FNFDONE");

                entity.Property(e => e.Gboard)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("GBoard");

                entity.Property(e => e.Gender)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Gper)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("GPer");

                entity.Property(e => e.Grade)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.GroupName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Gstream)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("GStream");

                entity.Property(e => e.Gyear)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("GYear");

                entity.Property(e => e.Handicap)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("handicap");

                entity.Property(e => e.Handicapnature)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("handicapnature");

                entity.Property(e => e.Handicapper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("handicapper");

                entity.Property(e => e.HrLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HR_Location");

                entity.Property(e => e.Hrupdate)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("HRupdate");

                entity.Property(e => e.Hsboard)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("HSBoard");

                entity.Property(e => e.Hsper)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("HSPer");

                entity.Property(e => e.HssStream)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Hssboard)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("HSSBoard");

                entity.Property(e => e.Hssper)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("HSSPer");

                entity.Property(e => e.Hsstream)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("HSStream");

                entity.Property(e => e.Hssyear)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("HSSYear");

                entity.Property(e => e.Hsyear)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("HSYear");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Identificationmark)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("identificationmark");

                entity.Property(e => e.IntrvFlag).HasColumnName("Intrv_Flag");

                entity.Property(e => e.Itupdate)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ITupdate");

                entity.Property(e => e.JoiningDesignation)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Languages)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("languages");

                entity.Property(e => e.LastCtcDrawn).HasColumnName("Last_CTC_Drawn");

                entity.Property(e => e.LastCtcpa)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("LastCTCPA");

                entity.Property(e => e.LastName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.LastWorkingMonth)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Last_Working_Month");

                entity.Property(e => e.LogFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MaritalStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.MedicalHistory)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.MiddleName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.MothersMaidenName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.Nameofchildren)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.Nationality)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("nationality");

                entity.Property(e => e.NoticePeriod)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.NoticePeriodStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NoticePeriod_status");

                entity.Property(e => e.OfferLetterDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OfferLetter_Date");

                entity.Property(e => e.Om)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("OM");

                entity.Property(e => e.OpoEmailId)
                    .HasMaxLength(550)
                    .IsUnicode(false)
                    .HasColumnName("OPO_EmailID");

                entity.Property(e => e.OpoJoiningDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OPO_Joining_Date");

                entity.Property(e => e.OtherQua)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.PaidLeave).HasColumnName("Paid_Leave");

                entity.Property(e => e.PanCardNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PAN_Card_No");

                entity.Property(e => e.Passportno)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("passportno");

                entity.Property(e => e.Password)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentArea)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentCity)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentHouseNo)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("PermanentHouse_No");

                entity.Property(e => e.PermanentLandmark)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentMobile)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentPhone)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentState)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentStreet)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Pgboard)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("PGBoard");

                entity.Property(e => e.Pgper)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("PGPer");

                entity.Property(e => e.Pgyear)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("PGYear");

                entity.Property(e => e.Photo)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Placeofbirth)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("placeofbirth");

                entity.Property(e => e.Prefix)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PreviousEmpcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Previous_EMPCODE");

                entity.Property(e => e.Pstream)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("PStream");

                entity.Property(e => e.ReasonForLeaving)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("Reason_For_Leaving");

                entity.Property(e => e.RefCheckedName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Checked_Name");

                entity.Property(e => e.RefCheckedNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Checked_No");

                entity.Property(e => e.RefDepartment)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Department");

                entity.Property(e => e.RefDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Designation");

                entity.Property(e => e.RefEmpcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_EMPCode");

                entity.Property(e => e.RefFamilyRelationInEbl)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Family_Relation_In_EBL");

                entity.Property(e => e.RefSubDepartment)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Sub_Department");

                entity.Property(e => e.RejoiningDate)
                    .HasColumnType("datetime")
                    .HasColumnName("rejoining_date");

                entity.Property(e => e.Religion)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("religion");

                entity.Property(e => e.ResignationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Resignation_Date");

                entity.Property(e => e.SparkId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Spark_ID");

                entity.Property(e => e.SparkId0nr1r).HasColumnName("SparkID_0NR_1R");

                entity.Property(e => e.SpouseName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.Status)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.StatusId).HasColumnName("Status_ID");

                entity.Property(e => e.SubDept)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Tenure)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Tm)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("TM");

                entity.Property(e => e.TotalWorkingExperience)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Total_working_Experience");

                entity.Property(e => e.UserId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UserID");

                entity.Property(e => e.VerifiedId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Verified_ID");

                entity.Property(e => e.WindowId)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WindowsId0nr1r).HasColumnName("WindowsID_0NR_1R");

                entity.Property(e => e.WorkingExperience)
                    .HasMaxLength(5000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<EmpmasterOldFormat>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Empmaster_OldFormat");

                entity.Property(e => e.AccessType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Access_Type");

                entity.Property(e => e.ActivatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Activated_By");

                entity.Property(e => e.AnnivDate).HasColumnType("datetime");

                entity.Property(e => e.BlackListed).HasColumnName("Black_Listed");

                entity.Property(e => e.BloodGroup)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CardNo).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.ConfirmationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("confirmation_date");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.CurrentDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Department)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DialerId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DialerID");

                entity.Property(e => e.Dob)
                    .HasColumnType("datetime")
                    .HasColumnName("DOB");

                entity.Property(e => e.Doc)
                    .HasColumnType("datetime")
                    .HasColumnName("DOC");

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.Dot)
                    .HasColumnType("datetime")
                    .HasColumnName("DOT");

                entity.Property(e => e.EmailId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Email_ID");

                entity.Property(e => e.EmailId0nr1r).HasColumnName("EmailID_0NR_1R");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpCodeLm)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EmpCodeLM");

                entity.Property(e => e.EmployeeType).HasColumnName("Employee_Type");

                entity.Property(e => e.ExitStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Exit_Status");

                entity.Property(e => e.FathersName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.FirstName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Fnfdone)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FNFDONE");

                entity.Property(e => e.Gboard)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GBoard");

                entity.Property(e => e.Gender)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Gper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("GPer");

                entity.Property(e => e.Grade)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.GroupName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Gstream)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GStream");

                entity.Property(e => e.Gyear)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("GYear");

                entity.Property(e => e.Handicap)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("handicap");

                entity.Property(e => e.Handicapnature)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("handicapnature");

                entity.Property(e => e.Handicapper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("handicapper");

                entity.Property(e => e.HrLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HR_Location");

                entity.Property(e => e.Hsboard)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("HSBoard");

                entity.Property(e => e.Hsper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HSPer");

                entity.Property(e => e.HssStream)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Hssboard)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("HSSBoard");

                entity.Property(e => e.Hssper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HSSPer");

                entity.Property(e => e.Hsstream)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("HSStream");

                entity.Property(e => e.Hssyear)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HSSYear");

                entity.Property(e => e.Hsyear)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HSYear");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID");

                entity.Property(e => e.Identificationmark)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("identificationmark");

                entity.Property(e => e.InactiveAdnFnf).HasColumnName("Inactive_Adn_FNF");

                entity.Property(e => e.IntrvFlag).HasColumnName("Intrv_Flag");

                entity.Property(e => e.JoiningDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Languages)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("languages");

                entity.Property(e => e.LastCtcDrawn).HasColumnName("Last_CTC_Drawn");

                entity.Property(e => e.LastCtcpa)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LastCTCPA");

                entity.Property(e => e.LastName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.LastWorkingDate).HasColumnType("datetime");

                entity.Property(e => e.LogFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MaritalStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.MedicalHistory)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.MiddleName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.MothersMaidenName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.Nameofchildren)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.Nationality)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("nationality");

                entity.Property(e => e.NoticePeriod)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OfferLetterDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OfferLetter_Date");

                entity.Property(e => e.OpoEmailId)
                    .HasMaxLength(550)
                    .IsUnicode(false)
                    .HasColumnName("OPO_EmailID");

                entity.Property(e => e.OpoJoiningDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OPO_Joining_Date");

                entity.Property(e => e.OtherQua)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PaidLeave).HasColumnName("Paid_Leave");

                entity.Property(e => e.Pgboard)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PGBoard");

                entity.Property(e => e.Pgper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PGPer");

                entity.Property(e => e.Pgyear)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PGYear");

                entity.Property(e => e.Photo)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Placeofbirth)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("placeofbirth");

                entity.Property(e => e.Prefix)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PreviousSubDept)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Previous_SubDept");

                entity.Property(e => e.Pstream)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PStream");

                entity.Property(e => e.RejoiningDate)
                    .HasColumnType("datetime")
                    .HasColumnName("rejoining_date");

                entity.Property(e => e.Religion)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("religion");

                entity.Property(e => e.ResignationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Resignation_Date");

                entity.Property(e => e.SpouseName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.StatusId).HasColumnName("Status_ID");

                entity.Property(e => e.SubDept)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Subdepartment1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("subdepartment1");

                entity.Property(e => e.Tenure)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TransferDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Transfer_Date");

                entity.Property(e => e.UserId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UserID");

                entity.Property(e => e.VerifiedId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Verified_ID");

                entity.Property(e => e.WindowId)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WindowsId0nr1r).HasColumnName("WindowsID_0NR_1R");

                entity.Property(e => e.WorkingExperience)
                    .HasMaxLength(500)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<EmpmasterResignationUpdateLog>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Empmaster_ResignationUpdate_Log");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LoginD)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ResignationDate)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Type)
                    .HasMaxLength(500)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Empuploadetail>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AttDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Att_date");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InTime).HasColumnName("In_time");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OutTime).HasColumnName("out_time");
            });

            modelBuilder.Entity<EssAdminDesk>(entity =>
            {
                entity.ToTable("ESS_AdminDesk");

                entity.Property(e => e.EssAdminDeskId).HasColumnName("ESS_AdminDesk_ID");

                entity.Property(e => e.EssCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ESS_Code");

                entity.Property(e => e.EssDepartment)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ESS_Department");

                entity.Property(e => e.EssDescription)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ESS_Description");

                entity.Property(e => e.EssLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ESS_Location");

                entity.Property(e => e.EssName)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("ESS_Name");

                entity.Property(e => e.EssRequestDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ESS_Request_Date")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<EssAttendanceRequest>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESS_Attendance_Request");

                entity.Property(e => e.ApprovedEmpcodelm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Approved_Empcodelm");

                entity.Property(e => e.AttComments)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("Att_Comments");

                entity.Property(e => e.AttDate)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Att_Date");

                entity.Property(e => e.AttStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Att_Status");

                entity.Property(e => e.Comment)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Empcodelm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EMPCodelm");

                entity.Property(e => e.ExistingStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Existing_Status");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.RequestStatus).HasColumnName("Request_Status");

                entity.Property(e => e.SupervisorComments)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("Supervisor_Comments");
            });

            modelBuilder.Entity<EssEmpFeedback>(entity =>
            {
                entity.HasKey(e => e.EssEmpFbId);

                entity.ToTable("ESS_EMP_Feedback");

                entity.Property(e => e.EssEmpFbId).HasColumnName("ESS_EMP_FB_ID");

                entity.Property(e => e.EssEmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ESS_EMP_Code");

                entity.Property(e => e.EssEmpDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ESS_EMP_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.EssEmpDesignation)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ESS_EMP_Designation");

                entity.Property(e => e.EssEmpEmail)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ESS_EMP_EMAIL");

                entity.Property(e => e.EssEmpLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ESS_EMP_Location");

                entity.Property(e => e.EssEmpMessage)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ESS_EMP_Message");

                entity.Property(e => e.EssEmpName)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("ESS_EMP_Name");
            });

            modelBuilder.Entity<EssEmpFlagMaster>(entity =>
            {
                entity.HasKey(e => e.EssEmpFlagId);

                entity.ToTable("ESS_EMP_Flag_Master");

                entity.Property(e => e.EssEmpFlagId)
                    .ValueGeneratedNever()
                    .HasColumnName("ESS_Emp_Flag_Id");

                entity.Property(e => e.EssEmpDescription)
                    .HasMaxLength(10)
                    .HasColumnName("ESS_Emp_Description")
                    .IsFixedLength();

                entity.Property(e => e.EssEmpFlag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESS_Emp_Flag")
                    .HasDefaultValueSql("('F')");
            });

            modelBuilder.Entity<EssEmpOpening>(entity =>
            {
                entity.ToTable("ESS_EMP_Opening");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Experience)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.JobCategory)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Job_Category");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.OpeningSection)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Opening_Section");

                entity.Property(e => e.Profile).IsUnicode(false);

                entity.Property(e => e.Qualification)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Title)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UploadBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Upload_By");

                entity.Property(e => e.UploadDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Upload_Date")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<EssEmpOpeningCategory>(entity =>
            {
                entity.HasKey(e => e.EssEmpOpeningCatId);

                entity.ToTable("ESS_EMP_Opening_Category");

                entity.Property(e => e.EssEmpOpeningCatId).HasColumnName("ESS_EMP_Opening_CatID");

                entity.Property(e => e.EssEmpOpeningCategory1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ESS_EMP_Opening_Category");
            });

            modelBuilder.Entity<EssHraccess>(entity =>
            {
                entity.ToTable("ESS_HRAccess");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Designation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Type)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<EssLmFlagMaster>(entity =>
            {
                entity.HasKey(e => e.EssLmFlagId);

                entity.ToTable("ESS_LM_Flag_Master");

                entity.Property(e => e.EssLmFlagId)
                    .ValueGeneratedNever()
                    .HasColumnName("ESS_LM_Flag_Id");

                entity.Property(e => e.EssLmFlag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESS_LM_Flag")
                    .HasDefaultValueSql("('F')");

                entity.Property(e => e.EssLmFlagDescription)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("ESS_LM_FlagDescription");
            });

            modelBuilder.Entity<EssNewJoinee>(entity =>
            {
                entity.ToTable("ESS_NewJoinee");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Companies)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Designation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmailId)
                    .HasMaxLength(50)
                    .HasColumnName("EmailID");

                entity.Property(e => e.EmpName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Experience)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Gender)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.Pics)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.SittingAt)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SittingAT");
            });

            modelBuilder.Entity<EssReasonMaster>(entity =>
            {
                entity.HasKey(e => e.EssReasonId)
                    .HasName("PK_ESS_Reason_Master1");

                entity.ToTable("ESS_Reason_Master");

                entity.Property(e => e.EssReasonId).HasColumnName("ESS_Reason_Id");

                entity.Property(e => e.EssReason)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("ESS_Reason");
            });

            modelBuilder.Entity<EssReferFrnd>(entity =>
            {
                entity.ToTable("ESS_Refer_Frnd");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ContactNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Contact_No");

                entity.Property(e => e.Experience)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Qualification)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RequestBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RequestDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Request_Date")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<EssResignationTran>(entity =>
            {
                entity.HasKey(e => e.EssResignationTransId);

                entity.ToTable("ESS_Resignation_Trans");

                entity.Property(e => e.EssResignationTransId)
                    .ValueGeneratedNever()
                    .HasColumnName("ESS_Resignation_Trans_Id");

                entity.Property(e => e.EssResignationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ESS_Resignation_Date");

                entity.Property(e => e.EssResignationEmpFlagId).HasColumnName("ESS_Resignation_Emp_Flag_Id");

                entity.Property(e => e.EssResignationEmpId).HasColumnName("ESS_Resignation_Emp_Id");

                entity.Property(e => e.EssResignationEmpRemarks)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("ESS_Resignation_Emp_Remarks");

                entity.Property(e => e.EssResignationHrFlagId).HasColumnName("ESS_Resignation_HR_Flag_Id");

                entity.Property(e => e.EssResignationHrId).HasColumnName("ESS_Resignation_HR_Id");

                entity.Property(e => e.EssResignationLastDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ESS_Resignation_Last_Date");

                entity.Property(e => e.EssResignationLmFlagId).HasColumnName("ESS_Resignation_LM_Flag_Id");

                entity.Property(e => e.EssResignationLmId).HasColumnName("ESS_Resignation_LM_Id");

                entity.Property(e => e.EssResignationLwdDate).HasColumnName("ESS_Resignation_LWD_Date");

                entity.Property(e => e.EssResignationLwdRemarks)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("ESS_Resignation_LWD_Remarks");

                entity.Property(e => e.EssResignationReasonId).HasColumnName("ESS_Resignation_Reason_Id");
            });

            modelBuilder.Entity<EssShiftTime>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESS_ShiftTime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.LocationId).HasColumnName("Location_ID");

                entity.Property(e => e.Shift)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ShiftInTime)
                    .HasColumnType("datetime")
                    .HasColumnName("Shift_In_Time");

                entity.Property(e => e.ShiftOutTime)
                    .HasColumnType("datetime")
                    .HasColumnName("Shift_Out_Time");
            });

            modelBuilder.Entity<EssShiftstatus>(entity =>
            {
                entity.ToTable("ESS_Shiftstatus");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ShiftDesc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Shift_desc");

                entity.Property(e => e.ShiftStatus)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("Shift_Status");
            });

            modelBuilder.Entity<EssSuggestion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESS_Suggestion");

                entity.Property(e => e.Designation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpName)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SuggestedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Suggested_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Suggestion)
                    .HasMaxLength(500)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<EssToDoList>(entity =>
            {
                entity.ToTable("ESS_ToDoList");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Description).IsUnicode(false);

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<EssTransferEmpLog>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESS_Transfer_EMP_Log");

                entity.Property(e => e.AcceptedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("Accepted_Time");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(50)
                    .HasColumnName("EMPCODE");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PreviousSubDept)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Previous_SubDept");

                entity.Property(e => e.StatusAd)
                    .HasMaxLength(50)
                    .HasColumnName("Status_AD");

                entity.Property(e => e.SubDept)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TransferedBy)
                    .HasMaxLength(50)
                    .HasColumnName("Transfered_by");

                entity.Property(e => e.TransferedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("Transfered_Time");

                entity.Property(e => e.TransferedTo)
                    .HasMaxLength(50)
                    .HasColumnName("Transfered_To");
            });

            modelBuilder.Entity<ExperienceDetail>(entity =>
            {
                entity.Property(e => e.CompanyName).HasMaxLength(150);

                entity.Property(e => e.Ctc)
                    .HasMaxLength(150)
                    .HasColumnName("CTC");

                entity.Property(e => e.Designation).HasMaxLength(150);

                entity.Property(e => e.FromDate).HasColumnType("date");

                entity.Property(e => e.MobileNo).HasMaxLength(50);

                entity.Property(e => e.Process).HasMaxLength(150);

                entity.Property(e => e.RecDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ToDate).HasColumnType("date");

                entity.Property(e => e.TotalExperience).HasMaxLength(150);
            });

            modelBuilder.Entity<FeMaster>(entity =>
            {
                entity.ToTable("FE_Master");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.FeName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FE_Name");
            });

            modelBuilder.Entity<FingerPrintDataFace>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("FingerPrintData_Face");

                entity.Property(e => e.EmpId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EmpID");

                entity.Property(e => e.Firbinary)
                    .IsUnicode(false)
                    .HasColumnName("FIRBinary");

                entity.Property(e => e.Firtext)
                    .IsUnicode(false)
                    .HasColumnName("FIRText");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.MasterId).HasColumnName("MasterID");

                entity.Property(e => e.RegPassword)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RegType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RegistrationBy)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RegistrationMachine)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RegistrationTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<FingerPrintDataLog>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("FingerPrintData_LOGS");

                entity.Property(e => e.EmpId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EmpID");

                entity.Property(e => e.Firbinary)
                    .IsUnicode(false)
                    .HasColumnName("FIRBinary");

                entity.Property(e => e.Firtext)
                    .IsUnicode(false)
                    .HasColumnName("FIRText");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.MasterId).HasColumnName("MasterID");

                entity.Property(e => e.RegPassword)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RegType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RegistrationBy)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RegistrationMachine)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RegistrationTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<FingerPrintDataMissingempcode>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("FingerPrintData_Missingempcode");

                entity.Property(e => e.Activeemp).HasColumnName("activeemp");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpCodeLm)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EmpCodeLM");

                entity.Property(e => e.EmpId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EmpID");

                entity.Property(e => e.Firbinary)
                    .IsUnicode(false)
                    .HasColumnName("FIRBinary");

                entity.Property(e => e.Firtext)
                    .IsUnicode(false)
                    .HasColumnName("FIRText");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.MasterId).HasColumnName("MasterID");

                entity.Property(e => e.RegPassword)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RegType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RegistrationBy)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RegistrationMachine)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RegistrationTime).HasColumnType("datetime");

                entity.Property(e => e.TemporaryEmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Temporary_EmpCode");
            });

            modelBuilder.Entity<FingerPrintDatum>(entity =>
            {
                entity.HasNoKey();

                entity.HasIndex(e => e.EmpId, "IDx_EMPID");

                entity.Property(e => e.EmpId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EmpID");

                entity.Property(e => e.Firbinary)
                    .IsUnicode(false)
                    .HasColumnName("FIRBinary");

                entity.Property(e => e.Firtext)
                    .IsUnicode(false)
                    .HasColumnName("FIRText");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.MasterId).HasColumnName("MasterID");

                entity.Property(e => e.RegPassword)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RegType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RegistrationBy)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RegistrationMachine)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RegistrationTime)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<FlagDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Flag_Details");

                entity.Property(e => e.AccessName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Access_Name");

                entity.Property(e => e.FlagV)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<FormMaster>(entity =>
            {
                entity.HasKey(e => e.FormId);

                entity.ToTable("Form_Master");

                entity.Property(e => e.FormId).HasColumnName("Form_ID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FormName)
                    .HasMaxLength(500)
                    .HasColumnName("Form_Name");

                entity.Property(e => e.Name).HasMaxLength(500);
            });

            modelBuilder.Entity<Fyear>(entity =>
            {
                entity.ToTable("FYear");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Year)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Hdl>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("HDL");

                entity.Property(e => e.Date).HasColumnType("datetime");

                entity.Property(e => e.Holiday).HasMaxLength(255);

                entity.Property(e => e.Location).HasMaxLength(255);
            });

            modelBuilder.Entity<HolidayList>(entity =>
            {
                entity.HasKey(e => e.Sr);

                entity.ToTable("HolidayList");

                entity.Property(e => e.Date).HasColumnType("datetime");

                entity.Property(e => e.Holiday).HasMaxLength(255);

                entity.Property(e => e.Location).HasMaxLength(255);
            });

            modelBuilder.Entity<HolidayList20231215>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("HolidayList20231215");

                entity.Property(e => e.Date).HasColumnType("datetime");

                entity.Property(e => e.Holiday).HasMaxLength(255);

                entity.Property(e => e.Location).HasMaxLength(255);

                entity.Property(e => e.Sr).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<HolidayTblNew>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("holidayTblNew");

                entity.Property(e => e.Date).HasColumnType("datetime");

                entity.Property(e => e.Holiday).HasMaxLength(255);

                entity.Property(e => e.Location).HasMaxLength(255);

                entity.Property(e => e.Sr).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<HoroscopeMaster>(entity =>
            {
                entity.ToTable("Horoscope_Master");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Paquarius)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("paquarius");

                entity.Property(e => e.Paries)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("paries");

                entity.Property(e => e.Pcancer)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("pcancer");

                entity.Property(e => e.Pcapricorn)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("pcapricorn");

                entity.Property(e => e.Pgemini)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("pgemini");

                entity.Property(e => e.Pleo)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("pleo");

                entity.Property(e => e.Plibra)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("plibra");

                entity.Property(e => e.Ppisces)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("ppisces");

                entity.Property(e => e.Psagittarius)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("psagittarius");

                entity.Property(e => e.Pscorpio)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("pscorpio");

                entity.Property(e => e.Ptaurus)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("ptaurus");

                entity.Property(e => e.Pvirgo)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("pvirgo");
            });

            modelBuilder.Entity<HrAppraisal>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("HR_Appraisal");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("empcode");
            });

            modelBuilder.Entity<HrApproval>(entity =>
            {
                entity.ToTable("HR_Approval");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<HrDepartmentLogInAccess>(entity =>
            {
                entity.ToTable("HrDepartmentLogInAccess");

                entity.Property(e => e.CurrentDesignation).HasMaxLength(50);

                entity.Property(e => e.CurrentMobile).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.EmpCode).HasMaxLength(100);

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.RecDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<HrProcessQa>(entity =>
            {
                entity.ToTable("HR_Process_QA");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Designation).HasMaxLength(250);
            });

            modelBuilder.Entity<HrProcessResult>(entity =>
            {
                entity.ToTable("HR_Process_Result");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.MobileNo).HasMaxLength(50);

                entity.Property(e => e.RecDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Round1).HasMaxLength(50);

                entity.Property(e => e.Round2).HasMaxLength(50);
            });

            modelBuilder.Entity<HrProcessResultDeleted>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("HR_Process_Result_DELETED");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.MobileNo).HasMaxLength(50);

                entity.Property(e => e.Process).HasMaxLength(150);

                entity.Property(e => e.RecDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Round1).HasMaxLength(50);

                entity.Property(e => e.Round2).HasMaxLength(50);
            });

            modelBuilder.Entity<HrRecruitmentDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("HR_RECRUITMENT_DETAILS");

                entity.Property(e => e.Batchid)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EmpFinalStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EMP_FinalStatus");

                entity.Property(e => e.EmpStatus).HasColumnName("EMP_STATUS");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("EMPCODE");

                entity.Property(e => e.FirstDayRagStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FirstDay_RAG_Status");

                entity.Property(e => e.HoldReason)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Hold_Reason");

                entity.Property(e => e.HrHandOverDate)
                    .HasColumnType("datetime")
                    .HasColumnName("HR_handOverDate");

                entity.Property(e => e.HrManager)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("HR_Manager");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IsHrhandOver).HasColumnName("IS_HRHandOver");

                entity.Property(e => e.IsTransfertotrainer)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Is_Transfertotrainer");

                entity.Property(e => e.LastDayRagStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LastDay_RAG_Status");

                entity.Property(e => e.OpsManager)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OPS_Manager");

                entity.Property(e => e.RagReason)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("RAG_Reason");

                entity.Property(e => e.RejectReason)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Reject_Reason");

                entity.Property(e => e.RejectedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Rejected_Date");

                entity.Property(e => e.RequestId)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TlOpoid)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TL_OPOID");

                entity.Property(e => e.TmAcceptedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("TM_AcceptedDate");

                entity.Property(e => e.TrainerEmpStatus).HasColumnName("TrainerEmp_Status");

                entity.Property(e => e.TrainerManager)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Trainer_Manager");

                entity.Property(e => e.TrainerOpoid)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Trainer_OPOID");
            });

            modelBuilder.Entity<HrRecruitmentDetailsLog>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("HR_RECRUITMENT_DETAILS_LOGS");

                entity.Property(e => e.Batchid)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EmpStatus).HasColumnName("EMP_STATUS");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("EMPCODE");

                entity.Property(e => e.HrHandOverDate)
                    .HasColumnType("datetime")
                    .HasColumnName("HR_handOverDate");

                entity.Property(e => e.HrManager)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("HR_Manager");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Insert_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IsHrhandOver).HasColumnName("IS_HRHandOver");

                entity.Property(e => e.RejectedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Rejected_Date");

                entity.Property(e => e.RequestId)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TmAcceptedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("TM_AcceptedDate");

                entity.Property(e => e.TrainerEmpStatus).HasColumnName("TrainerEmp_Status");

                entity.Property(e => e.TrainerManager)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Trainer_Manager");
            });

            modelBuilder.Entity<HrRecruitmentDetailsLogsChange>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("HR_RECRUITMENT_DETAILS_LOGS_Change");

                entity.Property(e => e.Batchid)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EmpStatus).HasColumnName("EMP_STATUS");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("EMPCODE");

                entity.Property(e => e.HrHandOverDate)
                    .HasColumnType("datetime")
                    .HasColumnName("HR_handOverDate");

                entity.Property(e => e.HrManager)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("HR_Manager");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Insert_date");

                entity.Property(e => e.IsHrhandOver).HasColumnName("IS_HRHandOver");

                entity.Property(e => e.RequestId)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TrainerEmpStatus).HasColumnName("TrainerEmp_Status");

                entity.Property(e => e.TrainerManager)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Trainer_Manager");
            });

            modelBuilder.Entity<HrRequisition>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("HR_Requisition");

                entity.Property(e => e.BatchCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.BgvRequired)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BGV_Required");

                entity.Property(e => e.Department)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Designation)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FemaleSplit)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Female_split");

                entity.Property(e => e.Graduate).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.GraduatePercentsplit)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Graduate_percentsplit");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IsTrainingpaid)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Is_trainingpaid");

                entity.Property(e => e.JobDecryption)
                    .IsUnicode(false)
                    .HasColumnName("Job_Decryption");

                entity.Property(e => e.Language)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.Location)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.MaleSplit)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Male_split");

                entity.Property(e => e.ManagerOpoid)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Manager_OPOID");

                entity.Property(e => e.NoOfCandidatesRequired).HasColumnName("No_of_Candidates_Required");

                entity.Property(e => e.OnBoardDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OnBoard_Date");

                entity.Property(e => e.Process)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RequestId).ValueGeneratedOnAdd();

                entity.Property(e => e.RequiredSkills)
                    .IsUnicode(false)
                    .HasColumnName("Required_Skills");

                entity.Property(e => e.Status)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.StatusUpdatedOn)
                    .HasColumnType("datetime")
                    .HasColumnName("Status_updated_On");

                entity.Property(e => e.SubDepartment)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Sub_department");

                entity.Property(e => e.TlOpoid)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TL_OPOID");

                entity.Property(e => e.Type)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.UnderGraduate)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Under_Graduate");

                entity.Property(e => e.UnderGraduatePercentsplit)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UnderGraduate_percentsplit");

                entity.Property(e => e.VersantLevel)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Versant_level");

                entity.Property(e => e.VersantRequired)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Versant_Required");
            });

            modelBuilder.Entity<HrRequisitionLanguage>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("HR_Requisition_languages");

                entity.Property(e => e.Count)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.Languages)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.RequestId)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<HrmisFormAccess>(entity =>
            {
                entity.HasKey(e => e.Code);

                entity.ToTable("HRMIS_Form_Access");

                entity.Property(e => e.Code)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("code");

                entity.Property(e => e.AccessNumber).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UserName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<HrmisFormAccess2230526>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("HRMIS_Form_Access_2230526");

                entity.Property(e => e.AccessNumber).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Code)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("code");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.UserName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<HrmisFormAccessActInactFormBkp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("HRMIS_Form_Access_Act_Inact_Form_Bkp");

                entity.Property(e => e.AccessNumber).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Code)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("code");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.UserName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<HrmisLocationAccess>(entity =>
            {
                entity.ToTable("HRMIS_LocationAccess");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.GroupName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.HrLocationId).HasColumnName("HR_LocationID");

                entity.Property(e => e.LocationId)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Status).HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<HrmisLocationAccessBk>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("HRMIS_LocationAccess_bk");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.GroupName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.HrLocationId).HasColumnName("HR_LocationID");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.LocationId)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(500)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<HrmisLocationAccessGgn3NamesReomve>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("HRMIS_LocationAccess_GGN3_names_Reomve");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.GroupName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.HrLocationId).HasColumnName("HR_LocationID");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.LocationId)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(500)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<HrmisStateMaster>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("HRMIS_STATE_MASTER");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.State)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<HrmisStatus>(entity =>
            {
                entity.HasKey(e => e.StatusId);

                entity.ToTable("HRMIS_Status");

                entity.Property(e => e.StatusId).HasColumnName("Status_ID");
            });

            modelBuilder.Entity<HrmisTrainingStatus>(entity =>
            {
                entity.ToTable("HRMIS_Training_Status");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.TrainingStatus)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Training_Status");
            });

            modelBuilder.Entity<HrmisTrainingSubStatus>(entity =>
            {
                entity.ToTable("HRMIS_Training_SubStatus");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.TrainingStatusId).HasColumnName("Training_Status_ID");

                entity.Property(e => e.TrainingSubStatus)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Training_SubStatus");
            });

            modelBuilder.Entity<HrreportUser>(entity =>
            {
                entity.ToTable("HRReportUser");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.EmpName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OldPassword)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Password)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Role)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UserName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<InternalComplaintsCommitteeMaster>(entity =>
            {
                entity.ToTable("InternalComplaintsCommitteeMaster");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(80)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<InterviewAssignedTo>(entity =>
            {
                entity.ToTable("InterviewAssignedTo");

                entity.Property(e => e.AssignedBy).HasMaxLength(100);

                entity.Property(e => e.AssignedTo).HasMaxLength(100);

                entity.Property(e => e.InterviewStatus)
                    .HasMaxLength(50)
                    .HasDefaultValueSql("(N'Not Done')");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.MasterId).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.RecDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Round).HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<InterviewAssignedToDeleted>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("InterviewAssignedTo_DELETED");

                entity.Property(e => e.AssignedBy).HasMaxLength(100);

                entity.Property(e => e.AssignedTo).HasMaxLength(100);

                entity.Property(e => e.InterviewStatus).HasMaxLength(50);

                entity.Property(e => e.MasterId).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Process).HasMaxLength(150);

                entity.Property(e => e.RecDate).HasColumnType("datetime");

                entity.Property(e => e.RejectedReason).IsUnicode(false);
            });

            modelBuilder.Entity<InterviewerDetail>(entity =>
            {
                entity.ToTable("InterviewerDetail");

                entity.Property(e => e.Process).HasMaxLength(150);

                entity.Property(e => e.Round2).HasMaxLength(150);

                entity.Property(e => e.Round3).HasMaxLength(150);

                entity.Property(e => e.Round4).HasMaxLength(150);
            });

            modelBuilder.Entity<InterviewerEmailDetail>(entity =>
            {
                entity.ToTable("InterviewerEmailDetail");

                entity.Property(e => e.EmailId).HasMaxLength(150);

                entity.Property(e => e.EmpCode).HasMaxLength(150);

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<InvCrmDetailsRemove>(entity =>
            {
                entity.ToTable("INV_CRM_Details_Remove");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AddedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CodePath)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CrmLink)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("CRM_Link");

                entity.Property(e => e.DatabaseName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Database_Name");

                entity.Property(e => e.DepartmentId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DepartmentID");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.LocationId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LocationID");

                entity.Property(e => e.ServerName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Server_Name");

                entity.Property(e => e.SubDepartmentName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<InvIssueTrackerRemove>(entity =>
            {
                entity.ToTable("INV_Issue_Tracker_Remove");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AddedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AddedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Added_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IssueType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Issue_Type");

                entity.Property(e => e.MachineName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Machine_Name");

                entity.Property(e => e.Problem)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Process)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Solution).HasColumnType("text");
            });

            modelBuilder.Entity<InvProcessRemove>(entity =>
            {
                entity.ToTable("INV_Process_Remove");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.LocationId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Location_ID");

                entity.Property(e => e.Process)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<InvSubprocessReomve>(entity =>
            {
                entity.ToTable("INV_Subprocess_Reomve");

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ProcessId).HasColumnName("Process_ID");

                entity.Property(e => e.SubProcess)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<IpAddress>(entity =>
            {
                entity.ToTable("IP_Address");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.HostName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Ip)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IP");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");
            });

            modelBuilder.Entity<IpBlr>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("IP_BLR");

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.HostName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ip)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IP");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");
            });

            modelBuilder.Entity<JobMela>(entity =>
            {
                entity.ToTable("JobMela");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AdharNo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Dob)
                    .HasColumnType("datetime")
                    .HasColumnName("DOB");

                entity.Property(e => e.EmailId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EmailID");

                entity.Property(e => e.English)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FirstName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Gender)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.HighestQualification)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Highest_Qualification");

                entity.Property(e => e.Hindi)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.HrExecutive)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HR_Executive");

                entity.Property(e => e.LastName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.Marathi)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MiddleName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MobileNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Mobile_Number");

                entity.Property(e => e.Other1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Other2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OtherLanguage1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Other_Language1");

                entity.Property(e => e.OtherLanguage2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Other_Language2");

                entity.Property(e => e.Otp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("OTP");

                entity.Property(e => e.Reference1Name)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Reference1_Name");

                entity.Property(e => e.Reference1Phone)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Reference1_Phone");

                entity.Property(e => e.Reference2Name)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Reference2_Name");

                entity.Property(e => e.Reference2Phone)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Reference2_Phone");

                entity.Property(e => e.RegistartionNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Registartion_Number");

                entity.Property(e => e.SpecialCourses)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Special_Courses");
            });

            modelBuilder.Entity<JobPosting>(entity =>
            {
                entity.ToTable("Job_Posting");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.EmailId)
                    .HasMaxLength(50)
                    .HasColumnName("EmailID");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LocationId).HasColumnName("LocationID");
            });

            modelBuilder.Entity<JobTitleMaster>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("JobTitleMaster");

                entity.Property(e => e.DepartmentId).HasColumnName("DepartmentID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((0))");

                entity.Property(e => e.JobTitle).HasMaxLength(50);
            });

            modelBuilder.Entity<Language>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.LName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("L_Name");
            });

            modelBuilder.Entity<LanguageStatus>(entity =>
            {
                entity.ToTable("LanguageStatus");

                entity.Property(e => e.Language).HasMaxLength(150);

                entity.Property(e => e.MobileNo).HasMaxLength(50);

                entity.Property(e => e.Read).HasDefaultValueSql("((0))");

                entity.Property(e => e.RecDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Speak).HasDefaultValueSql("((0))");

                entity.Property(e => e.Write).HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<LanguagesMaster>(entity =>
            {
                entity.HasKey(e => e.LanguageId)
                    .HasName("PK__Language__B938558B895450B1");

                entity.ToTable("LanguagesMaster");

                entity.Property(e => e.LanguageId).HasColumnName("LanguageID");

                entity.Property(e => e.LanguageName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<LeaveMaster>(entity =>
            {
                entity.HasKey(e => e.Empcode);

                entity.ToTable("LeaveMaster");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EMPCODE");

                entity.Property(e => e.BalanceLeave)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Balance_Leave");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");
            });

            modelBuilder.Entity<LeaveTracker>(entity =>
            {
                entity.ToTable("LeaveTracker");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AvailedLeaveBalance).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CurrentLeaveBalance).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LeaveUploadDate)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MonthYear)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OldCurrentLeaveBalance).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.TotalLeaveBalance).HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<LeaveTrackerLog>(entity =>
            {
                entity.ToTable("LeaveTracker_Log");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AvailedLeaveBalance).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.CurrentLeaveBalance).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MonthYear)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OldCurrentLeaveBalance).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.TotalLeaveBalance).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Updated_Date");
            });

            modelBuilder.Entity<LeavedetailsRemove>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("leavedetails_Remove");

                entity.Property(e => e.CancelRequest).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FromDate)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Lwp)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("LWP");

                entity.Property(e => e.PaidLeaves).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PendingLeaves).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ReqDate).HasColumnType("datetime");

                entity.Property(e => e.RequestId)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SancBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sancBy");

                entity.Property(e => e.SancDate)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Status)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Todate)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("todate");
            });

            modelBuilder.Entity<Location>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("LOCATIONS");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Location1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Location");

                entity.Property(e => e.Path)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<LocationMaster>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("LocationMaster");

                entity.HasIndex(e => e.LocationId, "IDX_LID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FolderPath)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.LocationId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("LocationID");

                entity.Property(e => e.LocationName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Locationcode)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.NewPath)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("New_Path");

                entity.Property(e => e.Path)
                    .HasMaxLength(500)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<LoginLog>(entity =>
            {
                entity.ToTable("Login_log");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.HostName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LocationId).HasColumnName("Location_ID");

                entity.Property(e => e.Logindate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<MomAnswerMaster>(entity =>
            {
                entity.ToTable("MOM_AnswerMaster");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AnsId).HasColumnName("Ans_ID");

                entity.Property(e => e.AnsName)
                    .HasMaxLength(50)
                    .IsFixedLength();

                entity.Property(e => e.QId).HasColumnName("Q_ID");
            });

            modelBuilder.Entity<MomEmpDataLog>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("MOM_EmpDataLog");

                entity.Property(e => e.AnswerValue)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Day)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.RecDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<MomEmpDatum>(entity =>
            {
                entity.ToTable("MOM_EmpData");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AnswerValue)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Day)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RecDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<MomQuestionMaster>(entity =>
            {
                entity.HasKey(e => e.QId);

                entity.ToTable("MOM_QuestionMaster");

                entity.Property(e => e.QId).HasColumnName("Q_ID");

                entity.Property(e => e.QName)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("Q_Name");
            });

            modelBuilder.Entity<MomQuestionMasterLog>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("MOM_QuestionMasterLog");

                entity.Property(e => e.QId).HasColumnName("Q_ID");

                entity.Property(e => e.QName)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("Q_Name");
            });

            modelBuilder.Entity<NewJoineeLmdetail>(entity =>
            {
                entity.ToTable("NewJoinee_LMDetails");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Empcode).HasMaxLength(50);

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Process)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Notification>(entity =>
            {
                entity.ToTable("Notification");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.Message).IsUnicode(false);

                entity.Property(e => e.Status).HasDefaultValueSql("((1))");

                entity.Property(e => e.Title)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.UploadBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Upload_By");

                entity.Property(e => e.UploadDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Upload_Date")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<OpenCloseDeviation>(entity =>
            {
                entity.ToTable("OpenCloseDeviation");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.DeviationDate).HasColumnType("datetime");

                entity.Property(e => e.LastUpdatedDate).HasColumnType("datetime");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<OpoactiveEmailList>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPOActiveEmailList");

                entity.Property(e => e.Description).HasMaxLength(255);

                entity.Property(e => e.Designation).HasMaxLength(255);

                entity.Property(e => e.EmailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("Email_Address");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Location).HasMaxLength(255);

                entity.Property(e => e.Name).HasMaxLength(255);

                entity.Property(e => e.Opoid)
                    .HasMaxLength(255)
                    .HasColumnName("OPOID");
            });

            modelBuilder.Entity<Otpdetail>(entity =>
            {
                entity.ToTable("OTPDetails");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.EmailOtp)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("EmailOTP");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Otp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("OTP");

                entity.Property(e => e.SentTime).HasColumnType("datetime");

                entity.Property(e => e.WhenEntered)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.WhenModified)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<OutdoorCompaignDetail>(entity =>
            {
                entity.HasKey(e => e.UniqueRefNo)
                    .HasName("PK__Outdoor___10136FC1B9F498C8");

                entity.ToTable("Outdoor_CompaignDetails");

                entity.Property(e => e.UniqueRefNo).ValueGeneratedNever();

                entity.Property(e => e.AadharNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AlternateNo)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CampaignId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("CampaignID");

                entity.Property(e => e.ContactNo)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Dob)
                    .HasColumnType("datetime")
                    .HasColumnName("DOB");

                entity.Property(e => e.EmailId)
                    .IsUnicode(false)
                    .HasColumnName("EmailID");

                entity.Property(e => e.HighQualification)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IsSmssent).HasColumnName("IsSMSSent");

                entity.Property(e => e.LanguagesKnown)
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.Pannumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PANNumber");

                entity.Property(e => e.RecDate).HasColumnType("datetime");

                entity.Property(e => e.Response).IsUnicode(false);

                entity.Property(e => e.Sex)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UploadedCvpath)
                    .IsUnicode(false)
                    .HasColumnName("UploadedCVPath");
            });

            modelBuilder.Entity<Pfuandatum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PFUANData");

                entity.Property(e => e.CompletePfNo)
                    .HasMaxLength(255)
                    .HasColumnName("Complete PF No#");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(255)
                    .HasColumnName("EMPCode");

                entity.Property(e => e.Esic)
                    .HasMaxLength(255)
                    .HasColumnName("ESIC");

                entity.Property(e => e.RemarksForPf)
                    .HasMaxLength(255)
                    .HasColumnName("Remarks For PF");

                entity.Property(e => e.Uan).HasColumnName("UAN");
            });

            modelBuilder.Entity<PipHistory>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PIP_History");

                entity.Property(e => e.Comment)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.ImprovementPeriod)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Improvement_Period");

                entity.Property(e => e.NotSatisfyFrom)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OpenDate).HasColumnType("datetime");

                entity.Property(e => e.PDate)
                    .HasColumnType("datetime")
                    .HasColumnName("p_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PDept)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("p_Dept");

                entity.Property(e => e.PSubDept)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("p_SubDept");

                entity.Property(e => e.PipStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PIP_Status");

                entity.Property(e => e.PipfromDept)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PIPFrom_Dept");

                entity.Property(e => e.PipfromEmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PIPFrom_EmpCode");

                entity.Property(e => e.PipfromName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PIPFrom_Name");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.SuperName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Super_Name");

                entity.Property(e => e.Target)
                    .HasMaxLength(200)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PmssystemMaster>(entity =>
            {
                entity.ToTable("PMSSystem_Master");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AadharCardNo).IsUnicode(false);

                entity.Property(e => e.MasterId).HasColumnName("MasterID");

                entity.Property(e => e.PmapsUniqueId).HasColumnName("PMapsUniqueID");

                entity.Property(e => e.PsySection1Name).IsUnicode(false);

                entity.Property(e => e.PsySection1Result).IsUnicode(false);

                entity.Property(e => e.PsySection1Scores).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.PsySection1Trait1Name).IsUnicode(false);

                entity.Property(e => e.PsySection1Trait1Percentage).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.PsySection1Trait1Result).IsUnicode(false);

                entity.Property(e => e.PsySection1Trait2Name).IsUnicode(false);

                entity.Property(e => e.PsySection1Trait2Percentage).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.PsySection1Trait2Result).IsUnicode(false);

                entity.Property(e => e.PsySection1Trait3Name).IsUnicode(false);

                entity.Property(e => e.PsySection1Trait3Percentage).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.PsySection1Trait3Result).IsUnicode(false);

                entity.Property(e => e.PsySection1Trait4Name).IsUnicode(false);

                entity.Property(e => e.PsySection1Trait4Percentage).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.PsySection1Trait4Result).IsUnicode(false);

                entity.Property(e => e.PsySection1Trait5Name).IsUnicode(false);

                entity.Property(e => e.PsySection1Trait5Percentage).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.PsySection1Trait5Result).IsUnicode(false);

                entity.Property(e => e.Section1Name).IsUnicode(false);

                entity.Property(e => e.Section1Result).IsUnicode(false);

                entity.Property(e => e.Section1Scores).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Section2Name).IsUnicode(false);

                entity.Property(e => e.Section2Result).IsUnicode(false);

                entity.Property(e => e.Section2Scores).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Section3Name).IsUnicode(false);

                entity.Property(e => e.Section3Result).IsUnicode(false);

                entity.Property(e => e.Section3Scores).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.TestFitment).IsUnicode(false);
            });

            modelBuilder.Entity<PoshEmpAnswerDetail>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ExpectedAnswer)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.GivenAnswer)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RecDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<PoshQa>(entity =>
            {
                entity.ToTable("POSH_QA");

                entity.Property(e => e.PoshQaId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("POSH_QA_ID");

                entity.Property(e => e.Answer)
                    .HasMaxLength(50)
                    .HasColumnName("ANSWER");

                entity.Property(e => e.Question)
                    .HasMaxLength(400)
                    .HasColumnName("QUESTION");
            });

            modelBuilder.Entity<PoshQuestionMaster>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PoshQuestionMaster");

                entity.Property(e => e.Answer)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.QuestionName).IsUnicode(false);
            });

            modelBuilder.Entity<PoshTest>(entity =>
            {
                entity.ToTable("POSH_TEST");

                entity.Property(e => e.PoshTestId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("POSH_TEST_ID");

                entity.Property(e => e.ActualAnswer)
                    .HasMaxLength(50)
                    .HasColumnName("ACTUAL_ANSWER");

                entity.Property(e => e.Attempt)
                    .HasColumnName("ATTEMPT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .HasColumnName("EMP_CODE");

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("END_DATE");

                entity.Property(e => e.GivenAnswer)
                    .HasMaxLength(50)
                    .HasColumnName("GIVEN_ANSWER");

                entity.Property(e => e.PoshQaId)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("POSH_QA_ID");

                entity.Property(e => e.Result)
                    .HasColumnName("RESULT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("START_DATE")
                    .HasDefaultValueSql("(getdate())");

                entity.HasOne(d => d.PoshQa)
                    .WithMany(p => p.PoshTests)
                    .HasForeignKey(d => d.PoshQaId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_POSH_TEST_POSH_QA");
            });

            modelBuilder.Entity<PoshTestDone>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PoshTestDone");

                entity.Property(e => e.AccNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AccessRole)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccessType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Access_Type");

                entity.Property(e => e.ActivatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Activated_By");

                entity.Property(e => e.AdharCardNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Adhar_Card_No");

                entity.Property(e => e.AdharName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AnnivDate).HasColumnType("datetime");

                entity.Property(e => e.Bank)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BankLocation)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("Bank_Location");

                entity.Property(e => e.BankType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Bank_Type");

                entity.Property(e => e.BasicDaRate)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("Basic_DA_Rate");

                entity.Property(e => e.BlackListed).HasColumnName("Black_Listed");

                entity.Property(e => e.BloodGroup)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Branch)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CardNo).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CertificationComments)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("Certification_Comments");

                entity.Property(e => e.Company1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Company2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Company3)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Company4)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ConfirmationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("confirmation_date");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("created_by");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.CurrentArea)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentCity)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentHouseNo)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("CurrentHouse_No");

                entity.Property(e => e.CurrentLandmark)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentMobile)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentPhone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentState)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentStreet)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Department)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DesigEffectedDate).HasColumnType("datetime");

                entity.Property(e => e.Designation1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Designation2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Designation3)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Designation4)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DialerId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DialerID");

                entity.Property(e => e.Dob)
                    .HasColumnType("datetime")
                    .HasColumnName("DOB");

                entity.Property(e => e.Doc)
                    .HasColumnType("datetime")
                    .HasColumnName("DOC");

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.DolPrev)
                    .HasColumnType("datetime")
                    .HasColumnName("DOL_Prev");

                entity.Property(e => e.Dot)
                    .HasColumnType("datetime")
                    .HasColumnName("DOT");

                entity.Property(e => e.EffectiveDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Effective_Date");

                entity.Property(e => e.EffortLastDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Effort_Last_Date");

                entity.Property(e => e.EmailId0nr1r).HasColumnName("EmailID_0NR_1R");

                entity.Property(e => e.EmailId1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Email_ID");

                entity.Property(e => e.Emailid)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.EmergencyContact)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.EmergencyContactName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpCodeLm)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EmpCodeLM");

                entity.Property(e => e.EmployeeType).HasColumnName("Employee_Type");

                entity.Property(e => e.Esicno)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ESICNo");

                entity.Property(e => e.Esicstatus)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ESICStatus");

                entity.Property(e => e.ExitStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Exit_Status");

                entity.Property(e => e.FacebookId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FacebookID");

                entity.Property(e => e.FathersName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.FirstName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Fnfdone)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FNFDONE");

                entity.Property(e => e.Gboard)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GBoard");

                entity.Property(e => e.Gender)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Gper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("GPer");

                entity.Property(e => e.Grade)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.GrossSalPli)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("Gross_Sal_PLI");

                entity.Property(e => e.GroupName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Gstream)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GStream");

                entity.Property(e => e.Gyear)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("GYear");

                entity.Property(e => e.Handicap)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("handicap");

                entity.Property(e => e.Handicapnature)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("handicapnature");

                entity.Property(e => e.Handicapper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("handicapper");

                entity.Property(e => e.HrBucket).HasColumnName("HR_Bucket");

                entity.Property(e => e.HrLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HR_Location");

                entity.Property(e => e.Hsboard)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("HSBoard");

                entity.Property(e => e.Hsper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HSPer");

                entity.Property(e => e.HssStream)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Hssboard)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("HSSBoard");

                entity.Property(e => e.Hssper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HSSPer");

                entity.Property(e => e.Hsstream)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("HSStream");

                entity.Property(e => e.Hssyear)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HSSYear");

                entity.Property(e => e.Hsyear)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HSYear");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Identificationmark)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("identificationmark");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCode");

                entity.Property(e => e.InactiveAdnFnf).HasColumnName("Inactive_Adn_FNF");

                entity.Property(e => e.InstagramId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("InstagramID");

                entity.Property(e => e.IntrvFlag).HasColumnName("Intrv_Flag");

                entity.Property(e => e.IsPoshtestDone).HasColumnName("IsPOSHTestDone");

                entity.Property(e => e.JoiningDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Languages)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("languages");

                entity.Property(e => e.LastCtcDrawn).HasColumnName("Last_CTC_Drawn");

                entity.Property(e => e.LastCtcpa)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LastCTCPA");

                entity.Property(e => e.LastName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.LastWorkingDate).HasColumnType("datetime");

                entity.Property(e => e.Levels)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LinkedInId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LinkedInID");

                entity.Property(e => e.LogFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MaritalStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.MedicalHistory)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.MiddleName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.MothersMaidenName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.NameoOfAadhar)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Nameofchildren)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.Nationality)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("nationality");

                entity.Property(e => e.NoticePeriod)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OfferLetterDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OfferLetter_Date");

                entity.Property(e => e.OphandOverBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("OPHandOverBy");

                entity.Property(e => e.OphandOverDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OPHandOverDate");

                entity.Property(e => e.OpoEmailId)
                    .HasMaxLength(550)
                    .IsUnicode(false)
                    .HasColumnName("OPO_EmailID");

                entity.Property(e => e.OpoJoiningDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OPO_Joining_Date");

                entity.Property(e => e.OtherQua)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PaidLeave).HasColumnName("Paid_Leave");

                entity.Property(e => e.PanCardNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PAN_Card_No");

                entity.Property(e => e.Passportno)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("passportno");

                entity.Property(e => e.Password)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PensionMember)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("Pension_Member")
                    .IsFixedLength();

                entity.Property(e => e.PermanentArea)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentCity)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentHouseNo)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("PermanentHouse_No");

                entity.Property(e => e.PermanentLandmark)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentMobile)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentPhone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentState)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentStreet)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.PfMember)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PF_Member")
                    .IsFixedLength();

                entity.Property(e => e.PfNo1)
                    .HasMaxLength(50)
                    .HasColumnName("PF_No");

                entity.Property(e => e.PfWithdrawStatus)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PF_Withdraw_Status")
                    .IsFixedLength();

                entity.Property(e => e.Pfno)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PFNo");

                entity.Property(e => e.Pfstatus)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("PFStatus");

                entity.Property(e => e.Pgboard)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PGBoard");

                entity.Property(e => e.Pgper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PGPer");

                entity.Property(e => e.Pgyear)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PGYear");

                entity.Property(e => e.Photo)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Placeofbirth)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("placeofbirth");

                entity.Property(e => e.PmapsScore).HasColumnName("PMaps_Score");

                entity.Property(e => e.Prefix)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PreviousEmpcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Previous_EMPCODE");

                entity.Property(e => e.PreviousSubDept)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Previous_SubDept");

                entity.Property(e => e.Pstream)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PStream");

                entity.Property(e => e.RefCheckedName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Checked_Name");

                entity.Property(e => e.RefCheckedNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Checked_No");

                entity.Property(e => e.RefDepartment)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Department");

                entity.Property(e => e.RefDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Designation");

                entity.Property(e => e.RefEmpcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_EMPCode");

                entity.Property(e => e.RefFamilyRelationInEbl)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Family_Relation_In_EBL");

                entity.Property(e => e.RefSubDepartment)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Sub_Department");

                entity.Property(e => e.RejoiningDate)
                    .HasColumnType("datetime")
                    .HasColumnName("rejoining_date");

                entity.Property(e => e.Religion)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("religion");

                entity.Property(e => e.Remark).IsUnicode(false);

                entity.Property(e => e.ResignationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Resignation_Date");

                entity.Property(e => e.RevisedCtc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Revised_CTC");

                entity.Property(e => e.RevisedDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SparkId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Spark_ID");

                entity.Property(e => e.SparkId0nr1r).HasColumnName("SparkID_0NR_1R");

                entity.Property(e => e.SpouseName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.StatusId).HasColumnName("Status_ID");

                entity.Property(e => e.SubDept)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Subdepartment1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("subdepartment1");

                entity.Property(e => e.Tenure)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TransferDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Transfer_Date");

                entity.Property(e => e.TrngBatchId)
                    .HasMaxLength(50)
                    .HasColumnName("Trng_BatchID");

                entity.Property(e => e.TrngStatus)
                    .HasMaxLength(50)
                    .HasColumnName("trng_status");

                entity.Property(e => e.TrngSubStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Trng_Sub_Status");

                entity.Property(e => e.Uanno).HasColumnName("UANNO");

                entity.Property(e => e.UserId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UserID");

                entity.Property(e => e.VerifiedId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Verified_ID");

                entity.Property(e => e.VersantScore).HasColumnName("Versant_Score");

                entity.Property(e => e.WindowId)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WindowsId0nr1r).HasColumnName("WindowsID_0NR_1R");

                entity.Property(e => e.WorkingExperience)
                    .HasMaxLength(500)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Poshresult>(entity =>
            {
                entity.ToTable("poshresults");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Opoid)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("opoid");

                entity.Property(e => e.Resultdate)
                    .HasColumnType("datetime")
                    .HasColumnName("resultdate")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Resultstatus)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("resultstatus");
            });

            modelBuilder.Entity<Position>(entity =>
            {
                entity.ToTable("Position");

                entity.Property(e => e.PositionId)
                    .ValueGeneratedNever()
                    .HasColumnName("PositionID");

                entity.Property(e => e.PositionName)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Preapproved>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Preapproved");

                entity.Property(e => e.CardNo)
                    .HasMaxLength(10)
                    .HasColumnName("CardNO");

                entity.Property(e => e.EffectiveDate).HasColumnType("datetime");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.RequestId)
                    .HasColumnType("numeric(20, 0)")
                    .HasColumnName("RequestID");

                entity.Property(e => e.SanctionBy).HasMaxLength(1000);

                entity.Property(e => e.SanctionDate).HasColumnType("datetime");

                entity.Property(e => e.Sno).ValueGeneratedOnAdd();

                entity.Property(e => e.Status).HasMaxLength(20);
            });

            modelBuilder.Entity<ProbationCheck>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Probation_Check");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Empname)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.ExtensionCount).HasDefaultValueSql("((0))");

                entity.Property(e => e.ExtensionDays).HasDefaultValueSql("((0))");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ProbationDays).HasDefaultValueSql("((180))");

                entity.Property(e => e.Reason)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("updated_Date");
            });

            modelBuilder.Entity<ProbationCheckMailtobesend>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Probation_Check_Mailtobesend");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Empname)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IsmailSend)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('N')");
            });

            modelBuilder.Entity<ProbationCheckMailtobesendDuplicate>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Probation_Check_Mailtobesend_duplicate");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Empname)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IsmailSend)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('N')");
            });

            modelBuilder.Entity<ProcessMaster>(entity =>
            {
                entity.ToTable("Process_Master");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Process)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.SubProcess)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ProcessMaster1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ProcessMaster");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.ProcessId).HasColumnName("ProcessID");

                entity.Property(e => e.ProcessName)
                    .HasMaxLength(50)
                    .IsFixedLength();

                entity.Property(e => e.SubprocessName).HasMaxLength(50);
            });

            modelBuilder.Entity<ProcessTbl>(entity =>
            {
                entity.HasKey(e => e.Pid);

                entity.ToTable("Process_tbl");

                entity.Property(e => e.Pid).HasColumnName("PID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DeptId).HasColumnName("Dept_ID");

                entity.Property(e => e.LocationId).HasColumnName("Location_ID");

                entity.Property(e => e.Process)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Status).HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<ProcessTblBkup>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Process_tbl_bkup");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.DeptId).HasColumnName("DeptID");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Pid)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("PID");

                entity.Property(e => e.Process)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PurposeMaster>(entity =>
            {
                entity.ToTable("PurposeMaster");

                entity.Property(e => e.Purpose).HasMaxLength(250);
            });

            modelBuilder.Entity<QualificationMaster>(entity =>
            {
                entity.HasKey(e => e.QualificationId);

                entity.ToTable("QualificationMaster");

                entity.Property(e => e.QualificationId).HasColumnName("QualificationID");

                entity.Property(e => e.Qualification)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RAttAcceptRosterRemove>(entity =>
            {
                entity.ToTable("r_ATT_AcceptRoster_Remove");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.AttDate)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ATT_DATE");

                entity.Property(e => e.AttShift)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ATT_shift");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.EmpCodeLm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EmpCodeLM");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EMPCODE");

                entity.Property(e => e.Intime)
                    .HasColumnType("datetime")
                    .HasColumnName("INTIME");

                entity.Property(e => e.Outtime)
                    .HasColumnType("datetime")
                    .HasColumnName("OUTTIME");

                entity.Property(e => e.RequestReason)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("Request_Reason");

                entity.Property(e => e.RequestStatus).HasColumnName("Request_Status");

                entity.Property(e => e.SuperviserComment)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("Superviser_Comment");
            });

            modelBuilder.Entity<RAttRemove>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("r_ATT_Remove");

                entity.Property(e => e.Amopo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("AMOPO");

                entity.Property(e => e.AttDate)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ATT_DATE");

                entity.Property(e => e.AttShift)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ATT_shift");

                entity.Property(e => e.Department)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Empcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EMPCODE");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Intime)
                    .HasColumnType("datetime")
                    .HasColumnName("INTIME");

                entity.Property(e => e.Location)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("LOCATION");

                entity.Property(e => e.Omopo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("OMOPO");

                entity.Property(e => e.Outtime)
                    .HasColumnType("datetime")
                    .HasColumnName("OUTTIME");

                entity.Property(e => e.SubDepartment)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Tlopo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TLOPO");

                entity.Property(e => e.UpdateEmpcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UPDATE_EMPCODE");

                entity.Property(e => e.UpdateTime)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATE_TIME")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<RaAccessMasterRemove>(entity =>
            {
                entity.HasKey(e => e.AccessId)
                    .HasName("PK__RA_Acces__83AB4AACD839DA6A");

                entity.ToTable("RA_AccessMaster_Remove");

                entity.Property(e => e.AccessId).HasColumnName("Access_id");

                entity.Property(e => e.CrDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.ReportId).HasColumnName("Report_id");

                entity.HasOne(d => d.Report)
                    .WithMany(p => p.RaAccessMasterRemoves)
                    .HasForeignKey(d => d.ReportId)
                    .HasConstraintName("FK__RA_Access__Repor__2D32A501");
            });

            modelBuilder.Entity<RaDeptMasterRemove>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RA_DeptMaster_Remove");

                entity.Property(e => e.DeptId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("DeptID");

                entity.Property(e => e.DeptName)
                    .HasMaxLength(200)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RaLocationMasterRemove>(entity =>
            {
                entity.HasKey(e => e.LocationId)
                    .HasName("PK__RA_Locat__D2B71C9AD01CEF3D");

                entity.ToTable("RA_LocationMaster_Remove");

                entity.Property(e => e.LocationId).HasColumnName("Location_id");

                entity.Property(e => e.CrDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.LocationName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RaProcessMasterRemove>(entity =>
            {
                entity.HasKey(e => e.ProcessId)
                    .HasName("PK__RA_Proce__1B39A9769366C239");

                entity.ToTable("RA_ProcessMaster_Remove");

                entity.Property(e => e.ProcessId).HasColumnName("ProcessID");

                entity.Property(e => e.CrDate).HasColumnType("datetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.ProcessName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UserId)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("UserID");
            });

            modelBuilder.Entity<RaReportmasterRemove>(entity =>
            {
                entity.HasKey(e => e.ReportId)
                    .HasName("PK__RA_Repor__30F99199BD409D65");

                entity.ToTable("RA_Reportmaster_Remove");

                entity.Property(e => e.ReportId).HasColumnName("Report_id");

                entity.Property(e => e.CrDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Dbname)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DBName");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsParam)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('N')")
                    .IsFixedLength();

                entity.Property(e => e.LocationId).HasColumnName("Location_id");

                entity.Property(e => e.ReportName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Report_name");

                entity.Property(e => e.SpName)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("SP_Name");

                entity.Property(e => e.SqlserverId).HasColumnName("SQLServerID");

                entity.HasOne(d => d.Location)
                    .WithMany(p => p.RaReportmasterRemoves)
                    .HasForeignKey(d => d.LocationId)
                    .HasConstraintName("FK__RA_Report__Locat__2E26C93A");

                entity.HasOne(d => d.Sqlserver)
                    .WithMany(p => p.RaReportmasterRemoves)
                    .HasForeignKey(d => d.SqlserverId)
                    .HasConstraintName("FK__RA_Report__SQLSe__2F1AED73");
            });

            modelBuilder.Entity<RaSqlserverIpaddRemove>(entity =>
            {
                entity.HasKey(e => e.SqlServerId)
                    .HasName("PK__RA_SQLSe__5A73EA2BF01718B6");

                entity.ToTable("RA_SQLServerIPAdd_Remove");

                entity.Property(e => e.SqlServerId).HasColumnName("SqlServerID");

                entity.Property(e => e.CrDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.ServerDesc)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("Server_Desc");

                entity.Property(e => e.ServerLoc).HasColumnName("Server_Loc");

                entity.Property(e => e.ServerPassWd)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Server_PassWd");

                entity.Property(e => e.ServerUserId)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Server_UserID");

                entity.HasOne(d => d.ServerLocNavigation)
                    .WithMany(p => p.RaSqlserverIpaddRemoves)
                    .HasForeignKey(d => d.ServerLoc)
                    .HasConstraintName("FK__RA_SQLSer__Serve__300F11AC");
            });

            modelBuilder.Entity<RaSubDeptMasterRemove>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RA_SubDeptMaster_Remove");

                entity.Property(e => e.DeptId).HasColumnName("DeptID");

                entity.Property(e => e.SubDeptId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SubDeptID");

                entity.Property(e => e.SubDeptName)
                    .HasMaxLength(200)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RecrDocumentsHistory>(entity =>
            {
                entity.ToTable("Recr_Documents_History");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ApptLetter)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("APPT_Letter");

                entity.Property(e => e.BankStatements)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Bank_Statements");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.DrivingLicenceAdd)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Driving_licence_add");

                entity.Property(e => e.DrivingLicenceId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Driving_Licence_ID");

                entity.Property(e => e.ElecticityBill)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Electicity_Bill");

                entity.Property(e => e.Graduation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Hsc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HSC");

                entity.Property(e => e.IncrementLetter)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Increment_Letter");

                entity.Property(e => e.MasterId)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("MasterID");

                entity.Property(e => e.OtherAddProof)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("Other_Add_Proof");

                entity.Property(e => e.OtherEdu)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("Other_Edu");

                entity.Property(e => e.OtherIdProof)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Other_ID_Proof");

                entity.Property(e => e.OtherIncomeProof)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("Other_Income_Proof");

                entity.Property(e => e.PanCard)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PAN_card");

                entity.Property(e => e.PassportId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Passport_ID");

                entity.Property(e => e.PasswordAdd)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Password_Add");

                entity.Property(e => e.Pg)
                    .HasMaxLength(10)
                    .HasColumnName("PG")
                    .IsFixedLength();

                entity.Property(e => e.RationCard)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ration_Card");

                entity.Property(e => e.SalarySlip)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Slip");

                entity.Property(e => e.Ssc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SSC");

                entity.Property(e => e.VoterId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Voter_ID");
            });

            modelBuilder.Entity<RefAsk>(entity =>
            {
                entity.ToTable("REF_ASK");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AlternateNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Alternate_No");

                entity.Property(e => e.Category)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Comment2)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("Comment_2");

                entity.Property(e => e.Comment3)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("Comment_3");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FeedbackBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Feedback_By");

                entity.Property(e => e.FeedbackDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Feedback_Date");

                entity.Property(e => e.GivenBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Given_By");

                entity.Property(e => e.HrFeedback)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("HR_Feedback");

                entity.Property(e => e.MobileNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Note)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Question1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Question2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Question3)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Question4)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Question5)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SubCategory)
                    .HasMaxLength(500)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RefCandidateByEmployee>(entity =>
            {
                entity.ToTable("REF_Candidate_ByEmployee");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Address)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Alternate)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CurrentCompanyName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Designation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ExperienceIn)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Experience_In");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Gender)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.GivenBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Given_By");

                entity.Property(e => e.LastName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MiddleName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MobileNo)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Qualification)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.WorkExperience)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RefCandidateByEmployeeActive>(entity =>
            {
                entity.ToTable("REF_Candidate_ByEmployee_Active");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Address)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Alternate)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CurrentCompanyName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Designation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FirstName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Gender)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.GivenBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Given_By");

                entity.Property(e => e.LastName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MaritalStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.MiddleName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MobileNo)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Qualification)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.WorkExperience)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RefCategory>(entity =>
            {
                entity.ToTable("REF_Category");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Category)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<RefIjpactive>(entity =>
            {
                entity.ToTable("REF_IJPACTIVE");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Active)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Description).IsUnicode(false);

                entity.Property(e => e.Designation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Process)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RefIjpapply>(entity =>
            {
                entity.ToTable("REF_IJPAPPLY");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ContactNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Designation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Doj)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmployeeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmployeeName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.JobId).HasColumnName("JobID");

                entity.Property(e => e.PostAppliedFor)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Process)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ReportingTo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TotalExperience)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RefPositionApplied>(entity =>
            {
                entity.ToTable("REF_Position_Applied");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.NoOfSeats).HasColumnName("No_Of_Seats");

                entity.Property(e => e.PositionAvailable)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Position_Available");
            });

            modelBuilder.Entity<RefSubcategory>(entity =>
            {
                entity.ToTable("REF_Subcategory");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CategoryId).HasColumnName("Category_ID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SubCategory)
                    .HasMaxLength(500)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Reference>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Reference");

                entity.Property(e => e.ActualMode)
                    .HasMaxLength(255)
                    .HasColumnName("Actual Mode");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(255)
                    .HasColumnName("EMPCODE");

                entity.Property(e => e.InternalRef)
                    .HasMaxLength(255)
                    .HasColumnName("Internal Ref");

                entity.Property(e => e.Mode)
                    .HasMaxLength(255)
                    .HasColumnName("MODE");
            });

            modelBuilder.Entity<RelievingLetter>(entity =>
            {
                entity.ToTable("Relieving_Letter");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Department)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Designation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Gender)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.LeavingDate).HasColumnType("datetime");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SystemName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UploadBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UploadDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<RelievingLetterLog>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Relieving_Letter_Logs");

                entity.Property(e => e.Department)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Designation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Gender)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.LeavingDate).HasColumnType("datetime");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SystemName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UploadBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UploadDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<RequisitionHrdata20230601>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Requisition_HRDATA_20230601");

                entity.Property(e => e.ActualOjtEnddate)
                    .HasColumnType("datetime")
                    .HasColumnName("Actual_OJT_Enddate");

                entity.Property(e => e.ActualOjtStartdate)
                    .HasColumnType("datetime")
                    .HasColumnName("Actual_OJT_Startdate");

                entity.Property(e => e.ActualTrainer)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Actual_Trainer");

                entity.Property(e => e.ActualTrainerOpoid)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Actual_TrainerOPOID");

                entity.Property(e => e.ActualTrainingDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Actual_Training_date");

                entity.Property(e => e.ActualTrainingEnddate)
                    .HasColumnType("datetime")
                    .HasColumnName("Actual_Training_Enddate");

                entity.Property(e => e.BatchAssigndate)
                    .HasColumnType("datetime")
                    .HasColumnName("Batch_assigndate");

                entity.Property(e => e.Batchid)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.HoldDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Hold_date");

                entity.Property(e => e.HrOpoid)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("HR_OPOID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date");

                entity.Property(e => e.NoOfCandidates).HasColumnName("No_of_Candidates");

                entity.Property(e => e.OjtEnddate)
                    .HasColumnType("datetime")
                    .HasColumnName("OJT_Enddate");

                entity.Property(e => e.OjtStartdate)
                    .HasColumnType("datetime")
                    .HasColumnName("OJT_Startdate");

                entity.Property(e => e.Onboarddate).HasColumnType("datetime");

                entity.Property(e => e.RequestId).HasColumnName("Request_Id");

                entity.Property(e => e.TrainerAllocation)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Trainer_Allocation");

                entity.Property(e => e.TrainerClientFreelance)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Trainer_Client_Freelance");

                entity.Property(e => e.TrainerManager)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Trainer_Manager");

                entity.Property(e => e.TrainerName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Trainer_Name");

                entity.Property(e => e.TrainerOpoid)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Trainer_OPOID");

                entity.Property(e => e.TrainingEnddate)
                    .HasColumnType("datetime")
                    .HasColumnName("Training_Enddate");

                entity.Property(e => e.TrainingStartdate)
                    .HasColumnType("datetime")
                    .HasColumnName("Training_Startdate");
            });

            modelBuilder.Entity<RequisitionHrdatum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Requisition_HRDATA");

                entity.HasIndex(e => e.RequestId, "IDX_RequestId");

                entity.Property(e => e.ActualOjtEnddate)
                    .HasColumnType("datetime")
                    .HasColumnName("Actual_OJT_Enddate");

                entity.Property(e => e.ActualOjtStartdate)
                    .HasColumnType("datetime")
                    .HasColumnName("Actual_OJT_Startdate");

                entity.Property(e => e.ActualTrainer)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Actual_Trainer");

                entity.Property(e => e.ActualTrainerOpoid)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Actual_TrainerOPOID");

                entity.Property(e => e.ActualTrainingDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Actual_Training_date");

                entity.Property(e => e.ActualTrainingEnddate)
                    .HasColumnType("datetime")
                    .HasColumnName("Actual_Training_Enddate");

                entity.Property(e => e.BatchAssigndate)
                    .HasColumnType("datetime")
                    .HasColumnName("Batch_assigndate");

                entity.Property(e => e.Batchid)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.HoldDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Hold_date");

                entity.Property(e => e.HrOpoid)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("HR_OPOID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.NoOfCandidates).HasColumnName("No_of_Candidates");

                entity.Property(e => e.OjtEnddate)
                    .HasColumnType("datetime")
                    .HasColumnName("OJT_Enddate");

                entity.Property(e => e.OjtStartdate)
                    .HasColumnType("datetime")
                    .HasColumnName("OJT_Startdate");

                entity.Property(e => e.Onboarddate).HasColumnType("datetime");

                entity.Property(e => e.RequestId).HasColumnName("Request_Id");

                entity.Property(e => e.TrainerAllocation)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Trainer_Allocation");

                entity.Property(e => e.TrainerClientFreelance)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Trainer_Client_Freelance");

                entity.Property(e => e.TrainerManager)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Trainer_Manager");

                entity.Property(e => e.TrainerName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Trainer_Name");

                entity.Property(e => e.TrainerOpoid)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Trainer_OPOID");

                entity.Property(e => e.TrainingEnddate)
                    .HasColumnType("datetime")
                    .HasColumnName("Training_Enddate");

                entity.Property(e => e.TrainingStartdate)
                    .HasColumnType("datetime")
                    .HasColumnName("Training_Startdate");
            });

            modelBuilder.Entity<ResignationDemoMaster>(entity =>
            {
                entity.ToTable("ResignationDemoMaster");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("empcode");

                entity.Property(e => e.LastWorkingDate).HasColumnType("datetime");

                entity.Property(e => e.Reason)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Recdate)
                    .HasColumnType("datetime")
                    .HasColumnName("recdate")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Updated_By");
            });

            modelBuilder.Entity<ResignationMaster>(entity =>
            {
                entity.ToTable("Resignation_Master");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Comments).IsUnicode(false);

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpCodeLm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EmpCodeLM");

                entity.Property(e => e.EmpCodeLmreason)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("EmpCodeLMReason");

                entity.Property(e => e.EmpReason)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.IsExtendOrShortfall)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastWorkingDate).HasColumnType("datetime");

                entity.Property(e => e.ResignationDate).HasColumnType("datetime");

                entity.Property(e => e.RetainDate).HasColumnType("datetime");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdatedDate).HasColumnType("datetime");

                entity.Property(e => e.WhenEntered)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.WhenModified)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<ResignationMaster1>(entity =>
            {
                entity.ToTable("ResignationMaster");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreatedDate).HasDefaultValueSql("(getdate())");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.EmpStatus).HasDefaultValueSql("((0))");

                entity.Property(e => e.HrextendedDays).HasColumnName("HRExtendedDays");

                entity.Property(e => e.HrextendedReason)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("HRExtendedReason");

                entity.Property(e => e.Hropo)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("HROPO");

                entity.Property(e => e.HrrejectedReason)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("HRRejectedReason");

                entity.Property(e => e.Hrstatus).HasColumnName("HRStatus");

                entity.Property(e => e.HrupdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("HRUpdatedDate");

                entity.Property(e => e.IagreeForExtendDt).HasColumnName("IAgree_ForExtendDT");

                entity.Property(e => e.LastworkingDay).HasColumnType("datetime");

                entity.Property(e => e.MainMgStatus).HasDefaultValueSql("((0))");

                entity.Property(e => e.MgStatus).HasDefaultValueSql("((0))");

                entity.Property(e => e.MgrCode)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.MgrEmailId)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("MgrEmailID");

                entity.Property(e => e.MgrRejectedReason)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MgrStatus)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.MgrUpdatedDate).HasColumnType("datetime");

                entity.Property(e => e.ResignDate).HasColumnType("datetime");

                entity.Property(e => e.ResignReason)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.ResignRemarks)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.RevokeDate).HasColumnType("datetime");

                entity.Property(e => e.RevokeReason)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Tlstatus)
                    .HasColumnName("TLStatus")
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<Reward>(entity =>
            {
                entity.ToTable("Reward");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AppraisalTypeId).HasColumnName("Appraisal_Type_ID");

                entity.Property(e => e.CurrentCtc).HasColumnName("Current_CTC");

                entity.Property(e => e.CurrentDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EffectiveDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Effective_Date");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FyYear)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FY_Year");

                entity.Property(e => e.Kra).HasColumnName("KRA");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PercentageHike)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RevisedCtc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Revised_CTC");

                entity.Property(e => e.RevisedDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Status).HasDefaultValueSql("((1))");

                entity.Property(e => e.UploadBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Upload_by");

                entity.Property(e => e.UploadDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Upload_date")
                    .HasDefaultValueSql("(getdate())");

                entity.HasOne(d => d.AppraisalType)
                    .WithMany(p => p.Rewards)
                    .HasForeignKey(d => d.AppraisalTypeId)
                    .HasConstraintName("FK_Reward_Appraisal_List");
            });

            modelBuilder.Entity<Reward202223>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Reward_202223");

                entity.Property(e => e.AppraisalTypeId).HasColumnName("Appraisal_Type_ID");

                entity.Property(e => e.CurrentCtc).HasColumnName("Current_CTC");

                entity.Property(e => e.CurrentDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EffectiveDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Effective_Date");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FyYear)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FY_Year");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Kra).HasColumnName("KRA");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PercentageHike)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RevisedCtc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Revised_CTC");

                entity.Property(e => e.RevisedDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UploadBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Upload_by");

                entity.Property(e => e.UploadDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Upload_date");
            });

            modelBuilder.Entity<RewardLog>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Reward_Log");

                entity.Property(e => e.AppraisalTypeId).HasColumnName("Appraisal_Type_ID");

                entity.Property(e => e.CurrentCtc).HasColumnName("Current_CTC");

                entity.Property(e => e.CurrentDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EffectiveDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Effective_Date");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FyYear)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FY_Year");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Kra).HasColumnName("KRA");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PercentageHike)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RevisedCtc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Revised_CTC");

                entity.Property(e => e.RevisedDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UploadBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Upload_by");

                entity.Property(e => e.UploadDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Upload_date");
            });

            modelBuilder.Entity<RewardNandini202223>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Reward_Nandini_2022_23");

                entity.Property(e => e.AppraisalTypeId).HasColumnName("Appraisal_Type_ID");

                entity.Property(e => e.CurrentCtc).HasColumnName("Current_CTC");

                entity.Property(e => e.CurrentDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EffectiveDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Effective_Date");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FyYear)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FY_Year");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Kra).HasColumnName("KRA");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PercentageHike)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RevisedCtc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Revised_CTC");

                entity.Property(e => e.RevisedDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UploadBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Upload_by");

                entity.Property(e => e.UploadDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Upload_date");
            });

            modelBuilder.Entity<RewardVarsha>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Reward_Varsha");

                entity.Property(e => e.AppraisalTypeId).HasColumnName("Appraisal_Type_ID");

                entity.Property(e => e.CurrentCtc).HasColumnName("Current_CTC");

                entity.Property(e => e.CurrentDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EffectiveDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Effective_Date");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FyYear)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FY_Year");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Kra).HasColumnName("KRA");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PercentageHike)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RevisedCtc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Revised_CTC");

                entity.Property(e => e.RevisedDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UploadBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Upload_by");

                entity.Property(e => e.UploadDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Upload_date");
            });

            modelBuilder.Entity<RollMaster>(entity =>
            {
                entity.ToTable("Roll_Master");

                entity.Property(e => e.RollMasterId).HasColumnName("Roll_Master_ID");

                entity.Property(e => e.CreatedBy).HasColumnName("Created_By");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Deleted)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Roll).HasMaxLength(500);
            });

            modelBuilder.Entity<RollUserMaster>(entity =>
            {
                entity.HasKey(e => e.RollUserId);

                entity.ToTable("Roll_User_Master");

                entity.Property(e => e.RollUserId).HasColumnName("Roll_User_ID");

                entity.Property(e => e.CreatedBy).HasColumnName("Created_By");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Deleted)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FormId)
                    .HasMaxLength(500)
                    .HasColumnName("Form_ID");

                entity.Property(e => e.RollId).HasColumnName("Roll_ID");

                entity.Property(e => e.UserId).HasColumnName("User_ID");
            });

            modelBuilder.Entity<RosterDetail>(entity =>
            {
                entity.HasIndex(e => new { e.Empcode, e.AttDate }, "idx_attdate_code");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.AttDate)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ATT_DATE");

                entity.Property(e => e.AttShift)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ATT_shift");

                entity.Property(e => e.Codate)
                    .HasColumnType("datetime")
                    .HasColumnName("CODate");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EMPCODE");

                entity.Property(e => e.Intime)
                    .HasColumnType("datetime")
                    .HasColumnName("INTIME");

                entity.Property(e => e.Location)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("LOCATION");

                entity.Property(e => e.Outtime)
                    .HasColumnType("datetime")
                    .HasColumnName("OUTTIME");

                entity.Property(e => e.Remark)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REMARK");

                entity.Property(e => e.UpdateEmpcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UPDATE_EMPCODE")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdateTime)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATE_TIME")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<RosterDetails20230607>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RosterDetails_20230607");

                entity.Property(e => e.AttDate)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ATT_DATE");

                entity.Property(e => e.AttShift)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ATT_shift");

                entity.Property(e => e.Codate)
                    .HasColumnType("datetime")
                    .HasColumnName("CODate");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EMPCODE");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Intime)
                    .HasColumnType("datetime")
                    .HasColumnName("INTIME");

                entity.Property(e => e.Location)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("LOCATION");

                entity.Property(e => e.Outtime)
                    .HasColumnType("datetime")
                    .HasColumnName("OUTTIME");

                entity.Property(e => e.Remark)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REMARK");

                entity.Property(e => e.UpdateEmpcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UPDATE_EMPCODE");

                entity.Property(e => e.UpdateTime)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATE_TIME");
            });

            modelBuilder.Entity<RosterDetailsDeleted20230908>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RosterDetails_deleted20230908");

                entity.Property(e => e.AttDate)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ATT_DATE");

                entity.Property(e => e.AttShift)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ATT_shift");

                entity.Property(e => e.Codate)
                    .HasColumnType("datetime")
                    .HasColumnName("CODate");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EMPCODE");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Intime)
                    .HasColumnType("datetime")
                    .HasColumnName("INTIME");

                entity.Property(e => e.Location)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("LOCATION");

                entity.Property(e => e.Outtime)
                    .HasColumnType("datetime")
                    .HasColumnName("OUTTIME");

                entity.Property(e => e.Remark)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REMARK");

                entity.Property(e => e.UpdateEmpcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UPDATE_EMPCODE");

                entity.Property(e => e.UpdateTime)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATE_TIME");
            });

            modelBuilder.Entity<RosterDetailsLog>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RosterDetails_Log");

                entity.Property(e => e.AttDate)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ATT_DATE");

                entity.Property(e => e.AttShift)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ATT_shift");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EMPCODE");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Location)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("LOCATION");

                entity.Property(e => e.UpdateEmpcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UPDATE_EMPCODE");

                entity.Property(e => e.UpdateTime)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATE_TIME");
            });

            modelBuilder.Entity<RosterDetailsNewRemove>(entity =>
            {
                entity.ToTable("RosterDetails_New_remove");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.AttDate)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ATT_DATE");

                entity.Property(e => e.AttShift)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ATT_shift");

                entity.Property(e => e.Codate)
                    .HasColumnType("datetime")
                    .HasColumnName("CODate");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EMPCODE");

                entity.Property(e => e.Intime)
                    .HasColumnType("datetime")
                    .HasColumnName("INTIME");

                entity.Property(e => e.Location)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("LOCATION");

                entity.Property(e => e.Outtime)
                    .HasColumnType("datetime")
                    .HasColumnName("OUTTIME");

                entity.Property(e => e.Remark)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REMARK");

                entity.Property(e => e.UpdateEmpcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UPDATE_EMPCODE")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdateTime)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATE_TIME")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<RosterDetailsOpo099845>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RosterDetails_opo099845");

                entity.Property(e => e.AttDate)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ATT_DATE");

                entity.Property(e => e.AttShift)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ATT_shift");

                entity.Property(e => e.Codate)
                    .HasColumnType("datetime")
                    .HasColumnName("CODate");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EMPCODE");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Intime)
                    .HasColumnType("datetime")
                    .HasColumnName("INTIME");

                entity.Property(e => e.Location)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("LOCATION");

                entity.Property(e => e.Outtime)
                    .HasColumnType("datetime")
                    .HasColumnName("OUTTIME");

                entity.Property(e => e.Remark)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REMARK");

                entity.Property(e => e.UpdateEmpcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UPDATE_EMPCODE");

                entity.Property(e => e.UpdateTime)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATE_TIME");
            });

            modelBuilder.Entity<Salary20230513>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("salary_20230513");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryAnneBkup>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("salary_anne_bkup");

                entity.Property(e => e.AnnaxtureCtc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Annaxture_CTC");

                entity.Property(e => e.Basic).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Cca)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("CCA");

                entity.Property(e => e.Conveyance).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Ctc)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("CTC");

                entity.Property(e => e.Deduction).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Education)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("EDUCATION");

                entity.Property(e => e.EmployeeEsic)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Employee_ESIC");

                entity.Property(e => e.EmployeePf)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Employee_PF");

                entity.Property(e => e.EmployerEsic)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Employer_ESIC");

                entity.Property(e => e.EmployerPf)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Employer_PF");

                entity.Property(e => e.Field1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Filed2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Gratuity).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.GrossSalary)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Gross_salary");

                entity.Property(e => e.GrossSalaryA)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Gross_Salary_A");

                entity.Property(e => e.Hra)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("HRA");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.IncomeTax)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Income_Tax");

                entity.Property(e => e.LocationId).HasColumnName("Location_Id");

                entity.Property(e => e.Lta)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("LTA");

                entity.Property(e => e.MasterId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MasterID");

                entity.Property(e => e.Medical)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("MEDICAL");

                entity.Property(e => e.ModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Modified_by");

                entity.Property(e => e.ModifiedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Modified_Date");

                entity.Property(e => e.NetSalary)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Net_Salary");

                entity.Property(e => e.OtherAllowance)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Other_Allowance");

                entity.Property(e => e.Ptax)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PTax");

                entity.Property(e => e.Sodexho)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SODEXHO");

                entity.Property(e => e.StBonus)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("St_Bonus");

                entity.Property(e => e.Systemname)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TotalAllowancesB)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Total_Allowances_B");

                entity.Property(e => e.TotalContribution)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Total_Contribution");

                entity.Property(e => e.TotalDeduction)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Total_Deduction");

                entity.Property(e => e.VAllowance)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("V_Allowance");
            });

            modelBuilder.Entity<SalaryAnnexure>(entity =>
            {
                entity.ToTable("Salary_Annexure");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AnnualBonus)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Annual_Bonus");

                entity.Property(e => e.AnnualStBonus)
                    .HasMaxLength(50)
                    .HasColumnName("Annual_St_Bonus");

                entity.Property(e => e.Basic).HasMaxLength(50);

                entity.Property(e => e.Cca)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("CCA");

                entity.Property(e => e.Conveyance).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Designation)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EducationPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("EDUCATION_PM");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmplDeduction)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Empl_Deduction");

                entity.Property(e => e.EmployeeEsic)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Employee_ESIC");

                entity.Property(e => e.EmployeePfPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Employee_PF_PM");

                entity.Property(e => e.EmployerEsic)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Employer_ESIC");

                entity.Property(e => e.EmployerPf)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Employer_PF");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Gender)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Gratuity).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.GrossPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Gross_PM");

                entity.Property(e => e.GrossSalary)
                    .HasMaxLength(50)
                    .HasColumnName("Gross_salary");

                entity.Property(e => e.GrossSalaryA)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Gross_Salary_A");

                entity.Property(e => e.Hra)
                    .HasMaxLength(50)
                    .HasColumnName("HRA");

                entity.Property(e => e.IncomeTax)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Income_Tax");

                entity.Property(e => e.LastName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.LtaPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("LTA_PM");

                entity.Property(e => e.MedicalPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Medical_PM");

                entity.Property(e => e.MedicalStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Medical_Status");

                entity.Property(e => e.MobilePm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Mobile_PM");

                entity.Property(e => e.MobileStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Mobile_Status");

                entity.Property(e => e.ModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Modified_by");

                entity.Property(e => e.NetSalary)
                    .HasMaxLength(50)
                    .HasColumnName("Net_Salary");

                entity.Property(e => e.OfferCtc)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Offer_CTC");

                entity.Property(e => e.OtherAllowance)
                    .HasMaxLength(50)
                    .HasColumnName("Other_Allowance");

                entity.Property(e => e.PetrolPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Petrol_PM");

                entity.Property(e => e.PfStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PF_Status");

                entity.Property(e => e.Pli)
                    .HasMaxLength(50)
                    .HasColumnName("PLI");

                entity.Property(e => e.Ptax)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PTax");

                entity.Property(e => e.Remark1).IsUnicode(false);

                entity.Property(e => e.Remark2).IsUnicode(false);

                entity.Property(e => e.RetentionBonus)
                    .HasMaxLength(50)
                    .HasColumnName("Retention_Bonus");

                entity.Property(e => e.SodexhoPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SODEXHO_PM");

                entity.Property(e => e.SodexhoStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SODEXHO_Status");

                entity.Property(e => e.StBonus)
                    .HasMaxLength(50)
                    .HasColumnName("St_Bonus");

                entity.Property(e => e.Systemname)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TotalAllowancesPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Total_Allowances_PM");

                entity.Property(e => e.TotalCtc)
                    .HasMaxLength(50)
                    .HasColumnName("Total_CTC");

                entity.Property(e => e.TotalDeduction)
                    .HasMaxLength(50)
                    .HasColumnName("Total_Deduction");

                entity.Property(e => e.VAllowance)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("V_Allowance");
            });

            modelBuilder.Entity<SalaryAnnexure202223>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Salary_Annexure_2022_23");

                entity.Property(e => e.AnnualBonus)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Annual_Bonus");

                entity.Property(e => e.AnnualStBonus)
                    .HasMaxLength(50)
                    .HasColumnName("Annual_St_Bonus");

                entity.Property(e => e.Basic).HasMaxLength(50);

                entity.Property(e => e.Cca)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("CCA");

                entity.Property(e => e.Conveyance).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.Designation)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EducationPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("EDUCATION_PM");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmplDeduction)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Empl_Deduction");

                entity.Property(e => e.EmployeeEsic)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Employee_ESIC");

                entity.Property(e => e.EmployeePfPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Employee_PF_PM");

                entity.Property(e => e.EmployerEsic)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Employer_ESIC");

                entity.Property(e => e.EmployerPf)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Employer_PF");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Gender)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Gratuity).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.GrossPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Gross_PM");

                entity.Property(e => e.GrossSalary)
                    .HasMaxLength(50)
                    .HasColumnName("Gross_salary");

                entity.Property(e => e.GrossSalaryA)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Gross_Salary_A");

                entity.Property(e => e.Hra)
                    .HasMaxLength(50)
                    .HasColumnName("HRA");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.IncomeTax)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Income_Tax");

                entity.Property(e => e.LastName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.LtaPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("LTA_PM");

                entity.Property(e => e.MedicalPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Medical_PM");

                entity.Property(e => e.MedicalStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Medical_Status");

                entity.Property(e => e.MobilePm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Mobile_PM");

                entity.Property(e => e.MobileStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Mobile_Status");

                entity.Property(e => e.ModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Modified_by");

                entity.Property(e => e.NetSalary)
                    .HasMaxLength(50)
                    .HasColumnName("Net_Salary");

                entity.Property(e => e.OfferCtc)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Offer_CTC");

                entity.Property(e => e.OtherAllowance)
                    .HasMaxLength(50)
                    .HasColumnName("Other_Allowance");

                entity.Property(e => e.PetrolPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Petrol_PM");

                entity.Property(e => e.PfStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PF_Status");

                entity.Property(e => e.Pli)
                    .HasMaxLength(50)
                    .HasColumnName("PLI");

                entity.Property(e => e.Ptax)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PTax");

                entity.Property(e => e.Remark1).IsUnicode(false);

                entity.Property(e => e.Remark2).IsUnicode(false);

                entity.Property(e => e.RetentionBonus)
                    .HasMaxLength(50)
                    .HasColumnName("Retention_Bonus");

                entity.Property(e => e.SodexhoPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SODEXHO_PM");

                entity.Property(e => e.SodexhoStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SODEXHO_Status");

                entity.Property(e => e.StBonus)
                    .HasMaxLength(50)
                    .HasColumnName("St_Bonus");

                entity.Property(e => e.Systemname)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TotalAllowancesPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Total_Allowances_PM");

                entity.Property(e => e.TotalCtc)
                    .HasMaxLength(50)
                    .HasColumnName("Total_CTC");

                entity.Property(e => e.TotalDeduction)
                    .HasMaxLength(50)
                    .HasColumnName("Total_Deduction");

                entity.Property(e => e.VAllowance)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("V_Allowance");
            });

            modelBuilder.Entity<SalaryAnnexure2022231>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Salary_Annexure_202223");

                entity.Property(e => e.AnnualBonus)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Annual_Bonus");

                entity.Property(e => e.AnnualStBonus)
                    .HasMaxLength(50)
                    .HasColumnName("Annual_St_Bonus");

                entity.Property(e => e.Basic).HasMaxLength(50);

                entity.Property(e => e.Cca)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("CCA");

                entity.Property(e => e.Conveyance).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.Designation)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EducationPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("EDUCATION_PM");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmplDeduction)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Empl_Deduction");

                entity.Property(e => e.EmployeeEsic)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Employee_ESIC");

                entity.Property(e => e.EmployeePfPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Employee_PF_PM");

                entity.Property(e => e.EmployerEsic)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Employer_ESIC");

                entity.Property(e => e.EmployerPf)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Employer_PF");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Gender)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Gratuity).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.GrossPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Gross_PM");

                entity.Property(e => e.GrossSalary)
                    .HasMaxLength(50)
                    .HasColumnName("Gross_salary");

                entity.Property(e => e.GrossSalaryA)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Gross_Salary_A");

                entity.Property(e => e.Hra)
                    .HasMaxLength(50)
                    .HasColumnName("HRA");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.IncomeTax)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Income_Tax");

                entity.Property(e => e.LastName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.LtaPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("LTA_PM");

                entity.Property(e => e.MedicalPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Medical_PM");

                entity.Property(e => e.MedicalStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Medical_Status");

                entity.Property(e => e.MobilePm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Mobile_PM");

                entity.Property(e => e.MobileStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Mobile_Status");

                entity.Property(e => e.ModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Modified_by");

                entity.Property(e => e.NetSalary)
                    .HasMaxLength(50)
                    .HasColumnName("Net_Salary");

                entity.Property(e => e.OfferCtc)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Offer_CTC");

                entity.Property(e => e.OtherAllowance)
                    .HasMaxLength(50)
                    .HasColumnName("Other_Allowance");

                entity.Property(e => e.PetrolPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Petrol_PM");

                entity.Property(e => e.PfStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PF_Status");

                entity.Property(e => e.Pli)
                    .HasMaxLength(50)
                    .HasColumnName("PLI");

                entity.Property(e => e.Ptax)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PTax");

                entity.Property(e => e.Remark1).IsUnicode(false);

                entity.Property(e => e.Remark2).IsUnicode(false);

                entity.Property(e => e.RetentionBonus)
                    .HasMaxLength(50)
                    .HasColumnName("Retention_Bonus");

                entity.Property(e => e.SodexhoPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SODEXHO_PM");

                entity.Property(e => e.SodexhoStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SODEXHO_Status");

                entity.Property(e => e.StBonus)
                    .HasMaxLength(50)
                    .HasColumnName("St_Bonus");

                entity.Property(e => e.Systemname)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TotalAllowancesPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Total_Allowances_PM");

                entity.Property(e => e.TotalCtc)
                    .HasMaxLength(50)
                    .HasColumnName("Total_CTC");

                entity.Property(e => e.TotalDeduction)
                    .HasMaxLength(50)
                    .HasColumnName("Total_Deduction");

                entity.Property(e => e.VAllowance)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("V_Allowance");
            });

            modelBuilder.Entity<SalaryAnnexureBk202122>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Salary_Annexure_BK_2021_22");

                entity.Property(e => e.AnnualBonus)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Annual_Bonus");

                entity.Property(e => e.AnnualStBonus)
                    .HasMaxLength(50)
                    .HasColumnName("Annual_St_Bonus");

                entity.Property(e => e.Basic).HasMaxLength(50);

                entity.Property(e => e.Cca)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("CCA");

                entity.Property(e => e.Conveyance).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.Designation)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EducationPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("EDUCATION_PM");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmplDeduction)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Empl_Deduction");

                entity.Property(e => e.EmployeeEsic)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Employee_ESIC");

                entity.Property(e => e.EmployeePfPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Employee_PF_PM");

                entity.Property(e => e.EmployerEsic)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Employer_ESIC");

                entity.Property(e => e.EmployerPf)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Employer_PF");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Gender)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Gratuity).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.GrossPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Gross_PM");

                entity.Property(e => e.GrossSalary)
                    .HasMaxLength(50)
                    .HasColumnName("Gross_salary");

                entity.Property(e => e.GrossSalaryA)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Gross_Salary_A");

                entity.Property(e => e.Hra)
                    .HasMaxLength(50)
                    .HasColumnName("HRA");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.IncomeTax)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Income_Tax");

                entity.Property(e => e.LastName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.LtaPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("LTA_PM");

                entity.Property(e => e.MedicalPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Medical_PM");

                entity.Property(e => e.MedicalStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Medical_Status");

                entity.Property(e => e.MobilePm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Mobile_PM");

                entity.Property(e => e.MobileStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Mobile_Status");

                entity.Property(e => e.ModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Modified_by");

                entity.Property(e => e.NetSalary)
                    .HasMaxLength(50)
                    .HasColumnName("Net_Salary");

                entity.Property(e => e.OfferCtc)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Offer_CTC");

                entity.Property(e => e.OtherAllowance)
                    .HasMaxLength(50)
                    .HasColumnName("Other_Allowance");

                entity.Property(e => e.PetrolPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Petrol_PM");

                entity.Property(e => e.PfStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PF_Status");

                entity.Property(e => e.Pli)
                    .HasMaxLength(50)
                    .HasColumnName("PLI");

                entity.Property(e => e.Ptax)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PTax");

                entity.Property(e => e.Remark1).IsUnicode(false);

                entity.Property(e => e.Remark2).IsUnicode(false);

                entity.Property(e => e.RetentionBonus)
                    .HasMaxLength(50)
                    .HasColumnName("Retention_Bonus");

                entity.Property(e => e.SodexhoPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SODEXHO_PM");

                entity.Property(e => e.SodexhoStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SODEXHO_Status");

                entity.Property(e => e.StBonus)
                    .HasMaxLength(50)
                    .HasColumnName("St_Bonus");

                entity.Property(e => e.Systemname)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TotalAllowancesPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Total_Allowances_PM");

                entity.Property(e => e.TotalCtc)
                    .HasMaxLength(50)
                    .HasColumnName("Total_CTC");

                entity.Property(e => e.TotalDeduction)
                    .HasMaxLength(50)
                    .HasColumnName("Total_Deduction");

                entity.Property(e => e.VAllowance)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("V_Allowance");
            });

            modelBuilder.Entity<SalaryAnnexureLog>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Salary_Annexure_Log");

                entity.Property(e => e.AnnualBonus)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Annual_Bonus");

                entity.Property(e => e.AnnualStBonus)
                    .HasMaxLength(50)
                    .HasColumnName("Annual_St_Bonus");

                entity.Property(e => e.Basic).HasMaxLength(50);

                entity.Property(e => e.Cca)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("CCA");

                entity.Property(e => e.Conveyance).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Designation)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EducationPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("EDUCATION_PM");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmplDeduction)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Empl_Deduction");

                entity.Property(e => e.EmployeeEsic)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Employee_ESIC");

                entity.Property(e => e.EmployeePfPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Employee_PF_PM");

                entity.Property(e => e.EmployerEsic)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Employer_ESIC");

                entity.Property(e => e.EmployerPf)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Employer_PF");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Gender)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Gratuity).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.GrossPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Gross_PM");

                entity.Property(e => e.GrossSalary)
                    .HasMaxLength(50)
                    .HasColumnName("Gross_salary");

                entity.Property(e => e.GrossSalaryA)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Gross_Salary_A");

                entity.Property(e => e.Hra)
                    .HasMaxLength(50)
                    .HasColumnName("HRA");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.IncomeTax)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Income_Tax");

                entity.Property(e => e.LastName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.LtaPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("LTA_PM");

                entity.Property(e => e.MedicalPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Medical_PM");

                entity.Property(e => e.MedicalStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Medical_Status");

                entity.Property(e => e.MobilePm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Mobile_PM");

                entity.Property(e => e.MobileStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Mobile_Status");

                entity.Property(e => e.ModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Modified_by");

                entity.Property(e => e.NetSalary)
                    .HasMaxLength(50)
                    .HasColumnName("Net_Salary");

                entity.Property(e => e.OfferCtc)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Offer_CTC");

                entity.Property(e => e.OtherAllowance)
                    .HasMaxLength(50)
                    .HasColumnName("Other_Allowance");

                entity.Property(e => e.PetrolPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Petrol_PM");

                entity.Property(e => e.PfStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PF_Status");

                entity.Property(e => e.Pli)
                    .HasMaxLength(50)
                    .HasColumnName("PLI");

                entity.Property(e => e.Ptax)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PTax");

                entity.Property(e => e.Remark1).IsUnicode(false);

                entity.Property(e => e.Remark2).IsUnicode(false);

                entity.Property(e => e.RetentionBonus)
                    .HasMaxLength(50)
                    .HasColumnName("Retention_Bonus");

                entity.Property(e => e.SodexhoPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SODEXHO_PM");

                entity.Property(e => e.SodexhoStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SODEXHO_Status");

                entity.Property(e => e.StBonus)
                    .HasMaxLength(50)
                    .HasColumnName("St_Bonus");

                entity.Property(e => e.Systemname)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TotalAllowancesPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Total_Allowances_PM");

                entity.Property(e => e.TotalCtc)
                    .HasMaxLength(50)
                    .HasColumnName("Total_CTC");

                entity.Property(e => e.TotalDeduction)
                    .HasMaxLength(50)
                    .HasColumnName("Total_Deduction");

                entity.Property(e => e.VAllowance)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("V_Allowance");
            });

            modelBuilder.Entity<SalaryAnnexureLogBk>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Salary_Annexure_Log_BK");

                entity.Property(e => e.AnnualBonus)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Annual_Bonus");

                entity.Property(e => e.Basic).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Cca)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("CCA");

                entity.Property(e => e.Conveyance).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.EducationPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("EDUCATION_PM");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmplDeduction)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Empl_Deduction");

                entity.Property(e => e.EmployeeEsic)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Employee_ESIC");

                entity.Property(e => e.EmployeePfPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Employee_PF_PM");

                entity.Property(e => e.EmployerEsic)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Employer_ESIC");

                entity.Property(e => e.EmployerPf)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Employer_PF");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Gender)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Gratuity).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.GrossPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Gross_PM");

                entity.Property(e => e.GrossSalary)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Gross_salary");

                entity.Property(e => e.GrossSalaryA)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Gross_Salary_A");

                entity.Property(e => e.Hra)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("HRA");

                entity.Property(e => e.IncomeTax)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Income_Tax");

                entity.Property(e => e.LastName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.LtaPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("LTA_PM");

                entity.Property(e => e.MedicalPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Medical_PM");

                entity.Property(e => e.MedicalStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Medical_Status");

                entity.Property(e => e.MobilePm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Mobile_PM");

                entity.Property(e => e.MobileStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Mobile_Status");

                entity.Property(e => e.ModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Modified_by");

                entity.Property(e => e.NetSalary)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Net_Salary");

                entity.Property(e => e.OfferCtc)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Offer_CTC");

                entity.Property(e => e.OtherAllowance)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Other_Allowance");

                entity.Property(e => e.PetrolPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Petrol_PM");

                entity.Property(e => e.PfStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PF_Status");

                entity.Property(e => e.Pli)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PLI");

                entity.Property(e => e.Ptax)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PTax");

                entity.Property(e => e.SodexhoPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SODEXHO_PM");

                entity.Property(e => e.SodexhoStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SODEXHO_Status");

                entity.Property(e => e.StBonus)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("St_Bonus");

                entity.Property(e => e.Systemname)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TotalAllowancesPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Total_Allowances_PM");

                entity.Property(e => e.TotalCtc)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Total_CTC");

                entity.Property(e => e.TotalDeduction)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Total_Deduction");

                entity.Property(e => e.VAllowance)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("V_Allowance");
            });

            modelBuilder.Entity<SalaryAnnexureOpo091299>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Salary_Annexure_OPO091299");

                entity.Property(e => e.AnnualBonus)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Annual_Bonus");

                entity.Property(e => e.AnnualStBonus)
                    .HasMaxLength(50)
                    .HasColumnName("Annual_St_Bonus");

                entity.Property(e => e.Basic).HasMaxLength(50);

                entity.Property(e => e.Cca)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("CCA");

                entity.Property(e => e.Conveyance).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.Designation)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EducationPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("EDUCATION_PM");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmplDeduction)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Empl_Deduction");

                entity.Property(e => e.EmployeeEsic)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Employee_ESIC");

                entity.Property(e => e.EmployeePfPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Employee_PF_PM");

                entity.Property(e => e.EmployerEsic)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Employer_ESIC");

                entity.Property(e => e.EmployerPf)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Employer_PF");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Gender)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Gratuity).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.GrossPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Gross_PM");

                entity.Property(e => e.GrossSalary)
                    .HasMaxLength(50)
                    .HasColumnName("Gross_salary");

                entity.Property(e => e.GrossSalaryA)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Gross_Salary_A");

                entity.Property(e => e.Hra)
                    .HasMaxLength(50)
                    .HasColumnName("HRA");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.IncomeTax)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Income_Tax");

                entity.Property(e => e.LastName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.LtaPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("LTA_PM");

                entity.Property(e => e.MedicalPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Medical_PM");

                entity.Property(e => e.MedicalStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Medical_Status");

                entity.Property(e => e.MobilePm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Mobile_PM");

                entity.Property(e => e.MobileStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Mobile_Status");

                entity.Property(e => e.ModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Modified_by");

                entity.Property(e => e.NetSalary)
                    .HasMaxLength(50)
                    .HasColumnName("Net_Salary");

                entity.Property(e => e.OfferCtc)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Offer_CTC");

                entity.Property(e => e.OtherAllowance)
                    .HasMaxLength(50)
                    .HasColumnName("Other_Allowance");

                entity.Property(e => e.PetrolPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Petrol_PM");

                entity.Property(e => e.PfStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PF_Status");

                entity.Property(e => e.Pli)
                    .HasMaxLength(50)
                    .HasColumnName("PLI");

                entity.Property(e => e.Ptax)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PTax");

                entity.Property(e => e.Remark1).IsUnicode(false);

                entity.Property(e => e.Remark2).IsUnicode(false);

                entity.Property(e => e.RetentionBonus)
                    .HasMaxLength(50)
                    .HasColumnName("Retention_Bonus");

                entity.Property(e => e.SodexhoPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SODEXHO_PM");

                entity.Property(e => e.SodexhoStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SODEXHO_Status");

                entity.Property(e => e.StBonus)
                    .HasMaxLength(50)
                    .HasColumnName("St_Bonus");

                entity.Property(e => e.Systemname)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TotalAllowancesPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Total_Allowances_PM");

                entity.Property(e => e.TotalCtc)
                    .HasMaxLength(50)
                    .HasColumnName("Total_CTC");

                entity.Property(e => e.TotalDeduction)
                    .HasMaxLength(50)
                    .HasColumnName("Total_Deduction");

                entity.Property(e => e.VAllowance)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("V_Allowance");
            });

            modelBuilder.Entity<SalaryAnnexureVarsha>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Salary_Annexure_Varsha");

                entity.Property(e => e.AnnualBonus)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Annual_Bonus");

                entity.Property(e => e.AnnualStBonus)
                    .HasMaxLength(50)
                    .HasColumnName("Annual_St_Bonus");

                entity.Property(e => e.Basic).HasMaxLength(50);

                entity.Property(e => e.Cca)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("CCA");

                entity.Property(e => e.Conveyance).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.Designation)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EducationPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("EDUCATION_PM");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmplDeduction)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Empl_Deduction");

                entity.Property(e => e.EmployeeEsic)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Employee_ESIC");

                entity.Property(e => e.EmployeePfPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Employee_PF_PM");

                entity.Property(e => e.EmployerEsic)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Employer_ESIC");

                entity.Property(e => e.EmployerPf)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Employer_PF");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Gender)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Gratuity).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.GrossPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Gross_PM");

                entity.Property(e => e.GrossSalary)
                    .HasMaxLength(50)
                    .HasColumnName("Gross_salary");

                entity.Property(e => e.GrossSalaryA)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Gross_Salary_A");

                entity.Property(e => e.Hra)
                    .HasMaxLength(50)
                    .HasColumnName("HRA");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.IncomeTax)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Income_Tax");

                entity.Property(e => e.LastName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.LtaPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("LTA_PM");

                entity.Property(e => e.MedicalPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Medical_PM");

                entity.Property(e => e.MedicalStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Medical_Status");

                entity.Property(e => e.MobilePm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Mobile_PM");

                entity.Property(e => e.MobileStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Mobile_Status");

                entity.Property(e => e.ModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Modified_by");

                entity.Property(e => e.NetSalary)
                    .HasMaxLength(50)
                    .HasColumnName("Net_Salary");

                entity.Property(e => e.OfferCtc)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Offer_CTC");

                entity.Property(e => e.OtherAllowance)
                    .HasMaxLength(50)
                    .HasColumnName("Other_Allowance");

                entity.Property(e => e.PetrolPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Petrol_PM");

                entity.Property(e => e.PfStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PF_Status");

                entity.Property(e => e.Pli)
                    .HasMaxLength(50)
                    .HasColumnName("PLI");

                entity.Property(e => e.Ptax)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PTax");

                entity.Property(e => e.Remark1).IsUnicode(false);

                entity.Property(e => e.Remark2).IsUnicode(false);

                entity.Property(e => e.RetentionBonus)
                    .HasMaxLength(50)
                    .HasColumnName("Retention_Bonus");

                entity.Property(e => e.SodexhoPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SODEXHO_PM");

                entity.Property(e => e.SodexhoStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SODEXHO_Status");

                entity.Property(e => e.StBonus)
                    .HasMaxLength(50)
                    .HasColumnName("St_Bonus");

                entity.Property(e => e.Systemname)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TotalAllowancesPm)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Total_Allowances_PM");

                entity.Property(e => e.TotalCtc)
                    .HasMaxLength(50)
                    .HasColumnName("Total_CTC");

                entity.Property(e => e.TotalDeduction)
                    .HasMaxLength(50)
                    .HasColumnName("Total_Deduction");

                entity.Property(e => e.VAllowance)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("V_Allowance");
            });

            modelBuilder.Entity<SalaryStructure>(entity =>
            {
                entity.HasKey(e => e.EmpCode);

                entity.ToTable("SalaryStructure");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Basic).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Cca)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("CCA");

                entity.Property(e => e.Conveyance).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Ctc)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("CTC");

                entity.Property(e => e.Deduction).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Education)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("EDUCATION");

                entity.Property(e => e.EmployeeEsic)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Employee_ESIC");

                entity.Property(e => e.EmployeePf)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Employee_PF");

                entity.Property(e => e.EmployerEsic)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Employer_ESIC");

                entity.Property(e => e.EmployerPf)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Employer_PF");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("First_name");

                entity.Property(e => e.Gratuity).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.GrossSalary)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Gross_salary");

                entity.Property(e => e.GrossSalaryA)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Gross_Salary_A");

                entity.Property(e => e.Hra)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("HRA");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.IncomeTax)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Income_Tax");

                entity.Property(e => e.LastName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Last_name");

                entity.Property(e => e.LocationId).HasColumnName("Location_Id");

                entity.Property(e => e.Lta)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("LTA");

                entity.Property(e => e.MasterId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MasterID");

                entity.Property(e => e.Medical)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("MEDICAL");

                entity.Property(e => e.ModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Modified_by");

                entity.Property(e => e.ModifiedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Modified_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.NetSalary)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Net_Salary");

                entity.Property(e => e.OtherAllowance)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Other_Allowance");

                entity.Property(e => e.Ptax)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PTax");

                entity.Property(e => e.Sodexho)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SODEXHO");

                entity.Property(e => e.StBonus)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("St_Bonus");

                entity.Property(e => e.Systemname)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TotalAllowancesB)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Total_Allowances_B");

                entity.Property(e => e.TotalContribution)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Total_Contribution");

                entity.Property(e => e.TotalDeduction)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Total_Deduction");

                entity.Property(e => e.VAllowance)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("V_Allowance");
            });

            modelBuilder.Entity<SalaryStructureLog>(entity =>
            {
                entity.HasKey(e => e.EmpCode);

                entity.ToTable("SalaryStructure_Log");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Basic).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Cca)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("CCA");

                entity.Property(e => e.Conveyance).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Ctc)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("CTC");

                entity.Property(e => e.Deduction).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Education)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("EDUCATION");

                entity.Property(e => e.EmployeeEsic)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Employee_ESIC");

                entity.Property(e => e.EmployeePf)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Employee_PF");

                entity.Property(e => e.EmployerEsic)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Employer_ESIC");

                entity.Property(e => e.EmployerPf)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Employer_PF");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("First_name");

                entity.Property(e => e.Gratuity).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.GrossSalary)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Gross_salary");

                entity.Property(e => e.GrossSalaryA)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Gross_Salary_A");

                entity.Property(e => e.Hra)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("HRA");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.IncomeTax)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Income_Tax");

                entity.Property(e => e.LastName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Last_name");

                entity.Property(e => e.LocationId).HasColumnName("Location_Id");

                entity.Property(e => e.Lta)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("LTA");

                entity.Property(e => e.MasterId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MasterID");

                entity.Property(e => e.Medical)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("MEDICAL");

                entity.Property(e => e.ModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Modified_by");

                entity.Property(e => e.ModifiedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Modified_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.NetSalary)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Net_Salary");

                entity.Property(e => e.OtherAllowance)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Other_Allowance");

                entity.Property(e => e.Ptax)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PTax");

                entity.Property(e => e.Sodexho)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SODEXHO");

                entity.Property(e => e.StBonus)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("St_Bonus");

                entity.Property(e => e.Systemname)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TotalAllowancesB)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Total_Allowances_B");

                entity.Property(e => e.TotalContribution)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Total_Contribution");

                entity.Property(e => e.TotalDeduction)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Total_Deduction");

                entity.Property(e => e.VAllowance)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("V_Allowance");
            });

            modelBuilder.Entity<SalaryStructureOpo>(entity =>
            {
                entity.ToTable("SalaryStructure_OPO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AttendanceAllowance)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Attendance_Allowance");

                entity.Property(e => e.Basic).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Cca)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("CCA");

                entity.Property(e => e.Conveyance).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Education).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EMPCODE");

                entity.Property(e => e.EmployerEsic)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Employer_ESIC");

                entity.Property(e => e.EmployerPf)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Employer_PF");

                entity.Property(e => e.Esic)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ESIC");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("First_name");

                entity.Property(e => e.Food).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Gratuity).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.GrossCtc)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Gross_CTC");

                entity.Property(e => e.GrossSalary)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Gross_Salary");

                entity.Property(e => e.Hra)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("HRA");

                entity.Property(e => e.LastName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Last_name");

                entity.Property(e => e.LocationId).HasColumnName("Location_Id");

                entity.Property(e => e.MasterId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MasterID");

                entity.Property(e => e.Medical).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Mobile).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Modified_by");

                entity.Property(e => e.ModifiedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Modified_Date");

                entity.Property(e => e.NetEarning)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Net_Earning");

                entity.Property(e => e.NetTakeHome)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Net_Take_Home");

                entity.Property(e => e.OtherAllowance)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Other_Allowance");

                entity.Property(e => e.Petrol).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Pf)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PF");

                entity.Property(e => e.Pli)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PLI");

                entity.Property(e => e.ProfessionalTax)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Professional_Tax");

                entity.Property(e => e.Sodexho)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SODEXHO");

                entity.Property(e => e.StBonus)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("St_bonus");

                entity.Property(e => e.SubTotal).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Systemname)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TotalCtc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TotalCTC");

                entity.Property(e => e.TotalDeductions)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Total_Deductions");

                entity.Property(e => e.VariableAllowance)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Variable_Allowance");
            });

            modelBuilder.Entity<InterviewrsDept>(entity =>
            {
                entity.HasKey(e => e.InterviewId)
                    .HasName("PK__Intervie__C97C58521FDD5D68");

                entity.ToTable("InterviewrsDEPT");

                entity.Property(e => e.InterviewId).ValueGeneratedNever();

                entity.Property(e => e.InterviewEmail)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.InterviewerName)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });
            modelBuilder.Entity<SalaryStructureOpoLog>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryStructure_OPO_Logs");

                entity.Property(e => e.AttendanceAllowance)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Attendance_Allowance");

                entity.Property(e => e.Basic).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Cca)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("CCA");

                entity.Property(e => e.Conveyance).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Education).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EMPCODE");

                entity.Property(e => e.EmployerEsic)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Employer_ESIC");

                entity.Property(e => e.EmployerPf)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Employer_PF");

                entity.Property(e => e.Esic)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ESIC");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("First_name");

                entity.Property(e => e.Food).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Gratuity).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.GrossCtc)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Gross_CTC");

                entity.Property(e => e.GrossSalary)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Gross_Salary");

                entity.Property(e => e.Hra)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("HRA");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.LastName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Last_name");

                entity.Property(e => e.LocationId).HasColumnName("Location_Id");

                entity.Property(e => e.MasterId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MasterID");

                entity.Property(e => e.Medical).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Mobile).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Modified_by");

                entity.Property(e => e.ModifiedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Modified_Date");

                entity.Property(e => e.NetEarning)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Net_Earning");

                entity.Property(e => e.NetTakeHome)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Net_Take_Home");

                entity.Property(e => e.OtherAllowance)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Other_Allowance");

                entity.Property(e => e.Petrol).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Pf)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PF");

                entity.Property(e => e.Pli)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PLI");

                entity.Property(e => e.ProfessionalTax)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Professional_Tax");

                entity.Property(e => e.Sodexho)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SODEXHO");

                entity.Property(e => e.StBonus)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("St_bonus");

                entity.Property(e => e.SubTotal).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Systemname)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TotalCtc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TotalCTC");

                entity.Property(e => e.TotalDeductions)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Total_Deductions");

                entity.Property(e => e.VariableAllowance)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Variable_Allowance");
            });

            modelBuilder.Entity<SalaryTrans20230315>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTrans20230315");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransa20230315>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransa20230315");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransaction>(entity =>
            {
                entity.HasKey(e => new { e.EmpCode, e.SalaryMonth1 });

                entity.ToTable("SalaryTransaction");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransaction20221202>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransaction_20221202");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransaction202300822>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransaction_202300822");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransaction2023008221>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransaction202300822");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransaction20230214>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransaction_20230214");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransaction20230215ggn>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransaction_20230215ggn");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransaction20230310>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransaction_20230310");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransaction20230313>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("salary_transaction_20230313");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransaction202303131>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransaction_20230313");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransaction20230315>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransaction_20230315");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransaction20230315ggn>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransaction_20230315ggn");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransaction20230403>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransaction_20230403");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransaction20230407>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransaction_20230407");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransaction20230408>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransaction_20230408");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransaction20230415>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransaction_20230415");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransaction20230417>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransaction20230417");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransaction20230418>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransaction20230418");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransaction20230505>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransaction_20230505");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransaction20230509>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransaction_20230509");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransaction20230512>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransaction_20230512");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransaction20230513>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransaction_20230513");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransaction20230513Raj>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransaction_20230513_raj");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransaction20230608>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransaction_20230608");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransaction20230620>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransaction_20230620");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransaction20230704>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransaction_20230704");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransaction202307041>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransaction20230704");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransaction20230802>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransaction_20230802");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransaction20230908>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransaction20230908");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransaction20230913>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransaction20230913");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransaction20230914>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransaction20230914");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransaction20231011>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransaction_20231011");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransaction202310111>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransaction20231011");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransaction20231013>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransaction_20231013");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransaction202310131>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransaction20231013");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransaction20231211>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransaction20231211");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransaction20231227>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransaction20231227");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransactionBkp20230715>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransaction_bkp20230715");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransactionBkp20231005>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransaction_bkp20231005");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransactionBkp20231110>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransactionBkp_20231110");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransactionBkp20231114>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransaction_bkp20231114");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransactionMarApr23Bkp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransaction_MArAPr23_bkp");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransactionbkp20230403>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransactionbkp_20230403");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalaryTransactionnew20231013>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SalaryTransactionnew20231013");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<Salarytransaction20230728>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("salarytransaction_20230728");

                entity.Property(e => e.AcOpChrgs).HasColumnName("Ac_Op_Chrgs");

                entity.Property(e => e.ArrearsCca).HasColumnName("ArrearsCCA");

                entity.Property(e => e.ArrearsDays).HasMaxLength(50);

                entity.Property(e => e.ArrearsHra).HasColumnName("ArrearsHRA");

                entity.Property(e => e.AssetDeposit).HasColumnName("ASSET_DEPOSIT");

                entity.Property(e => e.BankAccount).HasMaxLength(50);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.CardNo).HasMaxLength(50);

                entity.Property(e => e.Cca).HasColumnName("CCA");

                entity.Property(e => e.Cesic).HasColumnName("CESIC");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.DaysLwp).HasColumnName("DaysLWP");

                entity.Property(e => e.DaysPaid).HasMaxLength(50);

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode).HasMaxLength(10);

                entity.Property(e => e.EmpName).HasMaxLength(50);

                entity.Property(e => e.Emplpf).HasColumnName("EMPLPF");

                entity.Property(e => e.Esic).HasColumnName("ESIC");

                entity.Property(e => e.EsicNo)
                    .HasMaxLength(50)
                    .HasColumnName("ESIC_No");

                entity.Property(e => e.Esicgross).HasColumnName("ESICGross");

                entity.Property(e => e.Hra).HasColumnName("HRA");

                entity.Property(e => e.IcardCharges).HasColumnName("ICardCharges");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCODE");

                entity.Property(e => e.It).HasColumnName("IT");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Lta).HasColumnName("LTA");

                entity.Property(e => e.Lvplamt).HasColumnName("LVPLAmt");

                entity.Property(e => e.Lvpldays).HasColumnName("LVPLDays");

                entity.Property(e => e.Lwf).HasColumnName("LWF");

                entity.Property(e => e.NoticePeriodRecovery).HasColumnName("NoticePeriod_Recovery");

                entity.Property(e => e.Pf).HasColumnName("PF");

                entity.Property(e => e.Pfaccno)
                    .HasMaxLength(50)
                    .HasColumnName("PFACCNO");

                entity.Property(e => e.Process).HasMaxLength(50);

                entity.Property(e => e.Pt).HasColumnName("PT");

                entity.Property(e => e.Rbicharges).HasColumnName("RBICharges");

                entity.Property(e => e.RefNo).HasMaxLength(50);

                entity.Property(e => e.SalaryMonth).HasColumnType("datetime");

                entity.Property(e => e.SalaryMonth1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Salary_Month");

                entity.Property(e => e.SodexoDed).HasColumnName("Sodexo_Ded");

                entity.Property(e => e.StBonus).HasColumnName("St_Bonus");

                entity.Property(e => e.StateName).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TaPetrol).HasColumnName("TA_Petrol");

                entity.Property(e => e.Tds).HasColumnName("TDS");

                entity.Property(e => e.UanNo)
                    .HasMaxLength(50)
                    .HasColumnName("UAN_No");

                entity.Property(e => e.UploadTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<ShiftDetail>(entity =>
            {
                entity.HasKey(e => new { e.ShiftName, e.Process });

                entity.Property(e => e.ShiftName)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Process)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Intime)
                    .HasColumnType("datetime")
                    .HasColumnName("INTIME");

                entity.Property(e => e.Outtime)
                    .HasColumnType("datetime")
                    .HasColumnName("OUTTIME");
            });

            modelBuilder.Entity<ShiftDetails20231128>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ShiftDetails20231128");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Intime)
                    .HasColumnType("datetime")
                    .HasColumnName("INTIME");

                entity.Property(e => e.Outtime)
                    .HasColumnType("datetime")
                    .HasColumnName("OUTTIME");

                entity.Property(e => e.Process)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ShiftName)
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ShiftTiming>(entity =>
            {
                entity.HasKey(e => new { e.ShiftName, e.Intime, e.Outtime });

                entity.Property(e => e.ShiftName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Intime)
                    .HasColumnType("datetime")
                    .HasColumnName("INTIME");

                entity.Property(e => e.Outtime)
                    .HasColumnType("datetime")
                    .HasColumnName("OUTTIME");

                entity.Property(e => e.CreatedDate)
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");
            });

            modelBuilder.Entity<SizeCheck>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SizeCheck");

                entity.Property(e => e.Dataspace)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IndexSize)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ReservedSpace)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TableName).HasMaxLength(128);

                entity.Property(e => e.UnusedSpace)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SkillDetail>(entity =>
            {
                entity.Property(e => e.Certification).HasMaxLength(150);

                entity.Property(e => e.MobileNo).HasMaxLength(50);

                entity.Property(e => e.Percentage)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RecDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.YearOfPassing).HasMaxLength(50);
            });

            modelBuilder.Entity<SmsItList>(entity =>
            {
                entity.ToTable("SMS_IT_LIST");

                entity.HasIndex(e => new { e.Number, e.LocationId }, "IX_SMS_IT_ukmobno")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Department)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Designation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LocationId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LocationID");

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Number)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SmsItLocation>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SMS_IT_LOCATIONS");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Path)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SmsItLog>(entity =>
            {
                entity.ToTable("SMS_IT_LOG");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AddedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.HostName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MessageText)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("Message_text");

                entity.Property(e => e.PhoneNumber)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("Phone_Number");

                entity.Property(e => e.Winlogin)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SmsItLogin>(entity =>
            {
                entity.ToTable("SMS_IT_LOGIN");

                entity.HasIndex(e => e.EmployeeCode, "IX_SMS_IT_UniqueKeyEmpcode")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.EmployeeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LocationAccess)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.MobileNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Mobile_No");

                entity.Property(e => e.Name)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Password)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Source>(entity =>
            {
                entity.ToTable("Source");
            });

            modelBuilder.Entity<SrTeamDetail>(entity =>
            {
                entity.HasKey(e => e.EmpCode);

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Designation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");
            });

            modelBuilder.Entity<SrvAccessMasterD>(entity =>
            {
                entity.ToTable("SRV_AccessMasterD");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AccessTypeId).HasColumnName("AccessType_id");

                entity.Property(e => e.CreatedBy).HasMaxLength(500);

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.LocationId).HasColumnName("Location_id");

                entity.Property(e => e.OpoId)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("OPO_ID");

                entity.Property(e => e.UpdatedBy).HasMaxLength(500);

                entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<SrvAccessTypeD>(entity =>
            {
                entity.HasKey(e => e.AccessTypeId);

                entity.ToTable("SRV_AccessTypeD");

                entity.Property(e => e.AccessTypeId).HasColumnName("AccessType_id");

                entity.Property(e => e.AccessType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CreatedBy).HasMaxLength(500);

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.SrvId).HasColumnName("SRV_ID");

                entity.Property(e => e.UpdatedBy).HasMaxLength(500);

                entity.Property(e => e.UpdatedDate).HasColumnType("datetime");

                entity.Property(e => e.Urllink)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("URLLink");
            });

            modelBuilder.Entity<SrvAssignSurvey>(entity =>
            {
                entity.HasKey(e => e.AsId);

                entity.ToTable("SRV_AssignSurvey");

                entity.Property(e => e.AsId).HasColumnName("AS_Id");

                entity.Property(e => e.CreatedBy).HasMaxLength(500);

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(250)
                    .IsFixedLength();

                entity.Property(e => e.FId).HasColumnName("F_Id");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.SrvId).HasColumnName("SRV_ID");

                entity.Property(e => e.SurveyDone).HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdatedBy).HasMaxLength(500);

                entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<SrvAssignSurveyLog>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SRV_AssignSurvey_Log");

                entity.Property(e => e.AsId).HasColumnName("AS_Id");

                entity.Property(e => e.CreatedBy).HasMaxLength(500);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(250)
                    .IsFixedLength();

                entity.Property(e => e.FId).HasColumnName("F_Id");

                entity.Property(e => e.SrvId).HasColumnName("SRV_ID");

                entity.Property(e => e.SurveyDone).HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdatedBy).HasMaxLength(500);

                entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<SrvAvgCalc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SRV_AvgCalc");

                entity.Property(e => e.ColName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ColumnName)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SrvAvgRating>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SRV_AvgRating");

                entity.Property(e => e.QName)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("Q_Name");

                entity.Property(e => e.QValue).HasColumnName("Q_Value");

                entity.Property(e => e.SrvId).HasColumnName("SRV_ID");

                entity.Property(e => e.ThemeId).HasColumnName("Theme_ID");
            });

            modelBuilder.Entity<SrvEmployeeFeedback>(entity =>
            {
                entity.HasKey(e => e.EfId);

                entity.ToTable("SRV_EmployeeFeedback");

                entity.Property(e => e.EfId).HasColumnName("EF_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(250)
                    .IsFixedLength();

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(250)
                    .IsFixedLength();

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.QId).HasColumnName("Q_ID");

                entity.Property(e => e.SrvId).HasColumnName("SRV_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(250)
                    .IsFixedLength();

                entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<SrvEmployeeFeedbackLog>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SRV_EmployeeFeedback_Log");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.EfId).HasColumnName("EF_ID");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(250)
                    .IsFixedLength();

                entity.Property(e => e.QId).HasColumnName("Q_ID");

                entity.Property(e => e.SrvId).HasColumnName("SRV_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<SrvFilterMaster>(entity =>
            {
                entity.HasKey(e => e.FId);

                entity.ToTable("SRV_FilterMaster");

                entity.Property(e => e.FId).HasColumnName("F_Id");

                entity.Property(e => e.CreatedBy).HasMaxLength(500);

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FText).HasColumnName("F_Text");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.UpdatedBy).HasMaxLength(500);

                entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<SrvParamList>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SRV_ParamList");

                entity.Property(e => e.ParamId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ParamID");

                entity.Property(e => e.ParamName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Parameter)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SrvQuestionMaster>(entity =>
            {
                entity.HasKey(e => e.QId);

                entity.ToTable("SRV_QuestionMaster");

                entity.Property(e => e.QId).HasColumnName("Q_ID");

                entity.Property(e => e.AnsValue)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.QName)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("Q_Name");

                entity.Property(e => e.QSrNo).HasColumnName("Q_SrNo");

                entity.Property(e => e.QType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Q_Type");

                entity.Property(e => e.QValue)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Q_Value");

                entity.Property(e => e.SrvId).HasColumnName("SRV_ID");

                entity.Property(e => e.ThemeId).HasColumnName("Theme_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<SrvQuestionType>(entity =>
            {
                entity.HasKey(e => e.QType);

                entity.ToTable("SRV_QuestionType");

                entity.Property(e => e.QType).HasColumnName("Q_Type");

                entity.Property(e => e.QuestionType)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SrvReportTable>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SRV_ReportTable");

                entity.Property(e => e.AvgRating)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("Avg Rating")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.QId).HasColumnName("Q_ID");

                entity.Property(e => e.QTypeId).HasColumnName("Q_TypeID");

                entity.Property(e => e.SrvId).HasColumnName("SRV_ID");

                entity.Property(e => e.ThemeId).HasColumnName("Theme_id");

                entity.Property(e => e.Total).HasDefaultValueSql("((0))");

                entity.Property(e => e._1)
                    .HasColumnName("1")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e._2)
                    .HasColumnName("2")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e._3)
                    .HasColumnName("3")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e._4)
                    .HasColumnName("4")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e._5)
                    .HasColumnName("5")
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<SrvReportTable2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SRV_ReportTable2");

                entity.Property(e => e.No)
                    .HasColumnName("NO")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.QId).HasColumnName("Q_ID");

                entity.Property(e => e.QTypeId).HasColumnName("Q_TypeID");

                entity.Property(e => e.SrvId).HasColumnName("SRV_ID");

                entity.Property(e => e.ThemeId).HasColumnName("Theme_id");

                entity.Property(e => e.Total).HasDefaultValueSql("((0))");

                entity.Property(e => e.Yes)
                    .HasColumnName("YES")
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<SrvReportTabletextType>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SRV_ReportTabletextType");

                entity.Property(e => e.Answer).IsUnicode(false);

                entity.Property(e => e.QName)
                    .IsUnicode(false)
                    .HasColumnName("Q_Name");

                entity.Property(e => e.SrvName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("SRV_Name");

                entity.Property(e => e.ThemeName)
                    .HasMaxLength(250)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SrvStatusSummarry>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SRV_StatusSummarry");

                entity.Property(e => e.Age).HasColumnName("%Age");

                entity.Property(e => e.SrvId).HasColumnName("SRV_ID");

                entity.Property(e => e.SrvName)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("SRV_Name");
            });

            modelBuilder.Entity<SrvSurveyMaster>(entity =>
            {
                entity.HasKey(e => e.SrvId)
                    .HasName("PK_SRV_SurveyMaster_1");

                entity.ToTable("SRV_SurveyMaster");

                entity.Property(e => e.SrvId).HasColumnName("SRV_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.SrvName)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("SRV_Name");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<SrvThemeTypeD>(entity =>
            {
                entity.HasKey(e => e.ThemeId)
                    .HasName("PK__SRV_Them__592407B218CCBD2F");

                entity.ToTable("SRV_ThemeTypeD");

                entity.Property(e => e.ThemeId).HasColumnName("Theme_Id");

                entity.Property(e => e.CreatedBy).HasMaxLength(500);

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.SrvId).HasColumnName("SRV_ID");

                entity.Property(e => e.ThemeCode)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.ThemeName)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.UpdatedBy).HasMaxLength(500);

                entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<SrvUserActivity>(entity =>
            {
                entity.HasKey(e => e.ActId);

                entity.ToTable("SRV_UserActivity");

                entity.Property(e => e.ActId).HasColumnName("ACT_Id");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(250)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Srvassi>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("srvassi");

                entity.Property(e => e.AsId).HasColumnName("AS_Id");

                entity.Property(e => e.CreatedBy).HasMaxLength(500);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.Emp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EMP");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(250)
                    .IsFixedLength();

                entity.Property(e => e.FId).HasColumnName("F_Id");

                entity.Property(e => e.SrvId).HasColumnName("SRV_ID");

                entity.Property(e => e.UpdatedBy).HasMaxLength(500);

                entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<StarCjReasonRemove>(entity =>
            {
                entity.ToTable("StarCJ_Reason_remove");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Reason)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SubReason)
                    .HasMaxLength(500)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<StarCjsystemLoginRemove>(entity =>
            {
                entity.ToTable("StarCJSystemLogin_Remove");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Status).HasDefaultValueSql("((0))");

                entity.Property(e => e.SystemIp)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SystemIP");

                entity.Property(e => e.SystemName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.WindowLogin)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<StateCityMaster>(entity =>
            {
                entity.ToTable("StateCityMaster");

                entity.Property(e => e.City).HasMaxLength(150);

                entity.Property(e => e.State).HasMaxLength(150);

                entity.Property(e => e.StateCode).HasMaxLength(50);
            });

            modelBuilder.Entity<SubDept1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SubDept_1");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.LocationId).HasColumnName("Location_Id");

                entity.Property(e => e.Status).HasMaxLength(50);

                entity.Property(e => e.SubDept)
                    .HasMaxLength(50)
                    .HasColumnName("Sub_Dept");

                entity.Property(e => e.SubDept11)
                    .HasMaxLength(50)
                    .HasColumnName("Sub_Dept_1");

                entity.Property(e => e.SubDeptId)
                    .HasMaxLength(50)
                    .HasColumnName("Sub_Dept_Id");
            });

            modelBuilder.Entity<SubProcessTbl>(entity =>
            {
                entity.ToTable("SubProcess_tbl");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.ProcId).HasColumnName("Proc_ID");

                entity.Property(e => e.SubProcess)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.Proc)
                    .WithMany(p => p.SubProcessTbls)
                    .HasForeignKey(d => d.ProcId)
                    .HasConstraintName("FK_SubProcess_tbl_Process_tbl");
            });

            modelBuilder.Entity<SubProcessTblBkup>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SubProcess_tbl_bkup");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.ProcId).HasColumnName("Proc_ID");

                entity.Property(e => e.SubProcess)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SubSource>(entity =>
            {
                entity.ToTable("SubSource");
            });

            modelBuilder.Entity<Sudipto>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sudipto");

                entity.Property(e => e.AccNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AccessRole)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccessType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Access_Type");

                entity.Property(e => e.ActivatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Activated_By");

                entity.Property(e => e.AdharCardNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Adhar_Card_No");

                entity.Property(e => e.AnnivDate).HasColumnType("datetime");

                entity.Property(e => e.Bank)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BankType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Bank_Type");

                entity.Property(e => e.BlackListed).HasColumnName("Black_Listed");

                entity.Property(e => e.BloodGroup)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Branch)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CardNo).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CertificationComments)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("Certification_Comments");

                entity.Property(e => e.Company1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Company2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Company3)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Company4)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ConfirmationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("confirmation_date");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.CurrentArea)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentCity)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentHouseNo)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("CurrentHouse_No");

                entity.Property(e => e.CurrentLandmark)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentMobile)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentPhone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentState)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentStreet)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Department)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DesigEffectedDate).HasColumnType("datetime");

                entity.Property(e => e.Designation1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Designation2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Designation3)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Designation4)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DialerId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DialerID");

                entity.Property(e => e.Dob)
                    .HasColumnType("datetime")
                    .HasColumnName("DOB");

                entity.Property(e => e.Doc)
                    .HasColumnType("datetime")
                    .HasColumnName("DOC");

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.Dot)
                    .HasColumnType("datetime")
                    .HasColumnName("DOT");

                entity.Property(e => e.EffectiveDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Effective_Date");

                entity.Property(e => e.EffortLastDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Effort_Last_Date");

                entity.Property(e => e.EmailId0nr1r).HasColumnName("EmailID_0NR_1R");

                entity.Property(e => e.EmailId1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Email_ID");

                entity.Property(e => e.Emailid)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.EmergencyContact)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.EmergencyContactName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpCodeLm)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EmpCodeLM");

                entity.Property(e => e.EmployeeType).HasColumnName("Employee_Type");

                entity.Property(e => e.Esicno)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ESICNo");

                entity.Property(e => e.Esicstatus)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ESICStatus");

                entity.Property(e => e.ExitStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Exit_Status");

                entity.Property(e => e.FathersName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.FirstName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Fnfdone)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FNFDONE");

                entity.Property(e => e.Gboard)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GBoard");

                entity.Property(e => e.Gender)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Gper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("GPer");

                entity.Property(e => e.Grade)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.GroupName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Gstream)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GStream");

                entity.Property(e => e.Gyear)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("GYear");

                entity.Property(e => e.Handicap)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("handicap");

                entity.Property(e => e.Handicapnature)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("handicapnature");

                entity.Property(e => e.Handicapper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("handicapper");

                entity.Property(e => e.HrBucket).HasColumnName("HR_Bucket");

                entity.Property(e => e.HrLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HR_Location");

                entity.Property(e => e.Hsboard)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("HSBoard");

                entity.Property(e => e.Hsper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HSPer");

                entity.Property(e => e.HssStream)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Hssboard)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("HSSBoard");

                entity.Property(e => e.Hssper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HSSPer");

                entity.Property(e => e.Hsstream)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("HSStream");

                entity.Property(e => e.Hssyear)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HSSYear");

                entity.Property(e => e.Hsyear)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HSYear");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Identificationmark)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("identificationmark");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCode");

                entity.Property(e => e.InactiveAdnFnf).HasColumnName("Inactive_Adn_FNF");

                entity.Property(e => e.IntrvFlag).HasColumnName("Intrv_Flag");

                entity.Property(e => e.JoiningDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Languages)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("languages");

                entity.Property(e => e.LastCtcDrawn).HasColumnName("Last_CTC_Drawn");

                entity.Property(e => e.LastCtcpa)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LastCTCPA");

                entity.Property(e => e.LastName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.LastWorkingDate).HasColumnType("datetime");

                entity.Property(e => e.LogFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MaritalStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.MedicalHistory)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.MiddleName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.MothersMaidenName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.Nameofchildren)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.Nationality)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("nationality");

                entity.Property(e => e.NoticePeriod)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OfferLetterDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OfferLetter_Date");

                entity.Property(e => e.OphandOverBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("OPHandOverBy");

                entity.Property(e => e.OphandOverDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OPHandOverDate");

                entity.Property(e => e.OpoEmailId)
                    .HasMaxLength(550)
                    .IsUnicode(false)
                    .HasColumnName("OPO_EmailID");

                entity.Property(e => e.OpoJoiningDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OPO_Joining_Date");

                entity.Property(e => e.OtherQua)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PaidLeave).HasColumnName("Paid_Leave");

                entity.Property(e => e.PanCardNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PAN_Card_No");

                entity.Property(e => e.Passportno)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("passportno");

                entity.Property(e => e.Password)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentArea)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentCity)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentHouseNo)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("PermanentHouse_No");

                entity.Property(e => e.PermanentLandmark)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentMobile)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentPhone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentState)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentStreet)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Pfno)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PFNo");

                entity.Property(e => e.Pfstatus)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("PFStatus");

                entity.Property(e => e.Pgboard)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PGBoard");

                entity.Property(e => e.Pgper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PGPer");

                entity.Property(e => e.Pgyear)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PGYear");

                entity.Property(e => e.Photo)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Placeofbirth)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("placeofbirth");

                entity.Property(e => e.Prefix)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PreviousEmpcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Previous_EMPCODE");

                entity.Property(e => e.PreviousSubDept)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Previous_SubDept");

                entity.Property(e => e.Pstream)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PStream");

                entity.Property(e => e.RefCheckedName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Checked_Name");

                entity.Property(e => e.RefCheckedNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Checked_No");

                entity.Property(e => e.RefDepartment)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Department");

                entity.Property(e => e.RefDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Designation");

                entity.Property(e => e.RefEmpcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_EMPCode");

                entity.Property(e => e.RefFamilyRelationInEbl)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Family_Relation_In_EBL");

                entity.Property(e => e.RefSubDepartment)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Sub_Department");

                entity.Property(e => e.RejoiningDate)
                    .HasColumnType("datetime")
                    .HasColumnName("rejoining_date");

                entity.Property(e => e.Religion)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("religion");

                entity.Property(e => e.ResignationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Resignation_Date");

                entity.Property(e => e.RevisedCtc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Revised_CTC");

                entity.Property(e => e.RevisedDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SparkId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Spark_ID");

                entity.Property(e => e.SparkId0nr1r).HasColumnName("SparkID_0NR_1R");

                entity.Property(e => e.SpouseName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.StatusId).HasColumnName("Status_ID");

                entity.Property(e => e.SubDept)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Subdepartment1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("subdepartment1");

                entity.Property(e => e.Tenure)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TransferDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Transfer_Date");

                entity.Property(e => e.TrngBatchId)
                    .HasMaxLength(50)
                    .HasColumnName("Trng_BatchID");

                entity.Property(e => e.TrngStatus)
                    .HasMaxLength(50)
                    .HasColumnName("trng_status");

                entity.Property(e => e.TrngSubStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Trng_Sub_Status");

                entity.Property(e => e.UserId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UserID");

                entity.Property(e => e.VerifiedId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Verified_ID");

                entity.Property(e => e.WindowId)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WindowsId0nr1r).HasColumnName("WindowsID_0NR_1R");

                entity.Property(e => e.WorkingExperience)
                    .HasMaxLength(500)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SupportStaffEmpFace>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SupportStaff_Emp_Face");

                entity.Property(e => e.CurrentDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Department)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("doj");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpName)
                    .HasMaxLength(1001)
                    .IsUnicode(false);

                entity.Property(e => e.Gender)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SystemAdminActivity>(entity =>
            {
                entity.ToTable("System_Admin_Activity");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Department)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmailId)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("Email_ID");

                entity.Property(e => e.EmailId0nr1r).HasColumnName("EmailID_0NR_1R");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpcodeLm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EmpcodeLM");

                entity.Property(e => e.LocationId).HasColumnName("Location_ID");

                entity.Property(e => e.MachinName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Machin_Name");

                entity.Property(e => e.SparkId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Spark_ID");

                entity.Property(e => e.SparkId0nr1r)
                    .HasMaxLength(10)
                    .HasColumnName("SparkID_0NR_1R")
                    .IsFixedLength();

                entity.Property(e => e.SubDept)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Sub_Dept");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Updated_By");

                entity.Property(e => e.WindowsId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WINDOWS_ID");

                entity.Property(e => e.WindowsId0nr1r).HasColumnName("WindowsID_0NR_1R");
            });

            modelBuilder.Entity<SystemAdminActivityNew>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("System_Admin_Activity_New");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.Department)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmailId)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("Email_ID");

                entity.Property(e => e.EmailId0nr1r).HasColumnName("EmailID_0NR_1R");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpcodeLm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EmpcodeLM");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.LocationId).HasColumnName("Location_ID");

                entity.Property(e => e.MachinName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Machin_Name");

                entity.Property(e => e.SparkId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Spark_ID");

                entity.Property(e => e.SparkId0nr1r)
                    .HasMaxLength(10)
                    .HasColumnName("SparkID_0NR_1R")
                    .IsFixedLength();

                entity.Property(e => e.SubDept)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Sub_Dept");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Updated_By");

                entity.Property(e => e.WindowsId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WINDOWS_ID");

                entity.Property(e => e.WindowsId0nr1r).HasColumnName("WindowsID_0NR_1R");
            });

            modelBuilder.Entity<TblBioEntryAccess>(entity =>
            {
                entity.ToTable("TBL_BioEntry_Access");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Opoid)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("OPOID");
            });

            modelBuilder.Entity<TblBusinessType>(entity =>
            {
                entity.ToTable("Tbl_BusinessType");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BusinessType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Code)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Isactive).HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<TblBuySell>(entity =>
            {
                entity.ToTable("Tbl_Buy_Sell");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ActionType)
                    .HasColumnName("Action_Type")
                    .HasComment("1 = Buyer, 2 = Seller");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Location)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProductInfo)
                    .IsUnicode(false)
                    .HasColumnName("Product_Info");
            });

            modelBuilder.Entity<TblCandidateDetail>(entity =>
            {
                entity.HasKey(e => e.Masterid)
                    .HasName("PK_tbl_CandidateDetail_1");

                entity.ToTable("TBL_CandidateDetail");

                entity.Property(e => e.Masterid)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("masterid");

                entity.Property(e => e.AadharCard)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.AadharStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.AccNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ActualDoj)
                    .HasColumnType("datetime")
                    .HasColumnName("ActualDOJ");

                entity.Property(e => e.AdharName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Anivdate)
                    .HasMaxLength(50)
                    .HasColumnName("anivdate");

                entity.Property(e => e.AnnualCtc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("AnnualCTC");

                entity.Property(e => e.Anyotherquali)
                    .HasMaxLength(50)
                    .HasColumnName("anyotherquali");

                entity.Property(e => e.BankLocation)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("Bank_Location");

                entity.Property(e => e.BasicDaRate)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("Basic_DA_Rate");

                entity.Property(e => e.Bloodgrp)
                    .HasMaxLength(50)
                    .HasColumnName("bloodgrp");

                entity.Property(e => e.CandidateLocation)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("Candidate_Location");

                entity.Property(e => e.Caste)
                    .HasMaxLength(50)
                    .HasColumnName("caste");

                entity.Property(e => e.CertificationComments)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("Certification_Comments");

                entity.Property(e => e.ClosedBy)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Closed_By");

                entity.Property(e => e.ConsaltantRef)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Consaltant_ref");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("Created_By");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.CurrentArea)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentLandmark)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.Currentdesig)
                    .HasMaxLength(50)
                    .HasColumnName("currentdesig");

                entity.Property(e => e.Dateofjoining)
                    .HasColumnType("datetime")
                    .HasColumnName("dateofjoining");

                entity.Property(e => e.Dateoftraining)
                    .HasColumnType("datetime")
                    .HasColumnName("dateoftraining");

                entity.Property(e => e.Department)
                    .HasMaxLength(50)
                    .HasColumnName("department");

                entity.Property(e => e.DifferentlyAbled).HasMaxLength(50);

                entity.Property(e => e.Dob)
                    .HasColumnType("datetime")
                    .HasColumnName("dob");

                entity.Property(e => e.DolPrev)
                    .HasColumnType("datetime")
                    .HasColumnName("DOL_Prev");

                entity.Property(e => e.EffortRefContactNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Effort_Ref_Contact_No");

                entity.Property(e => e.EffortRefEmpid)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Effort_Ref_EMPID");

                entity.Property(e => e.EffortRefName)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("Effort_Ref_Name");

                entity.Property(e => e.Emaild)
                    .HasMaxLength(50)
                    .HasColumnName("emaild");

                entity.Property(e => e.Emergcontno)
                    .HasMaxLength(50)
                    .HasColumnName("emergcontno");

                entity.Property(e => e.Emergcontperson)
                    .HasMaxLength(50)
                    .HasColumnName("emergcontperson");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(50)
                    .HasColumnName("empcode");

                entity.Property(e => e.EmploymentStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Employment_Status");

                entity.Property(e => e.EntryUpdatedbyDt)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EntryUpdatedby_dt");

                entity.Property(e => e.Entrydttm)
                    .HasColumnType("datetime")
                    .HasColumnName("entrydttm");

                entity.Property(e => e.EsicApplicability)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ESIC_applicability");

                entity.Property(e => e.Faddr1)
                    .HasMaxLength(250)
                    .HasColumnName("faddr1");

                entity.Property(e => e.Faddr2)
                    .HasMaxLength(250)
                    .HasColumnName("faddr2");

                entity.Property(e => e.Faddr3)
                    .HasMaxLength(250)
                    .HasColumnName("faddr3");

                entity.Property(e => e.Faddr4)
                    .HasMaxLength(250)
                    .HasColumnName("faddr4");

                entity.Property(e => e.Famrefcontact)
                    .HasMaxLength(50)
                    .HasColumnName("famrefcontact");

                entity.Property(e => e.Famrefname)
                    .HasMaxLength(50)
                    .HasColumnName("famrefname");

                entity.Property(e => e.Fathername)
                    .HasMaxLength(50)
                    .HasColumnName("fathername");

                entity.Property(e => e.Flandline)
                    .HasMaxLength(50)
                    .HasColumnName("flandline");

                entity.Property(e => e.Fmobile)
                    .HasMaxLength(50)
                    .HasColumnName("fmobile");

                entity.Property(e => e.Fname)
                    .HasMaxLength(50)
                    .HasColumnName("fname");

                entity.Property(e => e.Frdrefcontact)
                    .HasMaxLength(50)
                    .HasColumnName("frdrefcontact");

                entity.Property(e => e.Frdrefname)
                    .HasMaxLength(50)
                    .HasColumnName("frdrefname");

                entity.Property(e => e.FtPt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FT_PT");

                entity.Property(e => e.Fulladdr1)
                    .HasMaxLength(250)
                    .HasColumnName("fulladdr1");

                entity.Property(e => e.Fulladdr2)
                    .HasMaxLength(250)
                    .HasColumnName("fulladdr2");

                entity.Property(e => e.Gender)
                    .HasMaxLength(50)
                    .HasColumnName("gender");

                entity.Property(e => e.GrossSalPli)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("Gross_Sal_PLI");

                entity.Property(e => e.Handicap)
                    .HasMaxLength(50)
                    .HasColumnName("handicap");

                entity.Property(e => e.Handicapnature)
                    .HasMaxLength(50)
                    .HasColumnName("handicapnature");

                entity.Property(e => e.Handicapper)
                    .HasMaxLength(50)
                    .HasColumnName("handicapper");

                entity.Property(e => e.HighestQualification).HasMaxLength(50);

                entity.Property(e => e.HrLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HR_Location");

                entity.Property(e => e.Identificationmark)
                    .HasMaxLength(50)
                    .HasColumnName("identificationmark");

                entity.Property(e => e.Ifsccode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IFSCCode");

                entity.Property(e => e.InfFlag)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Inf_Flag");

                entity.Property(e => e.InternalRef)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Internal_Ref");

                entity.Property(e => e.Interviewdt)
                    .HasColumnType("datetime")
                    .HasColumnName("interviewdt");

                entity.Property(e => e.Interviewer)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("interviewer");

                entity.Property(e => e.Interviewstatus)
                    .HasMaxLength(50)
                    .HasColumnName("interviewstatus");

                entity.Property(e => e.Interviewtm)
                    .HasMaxLength(50)
                    .HasColumnName("interviewtm");

                entity.Property(e => e.IntrvFlag).HasColumnName("intrv_flag");

                entity.Property(e => e.Issueapptltr)
                    .HasMaxLength(50)
                    .HasColumnName("issueapptltr");

                entity.Property(e => e.Issueofrltr)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("issueofrltr");

                entity.Property(e => e.Joiningdesig)
                    .HasMaxLength(50)
                    .HasColumnName("joiningdesig");

                entity.Property(e => e.Languages)
                    .HasMaxLength(50)
                    .HasColumnName("languages");

                entity.Property(e => e.Lastctcpm)
                    .HasMaxLength(50)
                    .HasColumnName("lastctcpm");

                entity.Property(e => e.Licenseexpirydt)
                    .HasColumnType("datetime")
                    .HasColumnName("licenseexpirydt");

                entity.Property(e => e.Lname)
                    .HasMaxLength(50)
                    .HasColumnName("lname");

                entity.Property(e => e.Location)
                    .HasMaxLength(100)
                    .HasColumnName("location");

                entity.Property(e => e.LocationId).HasColumnName("Location_ID");

                entity.Property(e => e.Maritialstatus)
                    .HasMaxLength(50)
                    .HasColumnName("maritialstatus");

                entity.Property(e => e.Mname)
                    .HasMaxLength(50)
                    .HasColumnName("mname");

                entity.Property(e => e.Mode)
                    .HasMaxLength(50)
                    .HasColumnName("mode");

                entity.Property(e => e.ModeHrperson)
                    .HasMaxLength(50)
                    .HasColumnName("mode_hrperson");

                entity.Property(e => e.Mothername)
                    .HasMaxLength(50)
                    .HasColumnName("mothername");

                entity.Property(e => e.Nameofchildren)
                    .HasMaxLength(50)
                    .HasColumnName("nameofchildren");

                entity.Property(e => e.Nationality)
                    .HasMaxLength(50)
                    .HasColumnName("nationality");

                entity.Property(e => e.OfferLetterDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OfferLetter_date");

                entity.Property(e => e.PanCard)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Passportno)
                    .HasMaxLength(50)
                    .HasColumnName("passportno");

                entity.Property(e => e.PensionMember)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("Pension_Member")
                    .IsFixedLength();

                entity.Property(e => e.Percentage).HasMaxLength(50);

                entity.Property(e => e.PermArea)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.PermLandmark)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.PfApplicability)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PF_applicability");

                entity.Property(e => e.PfMember)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PF_Member")
                    .IsFixedLength();

                entity.Property(e => e.PfNo)
                    .HasMaxLength(100)
                    .HasColumnName("PF_No");

                entity.Property(e => e.PfWithdrawStatus)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PF_Withdraw_Status")
                    .IsFixedLength();

                entity.Property(e => e.Photoid)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("photoid");

                entity.Property(e => e.PinCodeForCurrent).HasColumnName("Pin_Code_ForCurrent");

                entity.Property(e => e.PinCodeForPermanant).HasColumnName("Pin_Code_ForPermanant");

                entity.Property(e => e.Placeofbirth)
                    .HasMaxLength(50)
                    .HasColumnName("placeofbirth");

                entity.Property(e => e.Postappliedfor)
                    .HasMaxLength(50)
                    .HasColumnName("postappliedfor");

                entity.Property(e => e.Postassigned)
                    .HasMaxLength(50)
                    .HasColumnName("postassigned");

                entity.Property(e => e.Prefix)
                    .HasMaxLength(50)
                    .HasColumnName("prefix");

                entity.Property(e => e.Prorefcontact)
                    .HasMaxLength(50)
                    .HasColumnName("prorefcontact");

                entity.Property(e => e.Prorefdesig)
                    .HasMaxLength(50)
                    .HasColumnName("prorefdesig");

                entity.Property(e => e.Prorefname)
                    .HasMaxLength(50)
                    .HasColumnName("prorefname");

                entity.Property(e => e.Purpose)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.Refreccontact)
                    .HasMaxLength(50)
                    .HasColumnName("refreccontact");

                entity.Property(e => e.Refreccuremp)
                    .HasMaxLength(50)
                    .HasColumnName("refreccuremp");

                entity.Property(e => e.Refrecdesig)
                    .HasMaxLength(50)
                    .HasColumnName("refrecdesig");

                entity.Property(e => e.Refrecname)
                    .HasMaxLength(50)
                    .HasColumnName("refrecname");

                entity.Property(e => e.Religion)
                    .HasMaxLength(50)
                    .HasColumnName("religion");

                entity.Property(e => e.Remark).IsUnicode(false);

                entity.Property(e => e.Round1).HasMaxLength(50);

                entity.Property(e => e.Round2).HasMaxLength(50);

                entity.Property(e => e.Round3).HasMaxLength(50);

                entity.Property(e => e.Round4).HasMaxLength(50);

                entity.Property(e => e.Saddr1)
                    .HasMaxLength(250)
                    .HasColumnName("saddr1");

                entity.Property(e => e.Saddr2)
                    .HasMaxLength(250)
                    .HasColumnName("saddr2");

                entity.Property(e => e.Saddr3)
                    .HasMaxLength(250)
                    .HasColumnName("saddr3");

                entity.Property(e => e.Saddr4)
                    .HasMaxLength(250)
                    .HasColumnName("saddr4");

                entity.Property(e => e.Slandline)
                    .HasMaxLength(50)
                    .HasColumnName("slandline");

                entity.Property(e => e.Smobile)
                    .HasMaxLength(50)
                    .HasColumnName("smobile");

                entity.Property(e => e.Spousename)
                    .HasMaxLength(50)
                    .HasColumnName("spousename");

                entity.Property(e => e.SubDeptName)
                    .HasMaxLength(50)
                    .HasColumnName("Sub_Dept_Name");

                entity.Property(e => e.Subcaste)
                    .HasMaxLength(50)
                    .HasColumnName("subcaste");

                entity.Property(e => e.Subdepartment)
                    .HasMaxLength(50)
                    .HasColumnName("subdepartment");

                entity.Property(e => e.Subdepartment1)
                    .HasMaxLength(50)
                    .HasColumnName("subdepartment1");

                entity.Property(e => e.TeleRound)
                    .HasMaxLength(50)
                    .HasColumnName("tele_round");

                entity.Property(e => e.Totalexpr)
                    .HasMaxLength(50)
                    .HasColumnName("totalexpr");

                entity.Property(e => e.TrainerEmpId)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Trainer_empID");

                entity.Property(e => e.TrainerName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Trainer_name");

                entity.Property(e => e.TrngBatchId).HasColumnName("Trng_BatchID");

                entity.Property(e => e.TrngStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Trng_Status");

                entity.Property(e => e.TrngSubStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Trng_Sub_Status");

                entity.Property(e => e.Uanno).HasColumnName("UANNO");

                entity.Property(e => e.WfoWfh)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WFO_WFH");

                entity.Property(e => e.YearofPassing).HasMaxLength(50);
            });

            modelBuilder.Entity<TblCandidateDocument>(entity =>
            {
                entity.HasKey(e => e.ImageId)
                    .HasName("PK__TBL_Cand__7516F4EC92561F73");

                entity.ToTable("TBL_CandidateDocument");

                entity.Property(e => e.ImageId)
                    .ValueGeneratedNever()
                    .HasColumnName("ImageID");

                entity.Property(e => e.ImageName).HasMaxLength(255);

                entity.Property(e => e.MasterId).HasColumnName("MasterID");
            });

            modelBuilder.Entity<TblCtcbreakup>(entity =>
            {
                entity.ToTable("tbl_CTCBreakup");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Basic).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.Bonus).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.Conveyance).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.ConveyanceYear).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.EsicEmployeeContribution)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("ESIC_EmployeeContribution");

                entity.Property(e => e.EsicEmployerContribution)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("ESIC_EmployerContribution");

                entity.Property(e => e.Gratuity).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.Hra)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("HRA");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NetSalaryMonth).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.NetSalaryYear).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.OtherAllowance).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.OtherAllowanceYear).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.PfEmployeeContribution)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("PF_EmployeeContribution");

                entity.Property(e => e.PfEmployerContribution)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("PF_EmployerContribution");

                entity.Property(e => e.Pli)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("PLI");

                entity.Property(e => e.ProfessionalTax).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.StatutoryBonus).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.TotalCtcperMonth)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("TotalCTCPerMonth");

                entity.Property(e => e.TotalCtcperYear)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("TotalCTCPerYear");

                entity.Property(e => e.YearlyBasic).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.YearlyBonus).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.YearlyEsicEmployeeContribution)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("YearlyESIC_EmployeeContribution");

                entity.Property(e => e.YearlyEsicEmployerContribution)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("YearlyESIC_EmployerContribution");

                entity.Property(e => e.YearlyGratuity).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.YearlyHra)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("YearlyHRA");

                entity.Property(e => e.YearlyPfEmployeeContribution)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("YearlyPF_EmployeeContribution");

                entity.Property(e => e.YearlyPfEmployerContribution)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("YearlyPF_EmployerContribution");

                entity.Property(e => e.YearlyPli)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("YearlyPLI");

                entity.Property(e => e.YearlyProfessionalTax).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.YearlyStatutoryBonus).HasColumnType("decimal(10, 2)");
            });

            modelBuilder.Entity<TblDate>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbl_Dates");

                entity.Property(e => e.AttDate)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Att_Date");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");
            });

            modelBuilder.Entity<TblDesignation>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDesignation");

                entity.Property(e => e.DepartMentId).HasColumnName("DepartMentID");

                entity.Property(e => e.DesignationName).HasMaxLength(50);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");
            });

            modelBuilder.Entity<TblDesignationBkNewLevel>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDesignation_bk_NewLevel");

                entity.Property(e => e.DepartMentId).HasColumnName("DepartMentID");

                entity.Property(e => e.DesignationName).HasMaxLength(50);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");
            });

            modelBuilder.Entity<TblEmpMaster>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblEmpMaster");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.LastWorkingDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<TblEmploymentStatus>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Tbl_Employment_Status");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TblExcelDatum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbl_ExcelData");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastWorkingDate).HasColumnType("datetime");

                entity.Property(e => e.ResignationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Resignation_Date");
            });

            modelBuilder.Entity<TblFirstFloorHr>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbl_FirstFloorHR");

                entity.Property(e => e.EmpCode).HasMaxLength(50);
            });

            modelBuilder.Entity<TblHrfloorType>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbl_HRFloorType");

                entity.Property(e => e.EmpCode).HasMaxLength(50);

                entity.Property(e => e.Location).HasMaxLength(50);
            });

            modelBuilder.Entity<TblHrmode>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TBL_HRmode");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Mode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("mode");
            });

            modelBuilder.Entity<TblLangdetail>(entity =>
            {
                entity.ToTable("TBL_langdetails");

                entity.HasIndex(e => e.Masterid, "IX_Masterid");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Language)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("language");

                entity.Property(e => e.Machinename)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("machinename");

                entity.Property(e => e.Masterid)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("masterid");

                entity.Property(e => e.Read)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Speak)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("speak");

                entity.Property(e => e.Write)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TblLangdetailsBackup>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TBL_langdetails_Backup");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Language)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("language");

                entity.Property(e => e.Machinename)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("machinename");

                entity.Property(e => e.Masterid)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("masterid");

                entity.Property(e => e.Read)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Speak)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("speak");

                entity.Property(e => e.Write)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TblLevel>(entity =>
            {
                entity.ToTable("Tbl_Level");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Designation)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DESIGNATION");

                entity.Property(e => e.Level)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LEVEL");

                entity.Property(e => e.LevelId).HasColumnName("LEVEL_ID");
            });

            modelBuilder.Entity<TblMstNoticePeriod>(entity =>
            {
                entity.HasKey(e => e.NoticePeriodId);

                entity.ToTable("tblMstNoticePeriod");

                entity.Property(e => e.EmpDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NoticePeriod)
                    .HasMaxLength(10)
                    .IsFixedLength();
            });

            modelBuilder.Entity<TblOutcome>(entity =>
            {
                entity.ToTable("TBL_outcome");

                entity.HasIndex(e => e.Masterid, "IX_Masid");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.AcademicRecord).HasColumnName("Academic_Record");

                entity.Property(e => e.AppPers).HasColumnName("app_pers");

                entity.Property(e => e.CommSkill).HasColumnName("comm_skill");

                entity.Property(e => e.Comments)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("comments");

                entity.Property(e => e.ConfLevel).HasColumnName("conf_level");

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.Empname)
                    .HasMaxLength(150)
                    .HasColumnName("empname");

                entity.Property(e => e.InsertedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Inserted_Date");

                entity.Property(e => e.InterDate)
                    .HasColumnType("datetime")
                    .HasColumnName("inter_date");

                entity.Property(e => e.InterPerf).HasColumnName("inter_perf");

                entity.Property(e => e.Interviewby)
                    .HasMaxLength(150)
                    .HasColumnName("interviewby");

                entity.Property(e => e.JobKnow).HasColumnName("job_know");

                entity.Property(e => e.Masterid)
                    .HasMaxLength(50)
                    .HasColumnName("masterid");

                entity.Property(e => e.NextIntrv)
                    .HasMaxLength(150)
                    .HasColumnName("Next_Intrv");

                entity.Property(e => e.OpsDesig)
                    .HasMaxLength(50)
                    .HasColumnName("OPS_desig");

                entity.Property(e => e.OpsName)
                    .HasMaxLength(100)
                    .HasColumnName("OPS_Name");

                entity.Property(e => e.Outcome)
                    .HasMaxLength(150)
                    .HasColumnName("outcome");

                entity.Property(e => e.PastExp).HasColumnName("Past_Exp");

                entity.Property(e => e.Process)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("process");

                entity.Property(e => e.Refby)
                    .HasMaxLength(150)
                    .HasColumnName("refby");

                entity.Property(e => e.Remark)
                    .HasMaxLength(1000)
                    .HasColumnName("remark");

                entity.Property(e => e.Secinterby)
                    .HasMaxLength(150)
                    .HasColumnName("secinterby");

                entity.Property(e => e.Secinterempcode)
                    .HasMaxLength(150)
                    .HasColumnName("secinterempcode");

                entity.Property(e => e.StabFac).HasColumnName("stab_fac");

                entity.Property(e => e.Status).HasMaxLength(50);

                entity.Property(e => e.Total).HasColumnName("total");
            });

            modelBuilder.Entity<TblPreviousEmpDetail1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TBL_PreviousEmpDetail1");

                entity.Property(e => e.Companyname)
                    .HasMaxLength(50)
                    .HasColumnName("companyname");

                entity.Property(e => e.Designation)
                    .HasMaxLength(50)
                    .HasColumnName("designation");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EMPCODE");

                entity.Property(e => e.ExpectedCtc)
                    .HasMaxLength(50)
                    .HasColumnName("expectedCTC");

                entity.Property(e => e.Fromdt)
                    .HasColumnType("datetime")
                    .HasColumnName("fromdt");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Masterid)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("masterid");

                entity.Property(e => e.Todt)
                    .HasColumnType("datetime")
                    .HasColumnName("todt");
            });

            modelBuilder.Entity<TblProcesswiseSalaryProposed>(entity =>
            {
                entity.ToTable("tbl_ProcesswiseSalaryProposed");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.LocationName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProcessName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProposedMonthlyCtc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("ProposedMonthlyCTC");

                entity.Property(e => e.ProposedNetCtcperMonth)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("ProposedNetCTCPerMonth");

                entity.Property(e => e.ProposedYearlyCtc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("ProposedYearlyCTC");
            });

            modelBuilder.Entity<TblQualification1>(entity =>
            {
                entity.ToTable("TBL_Qualification1");

                entity.HasIndex(e => e.Masterid, "IX_Masterid")
                    .HasFillFactor(90);

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Board)
                    .HasMaxLength(50)
                    .HasColumnName("board");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EMPCODE");

                entity.Property(e => e.Masterid)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("masterid");

                entity.Property(e => e.Percentage)
                    .HasMaxLength(50)
                    .HasColumnName("percentage");

                entity.Property(e => e.QualiLevel)
                    .HasMaxLength(50)
                    .HasColumnName("quali_level");

                entity.Property(e => e.Stream)
                    .HasMaxLength(50)
                    .HasColumnName("stream");

                entity.Property(e => e.Yrofpass)
                    .HasMaxLength(50)
                    .HasColumnName("yrofpass");
            });

            modelBuilder.Entity<TblQualification1Backup>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TBL_Qualification1_Backup");

                entity.Property(e => e.Board)
                    .HasMaxLength(50)
                    .HasColumnName("board");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EMPCODE");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Masterid)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("masterid");

                entity.Property(e => e.Percentage)
                    .HasMaxLength(50)
                    .HasColumnName("percentage");

                entity.Property(e => e.QualiLevel)
                    .HasMaxLength(50)
                    .HasColumnName("quali_level");

                entity.Property(e => e.Stream)
                    .HasMaxLength(50)
                    .HasColumnName("stream");

                entity.Property(e => e.Yrofpass)
                    .HasMaxLength(50)
                    .HasColumnName("yrofpass");
            });

            modelBuilder.Entity<TblReasonForSeperation>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Tbl_ReasonForSeperation");

                entity.Property(e => e.Reason)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TblReference>(entity =>
            {
                entity.ToTable("TBL_Reference");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EMPCODE");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Masterid)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("masterid");

                entity.Property(e => e.Refcontact)
                    .HasMaxLength(50)
                    .HasColumnName("refcontact");

                entity.Property(e => e.Refcurremp)
                    .HasMaxLength(50)
                    .HasColumnName("refcurremp");

                entity.Property(e => e.Refdesig)
                    .HasMaxLength(50)
                    .HasColumnName("refdesig");

                entity.Property(e => e.Refname)
                    .HasMaxLength(50)
                    .HasColumnName("refname");
            });

            modelBuilder.Entity<TblRoasterDetailsDemo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbl_RoasterDetailsDemo");

                entity.Property(e => e.AttDate)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ATT_DATE");

                entity.Property(e => e.AttShift)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ATT_shift");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EMPCODE");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Intime)
                    .HasColumnType("datetime")
                    .HasColumnName("INTIME");

                entity.Property(e => e.Location)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("LOCATION");

                entity.Property(e => e.Outtime)
                    .HasColumnType("datetime")
                    .HasColumnName("OUTTIME");

                entity.Property(e => e.Remark)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REMARK");

                entity.Property(e => e.UpdateEmpcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UPDATE_EMPCODE");

                entity.Property(e => e.UpdateTime)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATE_TIME");
            });

            modelBuilder.Entity<TblRole>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblRole");

                entity.Property(e => e.Admin)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CustomUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Employee)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Hr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HR");

                entity.Property(e => e.Manager)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PageName)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TblSalaryHead>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbl_SalaryHeads");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.SalaryHead)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TblSecondFloorHr>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbl_SecondFloorHR");

                entity.Property(e => e.EmpCode).HasMaxLength(50);
            });

            modelBuilder.Entity<TblTelephonicInterview>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TBL_TelephonicInterview");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(50)
                    .HasColumnName("empcode");

                entity.Property(e => e.Empname)
                    .HasMaxLength(50)
                    .HasColumnName("empname");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("id");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LocationId).HasColumnName("Location_ID");
            });

            modelBuilder.Entity<TblTempReference>(entity =>
            {
                entity.ToTable("TBL_tempReference");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Domain)
                    .HasMaxLength(150)
                    .HasColumnName("domain");

                entity.Property(e => e.Machinename)
                    .HasMaxLength(50)
                    .HasColumnName("machinename");

                entity.Property(e => e.Masterid)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("masterid");

                entity.Property(e => e.Refcontact)
                    .HasMaxLength(50)
                    .HasColumnName("refcontact");

                entity.Property(e => e.Refcurremp)
                    .HasMaxLength(50)
                    .HasColumnName("refcurremp");

                entity.Property(e => e.Refdesig)
                    .HasMaxLength(50)
                    .HasColumnName("refdesig");

                entity.Property(e => e.Refname)
                    .HasMaxLength(50)
                    .HasColumnName("refname");
            });

            modelBuilder.Entity<TblVerticalMaster>(entity =>
            {
                entity.ToTable("TBL_Vertical_Master");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Abbrevation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AbbrevationName)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("Abbrevation_Name");
            });

            modelBuilder.Entity<TblYear>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbl_Year");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Month).HasMaxLength(50);
            });

            modelBuilder.Entity<Tblcal2024>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TBLCAL_2024");

                entity.Property(e => e.Date).HasMaxLength(255);

                entity.Property(e => e.Holiday).HasMaxLength(255);

                entity.Property(e => e.Location).HasMaxLength(255);
            });

            modelBuilder.Entity<TblupdatedDesignation>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TBLupdated_Designation");

                entity.Property(e => e.Designation)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Empcode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TblupdatedWocount>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TBLupdated_WOcount");

                entity.Property(e => e.Department)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DeptId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DeptID");

                entity.Property(e => e.Designation)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Level)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Wocount)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WOCount");
            });

            modelBuilder.Entity<Temp20230710ContractCode>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Temp_20230710_ContractCode");

                entity.Property(e => e.Abbrevation)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ContractCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID");

                entity.Property(e => e.SubcontractL1)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SubcontractL2)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Subdept)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.VerticalName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("vertical_Name");
            });

            modelBuilder.Entity<TempCheckTable>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TempCheckTable");

                entity.Property(e => e.Empcode).HasColumnName("empcode");

                entity.Property(e => e.Empcodelm).HasColumnName("empcodelm");

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TempFingerPrintDatum>(entity =>
            {
                entity.ToTable("temp_FingerPrintData");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.EmpId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EmpID");

                entity.Property(e => e.Firbinary)
                    .IsUnicode(false)
                    .HasColumnName("FIRBinary");

                entity.Property(e => e.Firtext)
                    .IsUnicode(false)
                    .HasColumnName("FIRText");

                entity.Property(e => e.MasterId).HasColumnName("MasterID");

                entity.Property(e => e.RegPassword)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RegType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RegistrationBy)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RegistrationMachine)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RegistrationTime)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<TempLangdetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Temp_langdetails");

                entity.Property(e => e.Empcode).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Language)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("language");

                entity.Property(e => e.Machinename)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("machinename");

                entity.Property(e => e.Masterid)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("masterid");

                entity.Property(e => e.Read)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Speak)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("speak");

                entity.Property(e => e.Write)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TempMasterPune>(entity =>
            {
                entity.ToTable("Temp_Master_Pune");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.AccNo)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.AccessRole)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccessType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Access_Type");

                entity.Property(e => e.ActivatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Activated_By");

                entity.Property(e => e.AdharCardNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Adhar_Card_No");

                entity.Property(e => e.Am)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("AM");

                entity.Property(e => e.AnnivDate).HasColumnType("datetime");

                entity.Property(e => e.Bank)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.BlackListed).HasColumnName("Black_Listed");

                entity.Property(e => e.BloodGroup)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Branch)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.CardNo).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Company1)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Company2)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Company3)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Company4)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.ConfirmationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("confirmation_date");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Ctc).HasColumnName("CTC");

                entity.Property(e => e.CurrentArea)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentCity)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentDesignation)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentHouseNo)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("CurrentHouse_No");

                entity.Property(e => e.CurrentLandmark)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentLocation)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentMobile)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentPhone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentState)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.CurrentStreet)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Department)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Designation1)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Designation2)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Designation3)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Designation4)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.DialerId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DialerID");

                entity.Property(e => e.Dob)
                    .HasColumnType("datetime")
                    .HasColumnName("DOB");

                entity.Property(e => e.Doc)
                    .HasColumnType("datetime")
                    .HasColumnName("DOC");

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.Dot)
                    .HasColumnType("datetime")
                    .HasColumnName("DOT");

                entity.Property(e => e.EffortLastDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Effort_Last_Date");

                entity.Property(e => e.EmailId0nr1r).HasColumnName("EmailID_0NR_1R");

                entity.Property(e => e.EmailId1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Email_ID");

                entity.Property(e => e.Emailid)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.EmergencyContact)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.EmergencyContactName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpCodeLm)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("EmpCodeLM");

                entity.Property(e => e.EmployeeType).HasColumnName("Employee_Type");

                entity.Property(e => e.ExitStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Exit_Status");

                entity.Property(e => e.FathersName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.FinalStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Final_Status");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.Fnfdone)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FNFDONE");

                entity.Property(e => e.Gboard)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("GBoard");

                entity.Property(e => e.Gender)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Gper)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("GPer");

                entity.Property(e => e.Grade)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.GroupName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Gstream)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("GStream");

                entity.Property(e => e.Gyear)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("GYear");

                entity.Property(e => e.Handicap)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("handicap");

                entity.Property(e => e.Handicapnature)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("handicapnature");

                entity.Property(e => e.Handicapper)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("handicapper");

                entity.Property(e => e.HrLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("HR_Location");

                entity.Property(e => e.Hrupdate)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("HRupdate");

                entity.Property(e => e.Hsboard)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("HSBoard");

                entity.Property(e => e.Hsper)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("HSPer");

                entity.Property(e => e.HssStream)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Hssboard)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("HSSBoard");

                entity.Property(e => e.Hssper)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("HSSPer");

                entity.Property(e => e.Hsstream)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("HSStream");

                entity.Property(e => e.Hssyear)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("HSSYear");

                entity.Property(e => e.Hsyear)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("HSYear");

                entity.Property(e => e.Identificationmark)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("identificationmark");

                entity.Property(e => e.IntrvFlag).HasColumnName("Intrv_Flag");

                entity.Property(e => e.Itupdate)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ITupdate");

                entity.Property(e => e.JoiningDesignation)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Languages)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("languages");

                entity.Property(e => e.LastCtcDrawn).HasColumnName("Last_CTC_Drawn");

                entity.Property(e => e.LastCtcpa)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("LastCTCPA");

                entity.Property(e => e.LastName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.LastWorkingMonth)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Last_Working_Month");

                entity.Property(e => e.LogFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MaritalStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.MedicalHistory)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.MiddleName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.MothersMaidenName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.Nameofchildren)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.Nationality)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("nationality");

                entity.Property(e => e.NoticePeriod)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.OfferLetterDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OfferLetter_Date");

                entity.Property(e => e.Om)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("OM");

                entity.Property(e => e.OpoEmailId)
                    .HasMaxLength(550)
                    .IsUnicode(false)
                    .HasColumnName("OPO_EmailID");

                entity.Property(e => e.OpoJoiningDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OPO_Joining_Date");

                entity.Property(e => e.OtherQua)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.PaidLeave).HasColumnName("Paid_Leave");

                entity.Property(e => e.PanCardNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PAN_Card_No");

                entity.Property(e => e.Passportno)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("passportno");

                entity.Property(e => e.Password)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentArea)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentCity)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentHouseNo)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("PermanentHouse_No");

                entity.Property(e => e.PermanentLandmark)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentMobile)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentPhone)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentState)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.PermanentStreet)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Pgboard)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("PGBoard");

                entity.Property(e => e.Pgper)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("PGPer");

                entity.Property(e => e.Pgyear)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("PGYear");

                entity.Property(e => e.Photo)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Placeofbirth)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("placeofbirth");

                entity.Property(e => e.Prefix)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PreviousEmpcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Previous_EMPCODE");

                entity.Property(e => e.Pstream)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("PStream");

                entity.Property(e => e.ReasonForLeaving)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("Reason_For_Leaving");

                entity.Property(e => e.RefCheckedName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Checked_Name");

                entity.Property(e => e.RefCheckedNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Checked_No");

                entity.Property(e => e.RefDepartment)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Department");

                entity.Property(e => e.RefDesignation)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Designation");

                entity.Property(e => e.RefEmpcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_EMPCode");

                entity.Property(e => e.RefFamilyRelationInEbl)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Family_Relation_In_EBL");

                entity.Property(e => e.RefSubDepartment)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ref_Sub_Department");

                entity.Property(e => e.RejoiningDate)
                    .HasColumnType("datetime")
                    .HasColumnName("rejoining_date");

                entity.Property(e => e.Religion)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("religion");

                entity.Property(e => e.ResignationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Resignation_Date");

                entity.Property(e => e.SparkId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Spark_ID");

                entity.Property(e => e.SparkId0nr1r).HasColumnName("SparkID_0NR_1R");

                entity.Property(e => e.SpouseName)
                    .HasMaxLength(2500)
                    .IsUnicode(false);

                entity.Property(e => e.Status)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.StatusId).HasColumnName("Status_ID");

                entity.Property(e => e.SubDept)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.Tenure)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Tm)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("TM");

                entity.Property(e => e.TotalWorkingExperience)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Total_working_Experience");

                entity.Property(e => e.UserId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UserID");

                entity.Property(e => e.VerifiedId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Verified_ID");

                entity.Property(e => e.WindowId)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WindowsId0nr1r).HasColumnName("WindowsID_0NR_1R");

                entity.Property(e => e.WorkingExperience)
                    .HasMaxLength(5000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TempPreviousEmpDetail1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("temp_PreviousEmpDetail1");

                entity.Property(e => e.Companyname)
                    .HasMaxLength(50)
                    .HasColumnName("companyname");

                entity.Property(e => e.Designation)
                    .HasMaxLength(50)
                    .HasColumnName("designation");

                entity.Property(e => e.Domain)
                    .HasMaxLength(150)
                    .HasColumnName("domain");

                entity.Property(e => e.ExpectedCtc)
                    .HasMaxLength(50)
                    .HasColumnName("expectedCTC");

                entity.Property(e => e.Fromdt)
                    .HasColumnType("datetime")
                    .HasColumnName("fromdt");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Machinename)
                    .HasMaxLength(50)
                    .HasColumnName("machinename");

                entity.Property(e => e.Masterid)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("masterid");

                entity.Property(e => e.Todt)
                    .HasColumnType("datetime")
                    .HasColumnName("todt");
            });

            modelBuilder.Entity<TempTblQualification>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("temp_tblQualification");

                entity.Property(e => e.AnyOther)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("any_other");

                entity.Property(e => e.Board)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("board");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Masterid).HasColumnName("masterid");

                entity.Property(e => e.Percentage)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("percentage");

                entity.Property(e => e.QualiLevel)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("quali_level");

                entity.Property(e => e.SessionId)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("Session_ID");

                entity.Property(e => e.Stream)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("stream");

                entity.Property(e => e.Yrofpass)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("yrofpass");
            });

            modelBuilder.Entity<TempTrainerdatum>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.BatchEndDate).HasColumnType("datetime");

                entity.Property(e => e.BatchId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BatchID");

                entity.Property(e => e.BatchStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CandidateName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DateOfJoining).HasColumnType("datetime");

                entity.Property(e => e.DateOfTraining).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.MasterId)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("MasterID");

                entity.Property(e => e.Process)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Recdate).HasColumnType("datetime");

                entity.Property(e => e.TrainerEmpcode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrainerMgrEmpcode)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TerminationHistory>(entity =>
            {
                entity.ToTable("Termination_History");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Comment)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.SuperName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Super_Name");

                entity.Property(e => e.TDate)
                    .HasColumnType("datetime")
                    .HasColumnName("T_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TDept)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("T_Dept");

                entity.Property(e => e.TSubDept)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("T_SubDept");

                entity.Property(e => e.TfromDept)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TFrom_Dept");

                entity.Property(e => e.TfromEmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TFrom_EmpCode");

                entity.Property(e => e.TfromName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TFrom_Name");
            });

            modelBuilder.Entity<TerminationHistoryLog>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Termination_History_Log");

                entity.Property(e => e.Comment)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.SuperName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Super_Name");

                entity.Property(e => e.TDate)
                    .HasColumnType("datetime")
                    .HasColumnName("T_Date");

                entity.Property(e => e.TDept)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("T_Dept");

                entity.Property(e => e.TSubDept)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("T_SubDept");

                entity.Property(e => e.TfromDept)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TFrom_Dept");

                entity.Property(e => e.TfromEmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TFrom_EmpCode");

                entity.Property(e => e.TfromName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TFrom_Name");
            });

            modelBuilder.Entity<Time>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Time");

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.Startdate)
                    .HasColumnType("datetime")
                    .HasColumnName("startdate");
            });

            modelBuilder.Entity<Time1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Time1");

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.Sec).HasColumnType("datetime");

                entity.Property(e => e.Startdate)
                    .HasColumnType("datetime")
                    .HasColumnName("startdate");
            });

            modelBuilder.Entity<Tmpmain2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tmpmain2");

                entity.Property(e => e.AvgRating)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("Avg Rating");

                entity.Property(e => e.QuestionName)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("Question Name");

                entity.Property(e => e.SurveyName)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("Survey Name");

                entity.Property(e => e.ThemeName)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("Theme Name");

                entity.Property(e => e._1).HasColumnName("1");

                entity.Property(e => e._2).HasColumnName("2");

                entity.Property(e => e._3).HasColumnName("3");

                entity.Property(e => e._4).HasColumnName("4");

                entity.Property(e => e._5).HasColumnName("5");
            });

            modelBuilder.Entity<TrainerDatum>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Designation).HasMaxLength(255);

                entity.Property(e => e.EmpCode).HasMaxLength(255);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Location).HasMaxLength(255);

                entity.Property(e => e.Name).HasMaxLength(255);
            });

            modelBuilder.Entity<TrainingAccess>(entity =>
            {
                entity.ToTable("Training_Access");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AccessDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrainingBatch>(entity =>
            {
                entity.HasKey(e => e.TrainingId);

                entity.ToTable("Training_Batch");

                entity.Property(e => e.TrainingId).HasColumnName("Training_id");

                entity.Property(e => e.BatchName)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("Batch_Name");

                entity.Property(e => e.OpsHandoverDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OPS_Handover_Date");

                entity.Property(e => e.Status).HasMaxLength(50);

                entity.Property(e => e.Trainer)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrainingDept)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Training_dept");

                entity.Property(e => e.TrainingEnddate)
                    .HasColumnType("datetime")
                    .HasColumnName("Training_enddate");

                entity.Property(e => e.TrainingStartdate)
                    .HasColumnType("datetime")
                    .HasColumnName("Training_startdate");

                entity.Property(e => e.TrainingSubdept)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Training_subdept");

                entity.Property(e => e.TranerEbl)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Traner_ebl");

                entity.Property(e => e.TransferDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Transfer_Date");

                entity.Property(e => e.TransferFrom)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Transfer_From");

                entity.Property(e => e.UpdateBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("update_by");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<TrainingFAnswerSubmitted>(entity =>
            {
                entity.ToTable("TrainingF_AnswerSubmitted");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Answer1)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Answer10)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Answer11)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Answer12)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Answer13)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Answer14)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Answer2)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Answer3)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Answer4)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Answer5)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Answer6)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Answer7)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Answer8)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Answer9)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Date).HasColumnType("datetime");

                entity.Property(e => e.Process)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SubmittedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrainerName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrainingFLogin>(entity =>
            {
                entity.ToTable("TrainingF_Login");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Password)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Process)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UserType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Username)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrainingFQuestion>(entity =>
            {
                entity.ToTable("TrainingF_Questions");

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Question)
                    .HasMaxLength(350)
                    .IsUnicode(false);

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrainingHistory>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TRAINING_HISTORY");

                entity.Property(e => e.BatchAssignedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("batch_assignedBY");

                entity.Property(e => e.BatchAssignedEndDt)
                    .HasColumnType("datetime")
                    .HasColumnName("batch_assignedENdDT");

                entity.Property(e => e.BatchAssignedStrtDt)
                    .HasColumnType("datetime")
                    .HasColumnName("batch_assignedStrtDT");

                entity.Property(e => e.BatchId)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("batchID");

                entity.Property(e => e.BatchUnassignedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("batch_unassignedBY");

                entity.Property(e => e.CName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("c_name");

                entity.Property(e => e.CStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("c_status");

                entity.Property(e => e.EmpCode).HasMaxLength(50);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.TrainerEbl)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TrainerEBL");
            });

            modelBuilder.Entity<TraningAtt>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TRANING_ATT");

                entity.Property(e => e.AgentName)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("Agent_name");

                entity.Property(e => e.AttComments)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("ATT_COMMENTS");

                entity.Property(e => e.AttDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ATT_DATE")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.AttStatus)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ATT_STATUS");

                entity.Property(e => e.BatchId)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Batch_ID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Masterid).HasColumnName("MASTERID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("UPDATED_BY");
            });

            modelBuilder.Entity<TypeCandidateAttendanceDatum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Type_CandidateAttendanceData");

                entity.Property(e => e.Attendance)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AttendanceDate).HasColumnType("datetime");

                entity.Property(e => e.CandidateName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MasterId)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("MasterID");

                entity.Property(e => e.Remark).IsUnicode(false);

                entity.Property(e => e.Status).HasColumnName("status");
            });

            modelBuilder.Entity<UnusedTab>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("UnusedTab");

                entity.Property(e => e.ColName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.LatestDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Latest_Date");

                entity.Property(e => e.OldestDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Oldest_Date");

                entity.Property(e => e.TabName)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<UpdateAppointment>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Update_Appointment");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(255)
                    .HasColumnName("EMPCODE");

                entity.Property(e => e.OfferLetterDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OfferLetter_Date");
            });

            modelBuilder.Entity<UpdateDoj>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("UpdateDOJ");

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Empcode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.OphandoverDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OPHandoverDate");
            });

            modelBuilder.Entity<UpdateDotjh20230610>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("UpdateDOTJH_20230610");

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.Dot)
                    .HasColumnType("datetime")
                    .HasColumnName("DOT");

                entity.Property(e => e.Empcode)
                    .HasMaxLength(255)
                    .HasColumnName("EMPCode");

                entity.Property(e => e.HandoverDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Handover date");

                entity.Property(e => e.HandoverDateRemarks)
                    .HasMaxLength(255)
                    .HasColumnName("Handover Date Remarks");

                entity.Property(e => e.Location).HasMaxLength(255);

                entity.Property(e => e.Name).HasMaxLength(255);
            });

            modelBuilder.Entity<UpdatedTrainingDay>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Updated_TrainingDays");

                entity.Property(e => e.DeptName)
                    .HasMaxLength(255)
                    .HasColumnName("Dept_Name");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Location).HasMaxLength(255);

                entity.Property(e => e.SubDeptName)
                    .HasMaxLength(255)
                    .HasColumnName("Sub_Dept_Name");

                entity.Property(e => e.TotalTrainingDays).HasColumnName("Total Training Days");

                entity.Property(e => e.TrainingPaid)
                    .HasMaxLength(255)
                    .HasColumnName("Training_Paid");

                entity.Property(e => e.UpdatedTotalTrainingDays).HasColumnName("Updated_ Total Training Days");

                entity.Property(e => e.UpdatedTrainingPaidStatus)
                    .HasMaxLength(255)
                    .HasColumnName("Updated_ Training_Paid Status");
            });

            modelBuilder.Entity<UploadAdharCard>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Upload_AdharCard");

                entity.Property(e => e.AadharCardNo)
                    .HasMaxLength(255)
                    .HasColumnName("Aadhar Card No");

                entity.Property(e => e.Dept).HasMaxLength(255);

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(255)
                    .HasColumnName("Emp Code");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .HasColumnName("First Name");

                entity.Property(e => e.LastName)
                    .HasMaxLength(255)
                    .HasColumnName("Last Name");

                entity.Property(e => e.SubDept)
                    .HasMaxLength(255)
                    .HasColumnName("Sub Dept");
            });

            modelBuilder.Entity<UploadCircular>(entity =>
            {
                entity.ToTable("Upload_Circular");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.FileName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FilePath)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.Status).HasDefaultValueSql("((1))");

                entity.Property(e => e.Title)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UploadBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UploadDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<UploadImg>(entity =>
            {
                entity.ToTable("Upload_Img");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.FileName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.PhotoPath)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Status).HasDefaultValueSql("((1))");

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UploadBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UploadDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Upload_Date")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<UploadWarning>(entity =>
            {
                entity.ToTable("Upload_Warning");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.SystemIp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SystemIP");

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UploadBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UploadDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Warning)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<UserAccess>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("UserAccess");

                entity.Property(e => e.AccessRole).HasMaxLength(20);

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.ParentId).HasColumnName("ParentID");

                entity.Property(e => e.Password)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Title).HasMaxLength(100);
            });

            modelBuilder.Entity<UserHrRequisition>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("User_HR_Requisition");

                entity.Property(e => e.Empid)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("EMPID");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.Isactive).HasColumnName("isactive");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Password)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("password");

                entity.Property(e => e.Username)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("username");

                entity.Property(e => e.Usertype)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("usertype");
            });

            modelBuilder.Entity<UserLogin>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("User_Login");

                entity.Property(e => e.Empid)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("EMPID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Isactive).HasColumnName("isactive");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Password)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("password");

                entity.Property(e => e.Username)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("username");

                entity.Property(e => e.Usertype)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("usertype");
            });

            modelBuilder.Entity<UserMaster>(entity =>
            {
                entity.ToTable("User_Master");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AddedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Password).HasMaxLength(50);

                entity.Property(e => e.RepeatPassword)
                    .HasMaxLength(50)
                    .HasColumnName("Repeat_Password");

                entity.Property(e => e.RoleId).HasColumnName("RoleID");

                entity.Property(e => e.UserName)
                    .HasMaxLength(50)
                    .HasColumnName("User_Name");

                entity.Property(e => e.WhenEntered)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<ViewNremployee>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_NREmployees");

                entity.Property(e => e.AttShift)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ATT_shift");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Vika>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("vikas");

                entity.Property(e => e.Data)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("data");

                entity.Property(e => e.IndexSize)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("index_size");

                entity.Property(e => e.Name)
                    .HasMaxLength(128)
                    .HasColumnName("name");

                entity.Property(e => e.Reserved)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reserved");

                entity.Property(e => e.RowCount)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("row_count");

                entity.Property(e => e.Unused)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("unused");
            });

            modelBuilder.Entity<WarningDispatch>(entity =>
            {
                entity.ToTable("Warning_Dispatch");

                entity.Property(e => e.WarningDispatchId).HasColumnName("Warning_Dispatch_ID");

                entity.Property(e => e.ClosedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Closed_Date");

                entity.Property(e => e.CurrentLocation).HasMaxLength(500);

                entity.Property(e => e.Departmnet).HasMaxLength(500);

                entity.Property(e => e.Designation).HasMaxLength(500);

                entity.Property(e => e.EmpName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmployeeCode)
                    .HasMaxLength(500)
                    .HasColumnName("Employee_Code");

                entity.Property(e => e.EmployeeLmanagerCode)
                    .HasMaxLength(500)
                    .HasColumnName("Employee_LManager_Code");

                entity.Property(e => e.LevelId).HasColumnName("LevelID");

                entity.Property(e => e.Reject).HasDefaultValueSql("((0))");

                entity.Property(e => e.Remark).HasMaxLength(500);

                entity.Property(e => e.SubDept)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Type).HasMaxLength(500);

                entity.Property(e => e.UploadBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Warning).HasMaxLength(500);

                entity.Property(e => e.WarningDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Warning_Date");

                entity.Property(e => e.WarningHrStatus)
                    .HasColumnName("Warning_HR_Status")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.WarningStatus).HasColumnName("Warning_Status");
            });

            modelBuilder.Entity<WarningDispatchDeleteTrg>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Warning_Dispatch_Delete_Trg");

                entity.Property(e => e.ClosedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Closed_Date");

                entity.Property(e => e.CurrentLocation).HasMaxLength(500);

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Departmnet).HasMaxLength(500);

                entity.Property(e => e.Designation).HasMaxLength(500);

                entity.Property(e => e.EmpName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmployeeCode)
                    .HasMaxLength(500)
                    .HasColumnName("Employee_Code");

                entity.Property(e => e.EmployeeLmanagerCode)
                    .HasMaxLength(500)
                    .HasColumnName("Employee_LManager_Code");

                entity.Property(e => e.LevelId).HasColumnName("LevelID");

                entity.Property(e => e.Remark).HasMaxLength(500);

                entity.Property(e => e.SubDept)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Type).HasMaxLength(500);

                entity.Property(e => e.UploadBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Warning).HasMaxLength(500);

                entity.Property(e => e.WarningDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Warning_Date");

                entity.Property(e => e.WarningHrStatus).HasColumnName("Warning_HR_Status");

                entity.Property(e => e.WarningStatus).HasColumnName("Warning_Status");
            });

            modelBuilder.Entity<WarningDispatchLog>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Warning_Dispatch_LOGS");

                entity.Property(e => e.ClosedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Closed_Date");

                entity.Property(e => e.CurrentLocation).HasMaxLength(500);

                entity.Property(e => e.Departmnet).HasMaxLength(500);

                entity.Property(e => e.Designation).HasMaxLength(500);

                entity.Property(e => e.EmpName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmployeeCode)
                    .HasMaxLength(500)
                    .HasColumnName("Employee_Code");

                entity.Property(e => e.EmployeeLmanagerCode)
                    .HasMaxLength(500)
                    .HasColumnName("Employee_LManager_Code");

                entity.Property(e => e.LevelId).HasColumnName("LevelID");

                entity.Property(e => e.Remark).HasMaxLength(500);

                entity.Property(e => e.SubDept)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Type).HasMaxLength(500);

                entity.Property(e => e.UploadBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Warning).HasMaxLength(500);

                entity.Property(e => e.WarningDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Warning_Date");

                entity.Property(e => e.WarningDispatchId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("Warning_Dispatch_ID");

                entity.Property(e => e.WarningHrStatus).HasColumnName("Warning_HR_Status");

                entity.Property(e => e.WarningStatus).HasColumnName("Warning_Status");
            });

            modelBuilder.Entity<WarningHistory>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Warning_History");

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.SuperName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Super_Name");

                entity.Property(e => e.WDate)
                    .HasColumnType("datetime")
                    .HasColumnName("W_Date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.WDept)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("W_Dept");

                entity.Property(e => e.WSubDept)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("W_SubDept");

                entity.Property(e => e.WfromDept)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WFrom_Dept");

                entity.Property(e => e.WfromEmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WFrom_EmpCode");

                entity.Property(e => e.WfromName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WFrom_Name");
            });

            modelBuilder.Entity<WarningHistoryLog>(entity =>
            {
                entity.ToTable("Warning_History_Log");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CloseDate).HasColumnType("datetime");

                entity.Property(e => e.Comment)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Doj)
                    .HasColumnType("datetime")
                    .HasColumnName("DOJ");

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OpenDate).HasColumnType("datetime");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.SuperName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Super_Name");

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WDate)
                    .HasColumnType("datetime")
                    .HasColumnName("W_Date");

                entity.Property(e => e.WDept)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("W_Dept");

                entity.Property(e => e.WExtendedReason)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("W_ExtendedReason");

                entity.Property(e => e.WStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("W_Status");

                entity.Property(e => e.WSubDept)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("W_SubDept");

                entity.Property(e => e.WType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("W_Type");

                entity.Property(e => e.WfromDept)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WFrom_Dept");

                entity.Property(e => e.WfromEmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WFrom_EmpCode");

                entity.Property(e => e.WfromName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WFrom_Name");
            });

            modelBuilder.Entity<WarningLetter>(entity =>
            {
                entity.ToTable("Warning_Letter");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ClosedDate).HasColumnType("datetime");

                entity.Property(e => e.Department)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Designation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpCodeLm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EmpCodeLM");

                entity.Property(e => e.EmpName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Gender)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.HrwarningDate)
                    .HasColumnType("datetime")
                    .HasColumnName("HRWarning_Date");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Reason)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Status).HasDefaultValueSql("((0))");

                entity.Property(e => e.SystemIp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SystemIP");

                entity.Property(e => e.Types)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UploadBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UploadDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Warnings)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<WarningLevel>(entity =>
            {
                entity.ToTable("Warning_Levels");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.LevelId).HasColumnName("LevelID");

                entity.Property(e => e.WarningLevel1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Warning_Level");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
